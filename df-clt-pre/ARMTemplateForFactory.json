{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "df-clt-pre"
		},
		"AKV_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-pre-clt.vault.azure.net/"
		},
		"AzureBlobStorage1_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "blob-beg-connection"
		},
		"DB_CLT_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "bbdd-beg-connection"
		},
		"DB_DIBICA_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "dibica-beg-connection"
		},
		"DB_TERRITORIAL_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "territorial-beg-connection"
		},
		"SFTP_CLT_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "10.51.192.54"
		},
		"SFTP_CLT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Pclt_oec"
		},
		"AzureSqlDatabase55_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/083bb4ff-85bb-4801-bea6-6cb11178ebe4/resourceGroups/iaz-pre-rg/providers/Microsoft.Sql/servers/clt-db-pre"
		},
		"AzureSqlDatabase55_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"AzureSqlDatabase55_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"clt-db-pre.database.windows.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_BAIXES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_BEG_BAIXES_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_BAIXES_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Carrega": {
									"value": "@pipeline().parameters.Data_Carrega",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_BEG_BAIXES_STG_HIST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_BEG_BAIXES_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_BAIXES_STG_HIST",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Carrega": {
									"value": "@pipeline().parameters.Data_Carrega",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_BEG_BAIXES_ODS1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_BEG_BAIXES_STG_HIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_BAIXES_ODS1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Carrega": {
									"value": "@pipeline().parameters.Data_Carrega",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_BEG_BAIXES_ODS2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_BEG_BAIXES_ODS1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_BAIXES_ODS2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_BEG_BAIXES_ODS3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_BEG_BAIXES_ODS2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_BAIXES_ODS3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Carrega": {
									"value": "@pipeline().parameters.Data_Carrega",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_BEG_BAIXES_ODS4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_BEG_BAIXES_ODS3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_BAIXES_ODS4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Carrega": {
									"value": "@pipeline().parameters.Data_Carrega",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_BEG_BAIXES_DM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_BEG_BAIXES_ODS4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_BAIXES_DM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Carrega": {
									"value": "@pipeline().parameters.Data_Carrega",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202107"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX BAIXES"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_BAIXES_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_BAIXES_STG_HIST')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_BAIXES_ODS1')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_BAIXES_ODS2')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_BAIXES_ODS3')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_BAIXES_ODS4')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_BAIXES_DM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_BAIXES_DM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_DM_BAIXES",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_BAIXES",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODSFactIndicadors": {},
									"DMFactIndicadors": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX BAIXES/DM"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_DM_BAIXES')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_BAIXES_HISTORICO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FIJAR_INICIO",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_F_FIN",
							"value": {
								"value": "@pipeline().parameters.P_INI",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IGUALA_FI",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "FIJAR_INICIO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_F_FIN_2",
							"value": {
								"value": "@variables('V_F_FIN')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "BUCLE",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "IGUALA_FI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('V_UNTIL')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CHECK_FIN_BUCLE",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "PL_BEG_BAIXES",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_UNTIL",
										"value": {
											"value": "@bool(lessOrEquals(pipeline().parameters.P_FIN, variables('V_F_FIN')))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CHECK_FIN_BUCLE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_F_FIN",
										"value": {
											"value": "@if(equals(substring(variables('V_F_FIN_2'),4,2),'12'),concat(string(add(int(substring(variables('V_F_FIN_2'),0,4)),1)),'01') , string(add(int(variables('V_F_FIN_2')),1)))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_F_FIN_2",
										"value": {
											"value": "@variables('V_F_FIN')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "PL_BEG_BAIXES",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BEG_BAIXES",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Data_Carrega": {
												"value": "@variables('V_F_FIN')",
												"type": "Expression"
											}
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_INI": {
						"type": "string",
						"defaultValue": "202101"
					},
					"P_FIN": {
						"type": "string",
						"defaultValue": "202106"
					}
				},
				"variables": {
					"V_UNTIL": {
						"type": "Boolean",
						"defaultValue": false
					},
					"V_F_FIN": {
						"type": "String"
					},
					"V_F_FIN_2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX BAIXES"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_BAIXES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_BAIXES_ODS1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ODS1_BEG_TOTAL_EXEMPLARS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_TOTAL_EXEMPLARS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalExemplars": {},
									"DimBiblioteques": {},
									"ODS1FactTotalExemplars": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_TOTAL_BIBLIOGRAFICS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ODS1_BEG_TOTAL_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_TOTAL_BIBLIOGRAFICS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactAltesBibliografics": {},
									"DimLocations": {},
									"DimBiblioteques": {},
									"ODS1FactTotalBibliografics": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_TOTAL_USUARIS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_TOTAL_USUARIS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalUsuaris": {},
									"DimLocations": {},
									"DimBiblioteques": {},
									"ODS1FactTotalUsuaris": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_ALTES_EXEMPLARS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ODS1_BEG_TOTAL_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_ALTES_EXEMPLARS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactAltesExemplars": {},
									"DimBiblioteques": {},
									"ODS1FactAltesExemplars": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_ALTES_BIBLIOGRAFICS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_ALTES_BIBLIOGRAFICS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactAltesBibliografics": {},
									"DimLocations": {},
									"DMDimBiblioteques": {},
									"ODS1FactAltesBibliografics": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_ALTES_USUARIS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ODS1_BEG_ALTES_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_ALTES_USUARIS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactAltesUsuaris": {},
									"DimLocations": {},
									"DMDimBiblioteques": {},
									"ODS1FactAltesUsuaris": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX BAIXES/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_TOTAL_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_TOTAL_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_TOTAL_USUARIS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_ALTES_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_ALTES_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_ALTES_USUARIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_BAIXES_ODS2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ODS2_BEG_FACT_INDICADORS_BASE",
						"description": "Juntar todos los indicadores base en una sola tabla.",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS2_BEG_BAIXES",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODS1FactTotalBibliografics": {},
									"ODS1FactTotalUsuaris": {},
									"ODS1FactTotalExemplars": {},
									"ODS1FactAltesBibliografics": {},
									"ODS1FactAltesUsuaris": {},
									"ODS1FactAltesExemplars": {},
									"ODS2FactIndicadorsBase": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX BAIXES/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ODS2_BEG_BAIXES')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_BAIXES_ODS3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ODS3_BEG_BAIXES",
						"description": "Creamos todos los indicadores a partir de los base.",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS3_BEG_BAIXES",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ODS2FactIndicadorsBase": {},
									"FactIndicadors": {},
									"ODS3FactIndicadors": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX BAIXES/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ODS3_BEG_BAIXES')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_BAIXES_ODS4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_ODS_BEG_FACT_INDICADORS",
						"description": "Une los indicadores de ficheros con los de data entry para obtener la tabla final.",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_ODS4_BAIXES",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ODS3FactIndicadors": {},
									"DimBiblioteques": {},
									"ODSFactIndicadors": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX BAIXES/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_BEG_ODS4_BAIXES')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_BAIXES_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_BEG_TOTAL_EXEMPLARS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_TOTAL_EXEMPLARS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_TOTAL_EXEMPLARS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_TOTAL_EXEMPLARS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LIMPIAR_TOTAL_EXEMPLARS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_TOTAL_EXEMPLARS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ERROR_TOTAL_EXEMPLARS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_EXEMPLARS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_EXEMPLARS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_TOTAL_EXEMPLARS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_TOTAL_EXEMPLARS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_TOTAL_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_EXEMPLARS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_BEG_TOTAL_USUARIS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_TOTAL_USUARIS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_TOTAL_USUARIS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_TOTAL_USUARIS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LIMPIAR_TOTAL_USUARIS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_TOTAL_USUARIS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ERROR_TOTAL_USUARIS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_USUARIS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_USUARIS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_TOTAL_USUARIS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_TOTAL_USUARIS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_TOTAL_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_USUARIS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_BEG_TOTAL_BIBLIOGRAFICS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_TOTAL_BIBLIOGRAFICS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_TOTAL_BIBLIOGRAFICS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_TOTAL_BIBLIOGRAFICS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LIMPIAR_TOTAL_BIBLIOGRAFICS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_TOTAL_BIBLIOGRAFICS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ERROR_TOTAL_BIBLIOGRAFICS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_BIBLIOGRAFIC' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_TOTAL_BIBLIOGRAFICS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_TOTAL_BIBLIOGRAFICS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_TOTAL_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_BIBLIOGRAFICS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_BEG_ALTES_BIBLIOGRAFICS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_ALTES_BIBLIOGRAFICS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_ALTES_BIBLIOGRAFICS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_ALTES_BIBLIOGRAFICS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LIMPIAR_ALTES_BIBLIOGRAFICS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_ALTES_BIBLIOGRAFICS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ERROR_ALTES_BIBLIOGRAFICS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_BIBLIOGRAFICS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_ALTES_BIBLIOGRAFICS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_ALTES_BIBLIOGRAFICS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_ALTES_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_BIBLIOGRAFICS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_BEG_ALTES_EXEMPLARS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_ALTES_EXEMPLARS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_ALTES_EXEMPLARS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_ALTES_EXEMPLARS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LIMPIAR_ALTES_EXEMPLARS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_ALTES_EXEMPLARS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ERROR_ALTES_EXEMPLARS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_EXEMPLARS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_EXEMPLARS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_ALTES_EXEMPLARS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_ALTES_EXEMPLARS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_ALTES_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_EXEMPLARS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_BEG_ALTES_USUARIS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_ALTES_USUARIS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_ALTES_USUARIS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_ALTES_USUARIS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LIMPIAR_ALTES_USUARIS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_ALTES_USUARIS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ERROR_ALTES_USUARIS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_USUARIS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_USUARIS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_ALTES_USUARIS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_ALTES_USUARIS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_ALTES_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_USUARIS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202101"
					}
				},
				"variables": {
					"V_FICHEROS_A_CARGAR": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX BAIXES/STG"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_TOTAL_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_REL_P_TYPE_INDICADOR')]",
				"[concat(variables('factoryId'), '/datasets/LOGS_BEG')]",
				"[concat(variables('factoryId'), '/datasets/CSV_TOTAL_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_TOTAL_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_ALTES_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_ALTES_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_ALTES_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_USUARIS')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_BAIXES_STG_HIST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_STG_BEG_HIST_FACT_TOTAL_EXEMPLARS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_TOTAL_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_FACT_HIST_TOTAL_EXEMPLARS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalExemplars": {},
									"HistFactTotalExemplars": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_TOTAL_EXEMPLARS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_TOTAL_EXEMPLARS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DF_STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_TOTAL_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalBibliografics": {},
									"HistFactTotalBibliografics": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_STG_BEG_HIST_FACT_TOTAL_USUARIS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_TOTAL_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_HIST_FACT_TOTAL_USUARIS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalUsuaris": {},
									"HistFactTotalUsuaris": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_TOTAL_USUARIS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_TOTAL_USUARIS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_TOTAL_BIBLIOGRAFICS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX BAIXES/STG"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_FACT_HIST_TOTAL_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]",
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_HIST_FACT_TOTAL_USUARIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_CREA_DATA_ENTRY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CARREGA_NO_PERIODICS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CARREGA_NO_PERIODICS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DMFactIndicadors": {},
									"DMDimIndicadors": {},
									"DMDimBibliotecas": {},
									"DMDataEntry": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202112"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX DATA ENTRY"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_CARREGA_NO_PERIODICS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_DATA_ENTRY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CARREGA_DATA_ENTRY",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CARREGA_DATA_ENTRY",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DataEntry": {},
									"DMDimBiblioteques": {},
									"DMFactIndicadors": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202112"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX DATA ENTRY"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_CARREGA_DATA_ENTRY')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_DIM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BEG_DIM_LOCATIONS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [BEG_DM].[DM_BEG_DIM_LOCATIONS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_DIM_LOCATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "BEG_DIM_TERMINALS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [BEG_DM].[DM_BEG_DIM_TERMINALS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_DIM_TERMINALS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DM_BEG_DIM_TERMINALS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "BEG_DIM_INDICADORS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [BEG_DM].[DM_BEG_DIM_INDICADORS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_INDICADORS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DM_BEG_DIM_INDICADORS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "BEG_DIM_TIME",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DIM_TIME",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CSVTime": {},
									"DMDimTime": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "BEG_DIM_REL_P_TYPE_INDICADORS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLSX_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "PL_BEG_DIM_BIBLIOTEQUES",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_DIM_BIBLIOTEQUES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_DIM_LOCATION')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_LOCATIONS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DIM_TERMINALS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TERMINALS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_INDICADORS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DIM_TIME')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/datasets/XLSX_BEG_DIM_REL_P_TYPE_INDICADOR')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_REL_P_TYPE_INDICADOR')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_DIM_BIBLIOTEQUES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_DIM_BIBLIOTEQUES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIBICA_A_BIBLIOTEQUES_BEG",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DIBICA_A_BIBLIOTEQUES_BEG",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DimDIBICA": {},
									"DimBiblioteques": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX BIBLIOTEQUES"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_DIBICA_A_BIBLIOTEQUES_BEG')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_DM_INTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_BEG_DM_INTER_IND_10_3",
						"description": "IND_10_3: Assistents a activitats per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_10_3\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_10_2"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_11_61",
						"description": "IND_11_61: Despeses [de funcionament] per habitant",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": {
										"value": "'@{'IND_11_61'}'",
										"type": "Expression"
									},
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": {
										"value": "[['IND_11']",
										"type": "Expression"
									},
									"P_IND_ORIGEN_DENOMINADOR": {
										"value": "[['IND_6_4']",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_11_62",
						"description": "IND_11_62: Despeses [de funcionament] per visita",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": {
										"value": "'@{'IND_11_62'}'",
										"type": "Expression"
									},
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": {
										"value": "[['IND_11']",
										"type": "Expression"
									},
									"P_IND_ORIGEN_DENOMINADOR": {
										"value": "[['IND_9_1']",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_11_63",
						"description": "IND_11_63: Despeses [de funcionament] per dia de servei",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": {
										"value": "'@{'IND_11_63'}'",
										"type": "Expression"
									},
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": {
										"value": "[['IND_11']",
										"type": "Expression"
									},
									"P_IND_ORIGEN_DENOMINADOR": {
										"value": "[['IND_1_4']",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_11_64",
						"description": "IND_11_64: Despeses [de funcionament] per préstec",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": {
										"value": "'@{'IND_11_64'}'",
										"type": "Expression"
									},
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": {
										"value": "[['IND_11']",
										"type": "Expression"
									},
									"P_IND_ORIGEN_DENOMINADOR": {
										"value": "[['IND_7_4']",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_11_65",
						"description": "IND_11_65: Despeses [de funcionament] per m2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": {
										"value": "'@{'IND_11_65'}'",
										"type": "Expression"
									},
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": {
										"value": "[['IND_11']",
										"type": "Expression"
									},
									"P_IND_ORIGEN_DENOMINADOR": {
										"value": "[['IND_5_2']",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_5_10",
						"description": "IND_5_10: Superfície útil (m2) per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_5_10\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_5_2"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_5_011",
						"description": "IND_5_011: Llocs de consulta per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_5_011\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_5_3"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_5_012",
						"description": "IND_5_012: Ordinadors d us públic (exclusiu) per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_5_012\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_5_42"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_2_7",
						"description": "IND_2_7: Jornades per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_2_7\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_2_6"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_8_4",
						"description": "IND_8_4: Documents rebuts per préstec interbibliotecari per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_8_4\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_8_2"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_4_4",
						"description": "IND_4_4: Publ. periòdiques (títols) per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_4_4\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_4_1"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_9_027",
						"description": "IND_9_027: Visites per habitant",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_9_027\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_1"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_9_028",
						"description": "IND_9_028: Visites per dia de servei",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_9_028\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_1"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_1_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_9_030",
						"description": "IND_9_030: Visites en línia per habitant",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_9_029\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_2"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_9_031",
						"description": "IND_9_031: Usuaris d´internet i ofimàtica (sessions) per habitant",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_9_031\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_0223"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_9_032",
						"description": "IND_9_032: Usuaris d´internet i ofimàtica (sessions) per dia de servei",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_9_032\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_0223"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_1_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_9_033",
						"description": "IND_9_033: Usuaris d´internet i ofimàtica (sessions) per visita",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_9_033\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_0223"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_9_2"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_6_5",
						"description": "IND_6_5: % de carnets sobre població total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_6_5\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_6_1"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_41",
						"description": "IND_12_41: Documents per habitant",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_12_41\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_3_8"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_42",
						"description": "IND_12_42: % materials electrònics (no e-books) sobre fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_12_42\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_117",
										"IND_12_127"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_3_8"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_43",
						"description": "IND_12_43: % manuscrits sobre fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_12_43\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_124"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_3_8"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_44",
						"description": "IND_12_44: % cartogràfics sobre fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_12_44\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_118",
										"IND_12_128"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_3_8"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_45",
						"description": "IND_12_45: % gràfics sobre fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_12_45\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_119",
										"IND_12_129"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_3_8"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_46",
						"description": "IND_12_46: % música impresa sobre fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_12_46\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_1110",
										"IND_12_1210"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_3_8"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_47",
						"description": "IND_12_47: % microformes sobre fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_12_47\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_12011"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_3_8"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_48",
						"description": "IND_12_48: Altes de fons per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_12_48\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_2"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_49",
						"description": "IND_12_49: % d´altes sobre el fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_12_49\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_2"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_12_1"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_410",
						"description": "IND_12_410: % de baixes sobre el fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_12_410\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_3"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_12_1"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_INTRA_ANY_ANT",
						"description": "En este en concreto se calculan los indicadores IND_12_4011, IND_12_4012 y IND_6_6",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA_ANY_ANT",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_CIEN_MIL": "100"
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadorsANT": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_INTRA_IND_9_029",
						"description": "IND_9_029: Visites al dia per m2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA_IND_9_029",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_9_029\"",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_1"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_1_4"
									],
									"P_IND_ORIGEN_DENOMINADOR2": [
										"IND_5_2"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_7_61",
						"description": "IND_7_61: Préstecs per habitant\nNO ESTA VALIDADO. CLIENTE NO LOS QUIERE.",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_7_61\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_7_4"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_7_62",
						"description": "IND_7_62: % de péstecs en relació amb el fons prestable total\nNO ESTA VALIDADO. CLIENTE NO LOS QUIERE.",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_7_62\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_7_4"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_12_11"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_7_63",
						"description": "IND_7_63: Usuaris actius de préstec per habitant\nNO ESTA VALIDADO. CLIENTE NO LOS QUIERE.",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "1",
									"P_NOM_IND_CALC": "\"IND_7_63\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_7_1"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_DATA_INI": {
						"type": "int",
						"defaultValue": 20220301
					},
					"P_DATA_FI": {
						"type": "int",
						"defaultValue": 20220331
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX INTER INTRA"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_BEG_DM_INTER_INTRA')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_BEG_DM_INTER_INTRA_ANY_ANT')]",
				"[concat(variables('factoryId'), '/dataflows/DF_BEG_DM_INTER_INTRA_IND_9_029')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_DM_INTRA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_BEG_DM_INTER_IND_10_3",
						"description": "IND_10_3: Assistents a activitats per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_10_3\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_10_2"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_11_61",
						"description": "IND_11_61: Despeses [de funcionament] per habitant",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": {
										"value": "'@{'IND_11_61'}'",
										"type": "Expression"
									},
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": {
										"value": "[['IND_11']",
										"type": "Expression"
									},
									"P_IND_ORIGEN_DENOMINADOR": {
										"value": "[['IND_6_4']",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_11_62",
						"description": "IND_11_62: Despeses [de funcionament] per visita",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": {
										"value": "'@{'IND_11_62'}'",
										"type": "Expression"
									},
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": {
										"value": "[['IND_11']",
										"type": "Expression"
									},
									"P_IND_ORIGEN_DENOMINADOR": {
										"value": "[['IND_9_1']",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_11_63",
						"description": "IND_11_63: Despeses [de funcionament] per dia de servei",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": {
										"value": "'@{'IND_11_63'}'",
										"type": "Expression"
									},
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": {
										"value": "[['IND_11']",
										"type": "Expression"
									},
									"P_IND_ORIGEN_DENOMINADOR": {
										"value": "[['IND_1_4']",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_11_64",
						"description": "IND_11_64: Despeses [de funcionament] per préstec",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": {
										"value": "'@{'IND_11_64'}'",
										"type": "Expression"
									},
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": {
										"value": "[['IND_11']",
										"type": "Expression"
									},
									"P_IND_ORIGEN_DENOMINADOR": {
										"value": "[['IND_7_4']",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_11_65",
						"description": "IND_11_65: Despeses [de funcionament] per m2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": {
										"value": "'@{'IND_11_65'}'",
										"type": "Expression"
									},
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": {
										"value": "[['IND_11']",
										"type": "Expression"
									},
									"P_IND_ORIGEN_DENOMINADOR": {
										"value": "[['IND_5_2']",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_5_10",
						"description": "IND_5_10: Superfície útil (m2) per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_5_10\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_5_2"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_5_011",
						"description": "IND_5_011: Llocs de consulta per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_5_011\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_5_3"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_5_012",
						"description": "IND_5_012: Ordinadors d us públic (exclusiu) per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_5_012\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_5_42"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_2_7",
						"description": "IND_2_7: Jornades per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_2_7\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_2_6"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_8_4",
						"description": "IND_8_4: Documents rebuts per préstec interbibliotecari per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_8_4\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_8_2"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_4_4",
						"description": "IND_4_4: Publ. periòdiques (títols) per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_4_4\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_4_1"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_9_027",
						"description": "IND_9_027: Visites per habitant",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_9_027\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_1"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_9_028",
						"description": "IND_9_028: Visites per dia de servei",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_9_028\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_1"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_1_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_9_030",
						"description": "IND_9_030: Visites en línia per habitant",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_9_029\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_2"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_9_031",
						"description": "IND_9_031: Usuaris d´internet i ofimàtica (sessions) per habitant",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_9_031\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_0223"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_9_032",
						"description": "IND_9_032: Usuaris d´internet i ofimàtica (sessions) per dia de servei",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_9_032\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_0223"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_1_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_9_033",
						"description": "IND_9_033: Usuaris d´internet i ofimàtica (sessions) per visita",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_9_033\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_0223"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_9_2"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_6_5",
						"description": "IND_6_5: % de carnets sobre població total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_6_5\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_6_1"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_41",
						"description": "IND_12_41: Documents per habitant",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_12_41\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_3_8"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_42",
						"description": "IND_12_42: % materials electrònics (no e-books) sobre fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_12_42\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_117",
										"IND_12_127"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_3_8"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_43",
						"description": "IND_12_43: % manuscrits sobre fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_12_43\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_124"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_3_8"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_44",
						"description": "IND_12_44: % cartogràfics sobre fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_12_44\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_118",
										"IND_12_128"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_3_8"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_45",
						"description": "IND_12_45: % gràfics sobre fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_12_45\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_119",
										"IND_12_129"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_3_8"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_46",
						"description": "IND_12_46: % música impresa sobre fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_12_46\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_1110",
										"IND_12_1210"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_3_8"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_47",
						"description": "IND_12_47: % microformes sobre fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_12_47\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_12011"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_3_8"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_48",
						"description": "IND_12_48: Altes de fons per 1.000 habitants",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_12_48\"",
									"P_CIEN_MIL": "1000",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_2"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_49",
						"description": "IND_12_49: % d´altes sobre el fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_12_49\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_2"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_12_1"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_12_410",
						"description": "IND_12_410: % de baixes sobre el fons total",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_12_410\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_12_3"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_12_1"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_INTRA_ANY_ANT",
						"description": "En este en concreto se calculan los indicadores IND_12_4011, IND_12_4012 y IND_6_6",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA_ANY_ANT",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_CIEN_MIL": "100"
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadorsANT": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_INTRA_IND_9_029",
						"description": "IND_9_029: Visites al dia per m2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA_IND_9_029",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_9_029\"",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_9_1"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_1_4"
									],
									"P_IND_ORIGEN_DENOMINADOR2": [
										"IND_5_2"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_7_61",
						"description": "IND_7_61: Préstecs per habitant\nNO ESTA VALIDADO. CLIENTE NO LOS QUIERE.",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_7_61\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_7_4"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_7_62",
						"description": "IND_7_62: % de péstecs en relació amb el fons prestable total\nNO ESTA VALIDADO. CLIENTE NO LOS QUIERE.",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_7_62\"",
									"P_CIEN_MIL": "100",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_7_4"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_12_11"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_BEG_DM_INTER_IND_7_63",
						"description": "IND_7_63: Usuaris actius de préstec per habitant\nNO ESTA VALIDADO. CLIENTE NO LOS QUIERE.",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_BEG_DM_INTER_INTRA",
								"type": "DataFlowReference",
								"parameters": {
									"P_DATA_INI": {
										"value": "@pipeline().parameters.P_DATA_INI",
										"type": "Expression"
									},
									"P_DATA_FI": {
										"value": "@pipeline().parameters.P_DATA_FI",
										"type": "Expression"
									},
									"P_FLAG_INTER": "0",
									"P_NOM_IND_CALC": "\"IND_7_63\"",
									"P_CIEN_MIL": "1",
									"P_IND_ORIGEN_NUMERADOR": [
										"IND_7_1"
									],
									"P_IND_ORIGEN_DENOMINADOR": [
										"IND_6_4"
									]
								},
								"datasetParameters": {
									"DMbegFACTindicadors": {},
									"DMbegDIMbiblioteques": {},
									"DMterDIMcomarca": {},
									"DMterDIMmunicipi": {},
									"DMbegFACTindicadors2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_DATA_INI": {
						"type": "int",
						"defaultValue": 20220301
					},
					"P_DATA_FI": {
						"type": "int",
						"defaultValue": 20220331
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX INTER INTRA"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_BEG_DM_INTER_INTRA')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_BEG_DM_INTER_INTRA_ANY_ANT')]",
				"[concat(variables('factoryId'), '/dataflows/DF_BEG_DM_INTER_INTRA_IND_9_029')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_FACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_BEG_FACT_STG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SET_DATA_INICIO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_FACT_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Carrega": {
									"value": "@pipeline().parameters.Data_Carrega",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_BEG_FACT_STG_PRESTECS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_BEG_FACT_STG_2",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_FACT_STG_PRESTECS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Carrega": {
									"value": "@pipeline().parameters.Data_Carrega",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_BEG_FACT_STG_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_BEG_FACT_STG",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_FACT_STG_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Carrega": {
									"value": "@pipeline().parameters.Data_Carrega",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CAPTURA_ERROR",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SET_NUM_ERRORS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(variables('NUM_ERRORS')),0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "PL_BEG_FACT_ODS1",
									"description": "Calcula Indicadores Base",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BEG_FACT_ODS1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Data_Carrega": {
												"value": "@pipeline().parameters.Data_Carrega",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "PL_BEG_FACT_ODS2",
									"description": "Une todos los indicadores base en una sola tabla",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "PL_BEG_FACT_ODS1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BEG_FACT_ODS2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Data_Carrega": {
												"value": "@pipeline().parameters.Data_Carrega",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "PL_BEG_FACT_ODS3",
									"description": "Pone indicadores que no se han calculado para las bibliotecas con un NULL",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "PL_BEG_FACT_ODS2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BEG_FACT_ODS3",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Data_Carrega": {
												"value": "@pipeline().parameters.Data_Carrega",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "PL_BEG_FACT_ODS4",
									"description": "Calcula indicadores a partir de los base",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "PL_BEG_FACT_ODS3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BEG_FACT_ODS4",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Data_Carrega": {
												"value": "@pipeline().parameters.Data_Carrega",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "PL_BEG_FACT_DM",
									"description": "Inserta en la DM_BEG_FACT_INDICADORS",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "PL_BEG_FACT_ODS5",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BEG_FACT_DM",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Data_Carrega": {
												"value": "@pipeline().parameters.Data_Carrega",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "PL_BEG_FACT_ODS5",
									"description": "Une los prestamos anuales con los demás y añade el AGENCY como codigo.",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "PL_BEG_FACT_ODS4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BEG_FACT_ODS5",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Data_Carrega": {
												"value": "@pipeline().parameters.Data_Carrega",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "PL_BEG_FACT_STG_HIST",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BEG_FACT_STG_HIST",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Data_Carrega": {
												"value": "@pipeline().parameters.Data_Carrega",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "NUM_ERRORS",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PL_BEG_FACT_STG_PRESTECS",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@CONCAT('select COUNT(error) AS NUM_ERRORS from [BEG_STG].[LOGS_BEG]\nwhere error not like ''%sftppathnotfound%'' AND ERROR IS NOT NULL AND DATA_INSERCIO < ''',activity('DATA_INICIO').output.firstRow.DATA_INICIO,'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SET_NUM_ERRORS",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "NUM_ERRORS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "NUM_ERRORS",
							"value": {
								"value": "@string(activity('NUM_ERRORS').output.firstRow.NUM_ERRORS)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DATA_INICIO",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT GETDATE() AS DATA_INICIO;",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SET_DATA_INICIO",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DATA_INICIO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DATA_INICIO",
							"value": {
								"value": "@activity('DATA_INICIO').output.firstRow.DATA_INICIO",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202101"
					}
				},
				"variables": {
					"NUM_ERRORS": {
						"type": "String"
					},
					"DATA_INICIO": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_FACT_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_FACT_STG_PRESTECS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_FACT_STG_2')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_FACT_ODS1')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_FACT_ODS2')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_FACT_ODS3')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_FACT_ODS4')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_FACT_DM')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_FACT_ODS5')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_FACT_STG_HIST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_FACT_DM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DM_BEG_FACT_INDICADORS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_BEG_FACT_INDICADOR",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODSFactIndicadors": {},
									"PrestecsAnuals": {},
									"DMFactIndicadors": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "UPDATE_ULTIM_MES_CARREGAT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DM_BEG_FACT_INDICADORS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UPDATE_ULTIM_MES_CARREGAT]",
							"storedProcedureParameters": {
								"datacarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202109"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS/DM"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_DM_BEG_FACT_INDICADOR')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_FACT_ODS1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ODS1_BEG_ALTES_EXEMPLARS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_ALTES_EXEMPLARS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactAltesExemplars": {},
									"DimBiblioteques": {},
									"ODS1FactAltesExemplars": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_TOTAL_EXEMPLARS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ODS1_BEG_ALTES_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_TOTAL_EXEMPLARS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalExemplars": {},
									"DimBiblioteques": {},
									"ODS1FactTotalExemplars": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_ALTES_BIBLIOGRAFICS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_ALTES_BIBLIOGRAFICS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactAltesBibliografics": {},
									"DimLocations": {},
									"DMDimBiblioteques": {},
									"ODS1FactAltesBibliografics": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_TOTAL_BIBLIOGRAFICS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ODS1_BEG_ALTES_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_TOTAL_BIBLIOGRAFICS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactAltesBibliografics": {},
									"DimLocations": {},
									"DimBiblioteques": {},
									"ODS1FactTotalBibliografics": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_ALTES_USUARIS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_ALTES_USUARIS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactAltesUsuaris": {},
									"DimLocations": {},
									"DMDimBiblioteques": {},
									"ODS1FactAltesUsuaris": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_TOTAL_USUARIS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ODS1_BEG_ALTES_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_TOTAL_USUARIS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalUsuaris": {},
									"DimLocations": {},
									"DimBiblioteques": {},
									"ODS1FactTotalUsuaris": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_TOTAL_HOLDINGS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_TOTAL_HOLDINGS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalHoldings": {},
									"DMDimLocations": {},
									"ODSFactTotalHoldings": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_ALTES_HOLDINGS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ODS1_BEG_TOTAL_HOLDINGS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_ALTES_HOLDINGS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalHoldings": {},
									"DMDimLocations": {},
									"DMDimBiblioteques": {},
									"ODSFactTotalHoldings": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS1_BEG_TRANSACCIONS",
						"description": "Calcular indicadores base",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS1_BEG_FACT_TRANSACCIONS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTransaccions": {},
									"DimTerminals": {},
									"DMDimBiblioteques": {},
									"ODS1FactTransaccions": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS_BEG_FACT_PRESTEC_CONSULTA1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  biblios.ID_AGENCY as id_biblioteca,\n\t[BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].codi_indicador,\n\tcount(*) as valor\nFROM (\nselect DISTINCT [OUT LOC], taula.[RECORD #(PATRON)], taula.[P TYPE] \n\t\tfrom [BEG_STG].[STG_BEG_FACT_PRESTECS] taula \n\t ) taula_aux\n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR] \n\t\tON taula_aux.[P TYPE] = [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].[P_TYPE] and [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].DESC_CONSULTA = 'BEG_CONSULTA_01'\n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_TERMINALS] term\n\t\tON taula_aux.[OUT LOC] = term.ID_TERMINAL\n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_BIBLIOTEQUES] biblios  \n\t\tON biblios.CODI_BIBLIOTECA = term.CODI_BIBLIOTECA\ngroup by biblios.ID_AGENCY, [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].codi_indicador",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_ODS].[ODS_BEG_FACT_PRESTEC_CONSULTA1]",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "STG_BEG_FACT_PRESTECS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ODS_BEG_FACT_PRESTEC_CONSULTA3",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT biblios.ID_AGENCY as id_biblioteca,\n\t[BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].codi_indicador,\n\tcount(*) as valor\nfrom [BEG_STG].[STG_BEG_FACT_PRESTECS] taula \n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR] \n\t\tON taula.[P TYPE] = [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].P_TYPE and [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].DESC_CONSULTA = 'BEG_CONSULTA_03'\n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_TERMINALS] term\n\t\tON taula.[OUT LOC] = term.ID_TERMINAL\n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_BIBLIOTEQUES] biblios  \n\t\tON biblios.CODI_BIBLIOTECA = term.CODI_BIBLIOTECA\ngroup by biblios.ID_AGENCY, [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].codi_indicador",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_ODS].[ODS_BEG_FACT_PRESTEC_CONSULTA3]",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "STG_BEG_FACT_PRESTECS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ODS_BEG_FACT_PRESTEC_CONSULTA4",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select biblios.ID_AGENCY as id_biblioteca,\n\t[BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].codi_indicador,\n\tcount(*) as valor\nfrom [BEG_STG].[STG_BEG_FACT_PRESTECS] taula \n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR] \n\t\tON taula.[I TYPE] = [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].P_TYPE and [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].DESC_CONSULTA = 'BEG_CONSULTA_04'\n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_TERMINALS] term\n\t\tON taula.[OUT LOC] = term.ID_TERMINAL\n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_BIBLIOTEQUES] biblios  \n\t\tON biblios.CODI_BIBLIOTECA = term.CODI_BIBLIOTECA\ngroup by biblios.ID_AGENCY, [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].codi_indicador\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_ODS].[ODS_BEG_FACT_PRESTEC_CONSULTA4]",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "STG_BEG_FACT_PRESTECS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ODS_BEG_FACT_PRESTEC_CONSULTA5",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select biblios.ID_AGENCY as id_biblioteca,\n\t[BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].codi_indicador,\n\tcount(*) as valor\nfrom [BEG_STG].[STG_BEG_FACT_PRESTECS] taula\n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR] \n\t\tON taula.[I TYPE] = [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].p_type and [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].desc_consulta = 'BEG_CONSULTA_05'\n\tINNER JOIN (SELECT * FROM [BEG_DM].[DM_BEG_DIM_TERMINALS]\n\t\tWHERE FLAG_AUTOPRESTEC = 1) term\n\t\t\tON taula.[OUT LOC] = term.ID_TERMINAL\n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_BIBLIOTEQUES] biblios  \n\t\tON biblios.CODI_BIBLIOTECA = term.CODI_BIBLIOTECA\ngroup by biblios.ID_AGENCY, [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].codi_indicador",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_ODS].[ODS_BEG_FACT_PRESTEC_CONSULTA5]",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "STG_BEG_FACT_PRESTECS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DF_ODS_BEG_FACT_INDICADORS_PRESTECS",
						"description": "Juntar todos los indicadores base de prestecs",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ODS_BEG_FACT_PRESTEC_CONSULTA5",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ODS_BEG_FACT_PRESTEC_CONSULTA4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ODS_BEG_FACT_PRESTEC_CONSULTA3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ODS_BEG_FACT_PRESTEC_CONSULTA1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ODS_BEG_FACT_PRESTEC_CONSUTLA7",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ODS_BEG_FACT_PRESTEC_CONSULTA9",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ODS_BEG_FACT_PRESTEC_CONSULTA8",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ODS_BEG_FACT_PRESTEC_CONSULTA10",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS_BEG_FACT_INDICADORS_PRESTECS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ODSFactConsulta1": {},
									"ODSFactConsulta3": {},
									"ODSFactConsulta4": {},
									"ODSFactConsulta5": {},
									"ODSFactConsulta7": {},
									"ODSFactConsulta8": {},
									"ODSFactConsulta9": {},
									"ODSFactConsulta10": {},
									"DIMBiblio": {},
									"DimIndicador": {},
									"ODSFactIndicadorsPrestecs": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS_BEG_FACT_PRESTEC_CONSUTLA7",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select biblios.ID_AGENCY as id_biblioteca,\n\t'IND_8_1311' as codi_indicador,\n\tcount(*) as valor\nfrom [BEG_STG].[STG_BEG_FACT_PRESTECS] taula \n\tINNER JOIN (select ID_AGENCY, ID_LOCATION from [BEG_DM].[DM_BEG_DIM_LOCATIONS] loc\ninner join [BEG_DM].[DM_BEG_DIM_BIBLIOTEQUES] bib\n\ton bib.CODI_BIBLIOTECA = loc.CODI_BIBLIOTECA) biblios  ON biblios.ID_AGENCY = taula.AGENCY \n\tinner join (select ID_TERMINAL, ID_LOCATION from [BEG_DM].[DM_BEG_DIM_TERMINALS] ter\ninner join [BEG_DM].[DM_BEG_DIM_LOCATIONS] loc2 on ter.CODI_BIBLIOTECA = loc2.CODI_BIBLIOTECA) biblios2 on biblios2.ID_TERMINAL = taula.[OUT LOC] \nwhere biblios.ID_LOCATION <> biblios2.ID_LOCATION \n\tand\tbiblios2.ID_LOCATION = taula.LOCATION \n\tand biblios.ID_LOCATION <> taula.LOCATION\ngroup by biblios.ID_AGENCY",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_ODS].[ODS_BEG_FACT_PRESTEC_CONSULTA7]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "STG_BEG_FACT_PRESTECS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA7",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ODS_BEG_FACT_PRESTEC_CONSULTA8",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select biblios.ID_AGENCY as id_biblioteca,\n\t'IND_8_1312' as codi_indicador,\n\tcount(*) as valor\nfrom [BEG_STG].[STG_BEG_FACT_PRESTECS] taula \n\tINNER JOIN (select ID_AGENCY, ID_LOCATION from [BEG_DM].[DM_BEG_DIM_LOCATIONS] loc\ninner join [BEG_DM].[DM_BEG_DIM_BIBLIOTEQUES] bib\n\ton bib.CODI_BIBLIOTECA = loc.CODI_BIBLIOTECA) biblios  ON biblios.ID_AGENCY = taula.AGENCY \n\tinner join (select ID_TERMINAL, ID_LOCATION from [BEG_DM].[DM_BEG_DIM_TERMINALS] ter\ninner join [BEG_DM].[DM_BEG_DIM_LOCATIONS] loc2 on ter.CODI_BIBLIOTECA = loc2.CODI_BIBLIOTECA) biblios2 on biblios2.ID_TERMINAL = taula.[OUT LOC]\nwhere biblios.ID_LOCATION <> biblios2.ID_LOCATION \n\tand\tbiblios2.ID_LOCATION <> taula.LOCATION \n\tand biblios.ID_LOCATION = taula.location\ngroup by biblios.ID_AGENCY",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_ODS].[ODS_BEG_FACT_PRESTEC_CONSULTA8]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "STG_BEG_FACT_PRESTECS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA8",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ODS_BEG_FACT_PRESTEC_CONSULTA9",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select biblios2.ID_AGENCY as id_biblioteca,\n\t'IND_8_2311' as codi_indicador,\n\tcount(*) as valor\nfrom [BEG_STG].[STG_BEG_FACT_PRESTECS] taula \n\tINNER JOIN (select ID_AGENCY, ID_LOCATION from [BEG_DM].[DM_BEG_DIM_LOCATIONS] loc\ninner join [BEG_DM].[DM_BEG_DIM_BIBLIOTEQUES] bib\n\ton bib.CODI_BIBLIOTECA = loc.CODI_BIBLIOTECA) biblios  ON biblios.ID_AGENCY = taula.AGENCY \n\tinner join (select ID_AGENCY, ID_TERMINAL, ID_LOCATION from [BEG_DM].[DM_BEG_DIM_TERMINALS] ter\ninner join [BEG_DM].[DM_BEG_DIM_LOCATIONS] loc2 on ter.CODI_BIBLIOTECA = loc2.CODI_BIBLIOTECA\nINNER JOIN [BEG_DM].[DM_BEG_DIM_BIBLIOTEQUES] b ON b.CODI_BIBLIOTECA = ter.CODI_BIBLIOTECA\n\t) biblios2 on biblios2.ID_TERMINAL = taula.[OUT LOC]\nwhere biblios.ID_LOCATION <> biblios2.ID_LOCATION\n\tand\tbiblios2.ID_LOCATION = taula.LOCATION\n\tand biblios.ID_LOCATION <> taula.location\ngroup by biblios2.ID_AGENCY\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_ODS].[ODS_BEG_FACT_PRESTEC_CONSULTA9]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "STG_BEG_FACT_PRESTECS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA9",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ODS_BEG_FACT_PRESTEC_CONSULTA10",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select biblios2.ID_AGENCY as id_biblioteca,\n\t'IND_8_2312' as codi_indicador,\n\tcount(*) as valor\nfrom [BEG_STG].[STG_BEG_FACT_PRESTECS] taula \n\tINNER JOIN (select ID_AGENCY, ID_LOCATION from [BEG_DM].[DM_BEG_DIM_LOCATIONS] loc\ninner join [BEG_DM].[DM_BEG_DIM_BIBLIOTEQUES] bib\n\ton bib.CODI_BIBLIOTECA = loc.CODI_BIBLIOTECA) biblios  ON biblios.ID_AGENCY = taula.AGENCY \n\tinner join (select ID_AGENCY, ID_TERMINAL, ID_LOCATION from [BEG_DM].[DM_BEG_DIM_TERMINALS] ter\ninner join [BEG_DM].[DM_BEG_DIM_LOCATIONS] loc2 on ter.CODI_BIBLIOTECA = loc2.CODI_BIBLIOTECA\nINNER JOIN [BEG_DM].[DM_BEG_DIM_BIBLIOTEQUES] b ON b.CODI_BIBLIOTECA = ter.CODI_BIBLIOTECA\n\t) biblios2 on biblios2.ID_TERMINAL = taula.[OUT LOC]\nwhere biblios.ID_LOCATION <> biblios2.ID_LOCATION \n\tand\tbiblios2.ID_LOCATION <> taula.LOCATION \n\tand biblios.ID_LOCATION = taula.location\ngroup by biblios2.ID_AGENCY",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_ODS].[ODS_BEG_FACT_PRESTEC_CONSULTA10]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "STG_BEG_FACT_PRESTECS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA10",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CARREGA_PROCEDENCIA",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(substring(pipeline().parameters.Data_Carrega,4,2),'12')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ODS_PROCEDENCIA",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF_ODS1_BEG_FACT_PROCEDENCIA",
											"type": "DataFlowReference",
											"parameters": {
												"Data_Carrega": {
													"value": "'@{pipeline().parameters.Data_Carrega}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"STGProcedencia": {},
												"DimBiblioteques": {},
												"sink1": {}
											}
										},
										"staging": {},
										"integrationRuntime": {
											"referenceName": "IntegrationRuntimeAzure",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					},
					{
						"name": "ODS_BEG_FACT_PRESTEC_CONSULTA2",
						"description": "Calcula mediante la query los prestamos anuales por biblioteca",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DF_ODS_BEG_FACT_INDICADORS_PRESTECS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT  biblios.ID_AGENCY as id_biblioteca,\n\t[BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].codi_indicador,\n\tcount(*) as valor, \n\tCONVERT(date, ''',string(add(int(substring(pipeline().parameters.Data_Carrega,0,4)),-1)),''' + ''12'' + ''01'') as data_periode,\n\tconvert(date,getdate()) as data_insercio\nFROM (\nselect DISTINCT ID_OUT_LOC, taula.[CODI_RECORD_PATRON], taula.[NUM_P_TYPE] \n\t\tfrom [BEG_STG].[STG_BEG_HIST_FACT_PRESTECS] taula \n\t\twhere YEAR(DATA_PERIODE) = ',string(add(int(substring(pipeline().parameters.Data_Carrega,0,4)),-1)),'\n\t ) taula_aux\n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR] \n\t\tON taula_aux.[NUM_P_TYPE] = [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].[P_TYPE] and [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].DESC_CONSULTA = ''BEG_CONSULTA_02''\n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_TERMINALS] term\n\t\tON taula_aux.[ID_OUT_LOC] = term.ID_TERMINAL\n\tINNER JOIN [BEG_DM].[DM_BEG_DIM_BIBLIOTEQUES] biblios  \n\t\tON biblios.CODI_BIBLIOTECA = term.CODI_BIBLIOTECA\ngroup by biblios.ID_AGENCY, [BEG_DM].[DM_BEG_DIM_REL_P_TYPE_INDICADOR].codi_indicador')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [BEG_ODS].[ODS_BEG_PRESTECS_ANUALS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "STG_BEG_FACT_PRESTECS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ODS_BEG_PRESTECS_ANUALS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "FACT_PRESTECS_ANUALS",
						"description": "Mete en la tabla DM_PRESTECS_ANUALS la información de la ODS con ceros en los indicadores que no se hayan calculado.",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ODS_BEG_FACT_PRESTEC_CONSULTA2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_FACT_PRESTECS_ANUALS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ODSConsulta2": {},
									"Bibliotecas": {},
									"DimIndicadors": {},
									"DMFactPrestecsAnuals": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202109"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_ALTES_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_TOTAL_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_ALTES_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_TOTAL_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_ALTES_USUARIS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_TOTAL_USUARIS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_TOTAL_HOLDINGS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_ALTES_HOLDINGS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_TRANSACCIONS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_PRESTECS')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA1')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA3')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA4')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA5')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS_BEG_FACT_INDICADORS_PRESTECS')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA7')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA8')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA9')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA10')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_PRESTECS_ANUALS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_FACT_PRESTECS_ANUALS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS1_BEG_FACT_PROCEDENCIA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_FACT_ODS2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ODS2_BEG_FACT_INDICADORS_BASE",
						"description": "Juntar todos los indicadores base en una sola tabla.",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS2_BEG_FACT_INDICADORS_BASE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODS1FactAltesBibliografics": {},
									"ODS1FactAltesUsuaris": {},
									"ODS1FactAltesExemplars": {},
									"ODS1FactTotalBibliografics": {},
									"ODS1FactTotalUsuaris": {},
									"ODS1FactTotalExemplars": {},
									"ODS1FactTotalHoldings": {},
									"ODS1FactAltesHoldings": {},
									"ODS1FactPrestecs": {},
									"ODS1Transaccions": {},
									"DMDimBiblioteques": {},
									"ODS2FactIndicadorsBase": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202112"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ODS2_BEG_FACT_INDICADORS_BASE')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_FACT_ODS3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ODS3_BEG_FACT_INDICADORS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS3_BEG_FACT_INDICADORS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ODS2FactIndicadors": {},
									"DimBiblioteques": {},
									"DMDimIndicadors": {},
									"ODS3FactIndicadors": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CARREGA_PROCEDENCIA",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ODS3_BEG_FACT_INDICADORS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(substring(pipeline().parameters.Data_Carrega,4,2),'12')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DF_CARREGA_PROCEDENCIA",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF_CARREGA_PROCEDENCIA",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"Procedencia": {},
												"ODS3FactIndicadorsSink": {}
											}
										},
										"staging": {},
										"integrationRuntime": {
											"referenceName": "IntegrationRuntimeAzure",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202109"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ODS3_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_CARREGA_PROCEDENCIA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_FACT_ODS4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ODS4_BEG_FACT_INDICADORS",
						"description": "Creamos todos los indicadores a partir de los base.",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS4_BEG_FACT_INDICADORS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ODS3FactIndicadorsBase": {},
									"FactIndicadors": {},
									"ODS4FactIndicadors": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202112"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ODS4_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_FACT_ODS5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_ODS_BEG_FACT_INDICADORS",
						"description": "",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "HORES_DOBERTURA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS_BEG_FACT_INDICADORS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ODS4FactIndicadors": {},
									"DimBiblioteques": {},
									"HoresDObertura": {},
									"ODSFactIndicadors": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HORES_DOBERTURA",
						"description": "Calcula el IND_1_3",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select b.CODI_BIBLIOTECA,'IND_1_3' as CODI_INDICADOR,\n(coalesce(datediff(MINUTE,cast(dl_mati_ini as time),cast(isnull(dl_mati_fi,dl_tarda_fi) as time)),0)\n+ coalesce(datediff(MINUTE,cast(dl_tarda_ini as time),cast(dl_tarda_fi as time)),0)\n \n+ coalesce(datediff(MINUTE,cast(dt_mati_ini as time),cast(isnull(dt_mati_fi,dt_tarda_fi) as time)),0) \n+ coalesce(datediff(MINUTE,cast(dt_tarda_ini as time),cast(dt_tarda_fi as time)),0)\n\n+ coalesce(datediff(MINUTE,cast(dc_mati_ini as time),cast(isnull(dc_mati_fi,dc_tarda_fi) as time)),0)\n+ coalesce(datediff(MINUTE,cast(dc_tarda_ini as time),cast(dc_tarda_fi as time)),0)\n\n+ coalesce(datediff(MINUTE,cast(dj_mati_ini as time),cast(isnull(dj_mati_fi,dj_tarda_fi) as time)),0) \n+ coalesce(datediff(MINUTE,cast(dj_tarda_ini as time),cast(dj_tarda_fi as time)),0)\n\n+ coalesce(datediff(MINUTE,cast(dv_mati_ini as time),cast(isnull(dv_mati_fi,dv_tarda_fi) as time)),0) \n+ coalesce(datediff(MINUTE,cast(dv_tarda_ini as time),cast(dv_tarda_fi as time)),0)\n\n+ coalesce(datediff(MINUTE,cast(ds_mati_ini as time),cast(isnull(ds_mati_fi,ds_tarda_fi) as time)),0) \n+ coalesce(datediff(MINUTE,cast(ds_tarda_ini as time),cast(ds_tarda_fi as time)),0)\n\n+ coalesce(datediff(MINUTE,cast(dg_mati_ini as time),cast(isnull(dg_mati_fi,dg_tarda_fi) as time)),0) \n+ coalesce(datediff(MINUTE,cast(dg_tarda_ini as time),cast(dg_tarda_fi as time)),0))\n\n/60.0\n as IND_VALOR\nfrom [DIB_STG].[STG_DIB_DIM_HORARIS_HIVERN] h\njoin [BEG_DM].[DM_BEG_DIM_BIBLIOTEQUES] b on h.id_biblioteca=b.id_biblioteca\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [BEG_ODS].[ODS_BEG_HORES_DOBERTURA]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_DIBICA_HORARIS_HIVERN",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ODS_BEG_HORES_DOBERTURA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202112"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ODS_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_DIBICA_HORARIS_HIVERN')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_HORES_DOBERTURA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_FACT_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_BEG_TOTAL_EXEMPLARS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_TOTAL_EXEMPLARS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_TOTAL_EXEMPLARS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_TOTAL_EXEMPLARS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_BEG_TOTAL_HOLDINGS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [BEG_STG].[STG_BEG_FACT_TOTAL_HOLDINGS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_TOTAL_HOLDINGS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_TOTAL_HOLDINGS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_BEG_TOTAL_USUARIS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_TOTAL_USUARIS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_TOTAL_USUARIS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_TOTAL_USUARIS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_BEG_TOTAL_BIBLIOGRAFICS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_TOTAL_BIBLIOGRAFICS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_TOTAL_BIBLIOGRAFICS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_TOTAL_BIBLIOGRAFICS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_BEG_ALTES_BIBLIOGRAFICS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_ALTES_BIBLIOGRAFICS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_ALTES_BIBLIOGRAFICS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_ALTES_BIBLIOGRAFICS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_BEG_ALTES_EXEMPLARS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_ALTES_EXEMPLARS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_ALTES_EXEMPLARS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_ALTES_EXEMPLARS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_BEG_ALTES_HOLDINGS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_ALTES_HOLDINGS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_ALTES_HOLDINGS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_ALTES_HOLDINGS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_BEG_ALTES_USUARIS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_ALTES_USUARIS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_ALTES_USUARIS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_ALTES_USUARIS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LIMPIAR_ALTES_HOLDINGS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_HOLDINGS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_ALTES_HOLDINGS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LIMPIAR_ALTES_USUARIS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_ALTES_USUARIS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LIMPIAR_TOTAL_BIBLIOGRAFICS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_TOTAL_BIBLIOGRAFICS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LIMPIAR_ALTES_BIBLIOGRAFICS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_ALTES_BIBLIOGRAFICS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LIMPIAR_TOTAL_HOLDINGS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_HOLDINGS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_TOTAL_HOLDINGS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LIMPIAR_TOTAL_EXEMPLARS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_TOTAL_EXEMPLARS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LIMPIAR_TOTAL_USUARIS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_TOTAL_USUARIS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LIMPIAR_ALTES_EXEMPLARS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "Codi",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_ALTES_EXEMPLARS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "STG_BEG_TRANSACCIONS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [BEG_STG].[STG_BEG_FACT_TRANSACCIONS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_TRANSACCIONS",
								"type": "DatasetReference",
								"parameters": {
									"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
									"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_FACT_TRANSACCIONS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LIMPIAR_TRANSACCIONS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STG_BEG_TRANSACCIONS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "[[grup estadístic]",
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_TRANSACCIONS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ERROR_TRANSACCIONS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_TRANSACCIONS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TRANSACCIONS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_TRANSACCIONS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ERROR_TOTAL_EXEMPLARS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_EXEMPLARS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_EXEMPLARS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_TOTAL_EXEMPLARS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ERROR_TOTAL_HOLDINGS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_HOLDINGS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_HOLDINGS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_TOTAL_HOLDINGS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ERROR_TOTAL_USUARIS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_USUARIS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_USUARIS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_TOTAL_USUARIS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ERROR_TOTAL_BIBLIOGRAFICS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_TOTAL_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_BIBLIOGRAFIC' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_TOTAL_BIBLIOGRAFICS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ERROR_ALTES_BIBLIOGRAFICS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_BIBLIOGRAFICS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_ALTES_BIBLIOGRAFICS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ERROR_ALTES_EXEMPLARS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_EXEMPLARS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_EXEMPLARS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_ALTES_EXEMPLARS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ERROR_ALTES_HOLDINGS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_HOLDINGS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_HOLDINGS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_ALTES_HOLDINGS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ERROR_ALTES_USUARIS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_BEG_ALTES_USUARIS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_USUARIS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_ALTES_USUARIS').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_TOTAL_EXEMPLARS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_TOTAL_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_EXEMPLARS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_TOTAL_HOLDINGS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_TOTAL_HOLDINGS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_HOLDINGS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_TOTAL_USUARIS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_TOTAL_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_USUARIS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_TOTAL_BIBLIOGRAFICS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_TOTAL_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TOTAL_BIBLIOGRAFICS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_ALTES_BIBLIOGRAFICS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_ALTES_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_BIBLIOGRAFICS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_ALTES_EXEMPLARS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_ALTES_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_EXEMPLARS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_ALTES_USUARIS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_ALTES_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_USUARIS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_TRANSACCIONS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_TRANSACCIONS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_TRANSACCIONS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OK_ALTES_HOLDINGS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LIMPIAR_ALTES_HOLDINGS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nSELECT 'STG_BEG_FACT_ALTES_HOLDINGS' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LOGS_BEG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202112"
					}
				},
				"variables": {
					"V_Until": {
						"type": "Boolean",
						"defaultValue": false
					},
					"V_Año": {
						"type": "String",
						"defaultValue": "2021"
					},
					"V_Mes": {
						"type": "String",
						"defaultValue": "01"
					},
					"V_Dia": {
						"type": "String",
						"defaultValue": "01"
					},
					"V_CountDia": {
						"type": "String",
						"defaultValue": "01"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS/STG"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_TOTAL_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_TOTAL_HOLDINGS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_HOLDINGS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_TOTAL_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_TOTAL_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_ALTES_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_ALTES_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_ALTES_HOLDINGS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_HOLDINGS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_ALTES_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_USUARIS')]",
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]",
				"[concat(variables('factoryId'), '/datasets/CSV_TRANSACCIONS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TRANSACCIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_REL_P_TYPE_INDICADOR')]",
				"[concat(variables('factoryId'), '/datasets/LOGS_BEG')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_FACT_STG_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CARREGA_PROCEDENCIA",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(substring(pipeline().parameters.Data_Carrega,4,2),'12')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "STG_BEG_PROCEDENCIA",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false,
												"disableChunking": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "drop table [BEG_STG].[STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA]",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CSV_PROCEDENCIA",
											"type": "DatasetReference",
											"parameters": {
												"Año": "@substring(pipeline().parameters.Data_Carrega,0,4)",
												"Mes": "@substring(pipeline().parameters.Data_Carrega,4,2)"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "ERROR_PROCEDENCIA",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "STG_BEG_PROCEDENCIA",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "\nSELECT 'STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'ERROR' AS ESTAT\n      , '@{replace(replace(string(activity('STG_BEG_PROCEDENCIA').output.errors[0].Message),'''',''),'\"','')}' AS ERROR\n      ,getdate() AS DATA_INSERCIO",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "LOGS_BEG",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "LIMPIAR_PROCEDENCIA",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "STG_BEG_PROCEDENCIA",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[DELETE_BAD_ROWS_FROM_TABLE]",
										"storedProcedureParameters": {
											"vColumnName": {
												"value": "Codi",
												"type": "String"
											},
											"vSchemaName": {
												"value": "BEG_STG",
												"type": "String"
											},
											"vTableName": {
												"value": "STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DB_CLT",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "OK_PROCEDENCIA",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LIMPIAR_PROCEDENCIA",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "\nSELECT 'STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA' AS TAULA\n      ,'@{concat(substring(pipeline().parameters.Data_Carrega,0,4),'-',substring(pipeline().parameters.Data_Carrega,4,2))}' AS DATA_CARREGA\n      , 'OK' AS ESTAT\n      ,getdate() AS DATA_INSERCIO",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "LOGS_BEG",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202112"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS/STG"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_PROCEDENCIA')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_REL_P_TYPE_INDICADOR')]",
				"[concat(variables('factoryId'), '/datasets/LOGS_BEG')]",
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_FACT_STG_HIST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_STG_BEG_HIST_FACT_TOTAL_EXEMPLARS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_TOTAL_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_FACT_HIST_TOTAL_EXEMPLARS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalExemplars": {},
									"HistFactTotalExemplars": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_TOTAL_EXEMPLARS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_TOTAL_EXEMPLARS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DF_STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_TOTAL_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalBibliografics": {},
									"HistFactTotalBibliografics": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_STG_BEG_HIST_FACT_TOTAL_USUARIS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_TOTAL_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_HIST_FACT_TOTAL_USUARIS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalUsuaris": {},
									"HistFactTotalUsuaris": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_STG_BEG_HIST_FACT_TOTAL_HOLDINGS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_TOTAL_HOLDINGS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_HIST_FACT_TOTAL_HOLDINGS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTotalHoldings": {},
									"HISTFactTotalHoldings": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_STG_BEG_HIST_FACT_ALTES_BIBLIOGRAFICS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_ALTES_BIBLIOGRAFICS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_HIST_FACT_ALTES_BIBLIOGRAFICS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactAltesBibliografics": {},
									"HistFactAltesBibliografics": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_STG_BEG_HIST_FACT_ALTES_USUARIS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_ALTES_USUARIS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_HIST_FACT_ALTES_USUARIS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactAltesUsuaris": {},
									"HistFactAltesUsuaris": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_STG_BEG_HIST_FACT_ALTES_EXEMPLARS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_ALTES_EXEMPLARS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_HIST_FACT_ALTES_EXEMPLARS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactAltesExemplars": {},
									"HISTAltesExemplars": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_STG_BEG_HIST_FACT_ALTES_HOLDINGS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_ALTES_HOLDINGS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_HIST_FACT_ALTES_HOLDINGS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactAltesHoldings": {},
									"HistFactAltesHoldings": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_TOTAL_USUARIS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_TOTAL_USUARIS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_ALTES_HOLDINGS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_ALTES_HOLDINGS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_ALTES_EXEMPLARS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_ALTES_EXEMPLARS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_ALTES_USUARIS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_ALTES_USUARIS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_ALTES_BIBLIOGRAFICS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_ALTES_BIBLIOGRAFICS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_TOTAL_HOLDINGS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_TOTAL_HOLDINGS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_TOTAL_BIBLIOGRAFICS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DF_STG_BEG_HIST_FACT_TRANSACCIONS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_TRANSACCIONS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_HIST_FACT_TRANSACCIONS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGFactTransaccions": {},
									"STGHistTransaccions": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_TRANSACCIONS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_TRANSACCIONS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_PRESTECS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_PRESTECS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DF_STG_BEG_HIST_FACT_PRESTECS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_PRESTECS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_HIST_FACT_PRESTECS",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGPrestecs": {},
									"STGHistFactPrestecs": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "BORRAR_MES_ACTUAL_PROCEDENCIA",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_TABLES]",
							"storedProcedureParameters": {
								"vColumnName": {
									"value": "DATA_PERIODE",
									"type": "String"
								},
								"vDataCarrega": {
									"value": {
										"value": "@pipeline().parameters.Data_Carrega",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_HIST_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DF_STG_BEG_HIST_FACT_PROCEDENCIA",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "BORRAR_MES_ACTUAL_PROCEDENCIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_STG_BEG_HIST_FACT_PROCEDENCIA",
								"type": "DataFlowReference",
								"parameters": {
									"Data_Carrega": {
										"value": "'@{pipeline().parameters.Data_Carrega}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGProcedencia": {},
									"STGHistProcedencia": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202109"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS/STG"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_FACT_HIST_TOTAL_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]",
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_HIST_FACT_TOTAL_USUARIS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_HIST_FACT_TOTAL_HOLDINGS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_HIST_FACT_ALTES_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_HIST_FACT_ALTES_USUARIS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_HIST_FACT_ALTES_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_HIST_FACT_ALTES_HOLDINGS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_HIST_FACT_TRANSACCIONS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_HIST_FACT_PRESTECS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_STG_BEG_HIST_FACT_PROCEDENCIA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_FACT_STG_PRESTECS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TRUNCATE_STG_PRESTEC",
						"description": "Trunca la tabla STG_BEG_FACT_PRESTECS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[TRUNCATE_TABLE]",
							"storedProcedureParameters": {
								"vSchemaName": {
									"value": "BEG_STG",
									"type": "String"
								},
								"vTableName": {
									"value": "STG_BEG_FACT_PRESTECS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DB_CLT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get_FITCHEROS_A_CARGAR",
						"description": "Cogemos el nombre de todos los archivos que hay que cargar para poder iterar en ellos a posterior.",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "TRUNCATE_STG_PRESTEC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "META_BEG_FICHEROS_A_CARGAR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach",
						"description": "Para cara fichero, hacemos el copy data correspondiente en la tabla STG_BEG_FACT_PRESTECS",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_FITCHEROS_A_CARGAR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_FITCHEROS_A_CARGAR').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "BEG_STG_FACT_PRESTEC",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false,
												"disableChunking": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "TXT_PRESTEC",
											"type": "DatasetReference",
											"parameters": {
												"NombreArchivo": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "STG_BEG_FACT_PRESTECS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Set_FITCHEROS_A_CARGAR",
						"description": "Metemos lo obtenido en la variable V_FICHEROS_A_CARGAR",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get_FITCHEROS_A_CARGAR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_FICHEROS_A_CARGAR",
							"value": {
								"value": "@activity('Get_FITCHEROS_A_CARGAR').output.childItems",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter_FITCHEROS_A_CARGAR",
						"description": "Filtramos por los ficheros que queremos.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Set_FITCHEROS_A_CARGAR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('V_FICHEROS_A_CARGAR')",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(contains( item().name, \n    concat(substring(pipeline().parameters.Data_Carrega,0,4),\n            '_',\n            substring(pipeline().parameters.Data_Carrega,4,2),\n            '_'\n     )\n )\n,\n    equals(length( item().name), 14)\n)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Carrega": {
						"type": "string",
						"defaultValue": "202112"
					}
				},
				"variables": {
					"V_Until": {
						"type": "Boolean",
						"defaultValue": true
					},
					"V_Año": {
						"type": "String"
					},
					"V_Mes": {
						"type": "String"
					},
					"V_Dia": {
						"type": "String",
						"defaultValue": "01"
					},
					"V_CountDia": {
						"type": "String",
						"defaultValue": "01"
					},
					"V_FICHEROS_A_CARGAR": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS/STG"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]",
				"[concat(variables('factoryId'), '/datasets/META_BEG_FICHEROS_A_CARGAR')]",
				"[concat(variables('factoryId'), '/datasets/TXT_PRESTEC')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_PRESTECS')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_HISTORICO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BUCLE",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "IGUALA_FI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('V_UNTIL')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CHECK_FIN_BUCLE",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "IF_BAIXES",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_UNTIL",
										"value": {
											"value": "@bool(lessOrEquals(pipeline().parameters.P_FIN, variables('V_F_FIN')))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CHECK_FIN_BUCLE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_F_FIN",
										"value": {
											"value": "@if(equals(substring(variables('V_F_FIN_2'),4,2),'12'),concat(string(add(int(substring(variables('V_F_FIN_2'),0,4)),1)),'01') , string(add(int(variables('V_F_FIN_2')),1)))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_F_FIN_2",
										"value": {
											"value": "@variables('V_F_FIN')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "PL_BEG_FACT",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SET_MAX_DATA_BAIXES",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BEG_FACT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Data_Carrega": {
												"value": "@variables('V_F_FIN')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "IF_BAIXES",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "PL_BEG_FACT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@lessOrEquals(int(variables('V_F_FIN')),int(concat(substring(variables('MAX_DATA_BAIXES'),0,4),substring(variables('MAX_DATA_BAIXES'),5,2))))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "PL_BEG_BAIXES_HISTORICO",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_BEG_BAIXES_HISTORICO",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"P_INI": {
															"value": "@variables('V_F_FIN')",
															"type": "Expression"
														},
														"P_FIN": {
															"value": "@if(equals(substring(variables('V_F_FIN'),4,2),'12'),concat(string(add(int(substring(variables('V_F_FIN'),0,4)),1)),'01') , string(add(int(variables('V_F_FIN')),1)))",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "GET_MAX_DATA_BAIXES",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select MAX(DATA_PERIODE) AS MAX_DATA_BAIXES FROM [BEG_DM].[DM_BEG_FACT_INDICADORS]\nWHERE CODI_INDICADOR = 'IND_3_10011';",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DM_BEG_FACT_INDICADORS",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "SET_MAX_DATA_BAIXES",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "GET_MAX_DATA_BAIXES",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "MAX_DATA_BAIXES",
										"value": {
											"value": "@substring(string(activity('GET_MAX_DATA_BAIXES').output.firstRow.MAX_DATA_BAIXES),0,10)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "FIJAR_INICIO",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_F_FIN",
							"value": {
								"value": "@pipeline().parameters.P_INI",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IGUALA_FI",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "FIJAR_INICIO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_F_FIN_2",
							"value": {
								"value": "@variables('V_F_FIN')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_INI": {
						"type": "string",
						"defaultValue": "202101"
					},
					"P_FIN": {
						"type": "string",
						"defaultValue": "202112"
					}
				},
				"variables": {
					"V_UNTIL": {
						"type": "Boolean",
						"defaultValue": false
					},
					"V_F_FIN": {
						"type": "String"
					},
					"V_F_FIN_2": {
						"type": "String"
					},
					"MAX_DATA_BAIXES": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_FACT')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_BAIXES_HISTORICO')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_MENSUAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_BEG_FACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_BEG_DIM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_FACT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Carrega": {
									"value": "@variables('V_DATA_CARREGA')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_BEG_DIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SET_V_DATA_CARREGA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_DIM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LeerMesACargar",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT CONCAT(SUBSTRING(CONVERT(VARCHAR,DATEADD(MONTH,1,CONVERT(date, CONCAT('1-',SUBSTRING(ULTIM_MES_CARREGAT,6,2),'-',SUBSTRING(ULTIM_MES_CARREGAT,1,4)), 103))),1,4),SUBSTRING(CONVERT(VARCHAR,DATEADD(MONTH,1,CONVERT(date, CONCAT('1-',SUBSTRING(ULTIM_MES_CARREGAT,6,2),'-',SUBSTRING(ULTIM_MES_CARREGAT,1,4)), 103))),6,2)) AS DATA FROM [BEG_DM].[DM_BEG_ADMIN_WEB];",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DM_BEG_DIM_TIME",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SET_V_DATA_CARREGA",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LeerMesACargar",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_DATA_CARREGA",
							"value": {
								"value": "@string(activity('LeerMesACargar').output.firstRow.DATA)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "PL_BEG_CREA_DATA_ENTRY",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_BEG_FACT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_CREA_DATA_ENTRY",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Carrega": {
									"value": "@variables('V_DATA_CARREGA')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"V_DATA_CARREGA": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX FITXERS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_FACT')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_DIM')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TIME')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_CREA_DATA_ENTRY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BEG_SEMESTRAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SET_V_INI",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LeerMesDeCargaIni",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_INI",
							"value": {
								"value": "@string(activity('LeerMesDeCargaIni').output.firstRow.DATA)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "PL_BEG_BAIXES_HISTORICO",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SET_V_FIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_BAIXES_HISTORICO",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_INI": {
									"value": "@variables('V_INI')",
									"type": "Expression"
								},
								"P_FIN": {
									"value": "@variables('V_FIN')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "LeerMesDeCargaIni",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT CONCAT(SUBSTRING(CONVERT(VARCHAR,DATEADD(MONTH,-7,CONVERT(date, CONCAT('1-',SUBSTRING(ULTIM_MES_CARREGAT,6,2),'-',SUBSTRING(ULTIM_MES_CARREGAT,1,4)), 103))),1,4),SUBSTRING(CONVERT(VARCHAR,DATEADD(MONTH,-7,CONVERT(date, CONCAT('1-',SUBSTRING(ULTIM_MES_CARREGAT,6,2),'-',SUBSTRING(ULTIM_MES_CARREGAT,1,4)), 103))),6,2)) AS DATA FROM [BEG_DM].[DM_BEG_ADMIN_WEB];",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DM_BEG_DIM_TIME",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SET_V_FIN",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LeerMesDeCargaFin",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_FIN",
							"value": {
								"value": "@string(activity('LeerMesDeCargaFin').output.firstRow.DATA)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "LeerMesDeCargaFin",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SET_V_INI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT CONCAT(SUBSTRING(CONVERT(VARCHAR,DATEADD(MONTH,-2,CONVERT(date, CONCAT('1-',SUBSTRING(ULTIM_MES_CARREGAT,6,2),'-',SUBSTRING(ULTIM_MES_CARREGAT,1,4)), 103))),1,4),SUBSTRING(CONVERT(VARCHAR,DATEADD(MONTH,-2,CONVERT(date, CONCAT('1-',SUBSTRING(ULTIM_MES_CARREGAT,6,2),'-',SUBSTRING(ULTIM_MES_CARREGAT,1,4)), 103))),6,2)) AS DATA FROM [BEG_DM].[DM_BEG_ADMIN_WEB];",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DM_BEG_DIM_TIME",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"V_INI": {
						"type": "String"
					},
					"V_FIN": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX BAIXES"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_BAIXES_HISTORICO')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TIME')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_ENTRY_MENSUAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_BEG_DATA_ENTRY",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SET_V_DATA_CARREGA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BEG_DATA_ENTRY",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Carrega": {
									"value": "@variables('V_DATA_CARREGA')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "LeerMesACargar",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT CONCAT(SUBSTRING(CONVERT(VARCHAR,DATEADD(MONTH,0,CONVERT(date, CONCAT('1-',SUBSTRING(ULTIM_MES_CARREGAT,6,2),'-',SUBSTRING(ULTIM_MES_CARREGAT,1,4)), 103))),1,4),SUBSTRING(CONVERT(VARCHAR,DATEADD(MONTH,0,CONVERT(date, CONCAT('1-',SUBSTRING(ULTIM_MES_CARREGAT,6,2),'-',SUBSTRING(ULTIM_MES_CARREGAT,1,4)), 103))),6,2)) AS DATA FROM [BEG_DM].[DM_BEG_ADMIN_WEB];",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DM_BEG_DIM_TIME",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SET_V_DATA_CARREGA",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LeerMesACargar",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_DATA_CARREGA",
							"value": {
								"value": "@string(activity('LeerMesACargar').output.firstRow.DATA)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"V_DATA_CARREGA": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX DATA ENTRY"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_BEG_DATA_ENTRY')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TIME')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_ENTRY_MES_VENCIDO_DIARI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DATA_ENTRY_MES_VENCIDO",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CARREGA_DATA_ENTRY_MES_VENCIDO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DataEntry": {},
									"DMDimBiblioteques": {},
									"HistEntradaIndicadors": {},
									"DMFactIndicadors": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SINTESI BEG/FLUX DATA ENTRY"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_CARREGA_DATA_ENTRY_MES_VENCIDO')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DIBICA_DM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DM_BIBLIOTEQUES",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_BIBLIOTEQUES",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGBiblioteques": {},
									"DMBiblioteques": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_HORARIS_HIVERN",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_HORARIS_HIVERN",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGHorarisHivern": {},
									"DMHorarisHivern": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_DICC_LLOCS_TREBALL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_DICC_LLOCS_TREBALL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_DICC_TRACTAMENTS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_DICC_TRACTAMENTS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_CATEGORIA_ESP",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_CATEGORIA_ESP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGDimCategoriaEsp": {},
									"DMDimCategoriaEsp": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_ROLS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_ROLS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGRols": {},
									"DMRols": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DIBICA"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_DM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_HORARIS_HIVERN')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_DICC_LLOCS_TREBALL')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_DICC_TRACTAMENTS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_CATEGORIA_ESP')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_ROLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DIBICA_MENSUAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_DIBICA_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DIBICA_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DIBICA_DM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DIBICA_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DIBICA_DM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DIBICA"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DIBICA_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DIBICA_DM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DIBICA_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_BIBLIOTEQUES_DIBICA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [DIB_STG].[STG_DIB_DIM_BIBLIOTEQUES]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DIBICA_DIM_BIBLIOTEQUES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_DIM_BIBLIOTEQUES_DIBICA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_HORARIS_HIVERN",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [DIB_STG].[STG_DIB_DIM_HORARIS_HIVERN]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DIBICA_DIM_HORARIS_HIVERN",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_DIM_HORARIS_HIVERN_DIBICA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_DICC_TRACTAMENTS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [DIB_STG].[STG_DIB_DIM_DICC_TRACTAMENTS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DIBICA_DIM_DICC_TRACTAMENTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_DIB_DIM_DICC_TRACTAMENTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_DICC_LLOCS_TREBALL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [DIB_STG].[STG_DIB_DIM_DICC_LLOCS_TREBALL]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DIBICA_DIM_LLOCS_TREBALL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_DIB_DICC_LLOCS_TREBALL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_CATEGORIA_ESP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [DIB_STG].[STG_DIB_DIM_CATEGORIA_ESP]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DIBICA_DIM_CATEGORIA_ESP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_DIB_DIM_CATEGORIA_ESP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_ROLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [DIB_STG].[STG_DIB_DIM_ROLS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DIBICA_DIM_ROLS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_DIB_DIM_ROLS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DIBICA"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DIBICA_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_BIBLIOTEQUES_DIBICA')]",
				"[concat(variables('factoryId'), '/datasets/DIBICA_DIM_HORARIS_HIVERN')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_HORARIS_HIVERN_DIBICA')]",
				"[concat(variables('factoryId'), '/datasets/DIBICA_DIM_DICC_TRACTAMENTS')]",
				"[concat(variables('factoryId'), '/datasets/STG_DIB_DIM_DICC_TRACTAMENTS')]",
				"[concat(variables('factoryId'), '/datasets/DIBICA_DIM_LLOCS_TREBALL')]",
				"[concat(variables('factoryId'), '/datasets/STG_DIB_DICC_LLOCS_TREBALL')]",
				"[concat(variables('factoryId'), '/datasets/DIBICA_DIM_CATEGORIA_ESP')]",
				"[concat(variables('factoryId'), '/datasets/STG_DIB_DIM_CATEGORIA_ESP')]",
				"[concat(variables('factoryId'), '/datasets/DIBICA_DIM_ROLS')]",
				"[concat(variables('factoryId'), '/datasets/STG_DIB_DIM_ROLS')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TERRITORIAL_DM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DM_BEG_AMBIT_TERRITORIAL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_BEG_AMBIT_TERRITORIAL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGAmbitTerritorial": {},
									"DMAmbitTerritorial": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_BEG_PROVINCIA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_BEG_PROVINCIA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGProvincia": {},
									"DMProvincia": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_BEG_MUNICIPI",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_BEG_MUNICIPI",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGMunicipi": {},
									"DMMunicipi": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_BEG_COMARCA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_BEG_COMARCA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGComarca": {},
									"DMComarca": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TERRITORIAL"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_DM_BEG_AMBIT_TERRITORIAL')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_BEG_PROVINCIA')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_BEG_MUNICIPI')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_BEG_COMARCA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TERRITORIAL_MENSUAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_BEG_TERRITORIAL_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TERRITORIAL_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_BEG_TERRITORIAL_DM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_BEG_TERRITORIAL_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TERRITORIAL_DM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TERRITORIAL"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_TERRITORIAL_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TERRITORIAL_DM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TERRITORIAL_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_DIM_COMARCA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [TER_STG].[STG_TER_DIM_COMARCA]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TERRITORIAL_COMARCA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_DIM_TERRITORIAL_COMARCA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_DIM_AMBIT_TERRITORIAL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [TER_STG].[STG_TER_DIM_AMBIT_TERRITORIAL]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TERRITORIAL_AMBIT_TERRITORIAL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_DIM_TERRITORIAL_AMBIT_TERRITORIAL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_DIM_MUNICIPI",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [TER_STG].[STG_TER_DIM_MUNICIPI]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TERRITORIAL_MUNICIPI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_DIM_TERRITORIAL_MUNICIPI",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_DIM_PROVINCIA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [TER_STG].[STG_TER_DIM_PROVINCIA]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TERRITORIAL_PROVINCIA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_BEG_DIM_TERRITORIAL_PROVINCIA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TERRITORIAL"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-19T09:22:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TERRITORIAL_COMARCA')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_TERRITORIAL_COMARCA')]",
				"[concat(variables('factoryId'), '/datasets/TERRITORIAL_AMBIT_TERRITORIAL')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_TERRITORIAL_AMBIT_TERRITORIAL')]",
				"[concat(variables('factoryId'), '/datasets/TERRITORIAL_MUNICIPI')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_TERRITORIAL_MUNICIPI')]",
				"[concat(variables('factoryId'), '/datasets/TERRITORIAL_PROVINCIA')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_TERRITORIAL_PROVINCIA')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_ALTES_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_CLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Año": {
						"type": "string"
					},
					"Mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Año,\n'_',\ndataset().Mes,\n\n'_Altes_Bibliografics.csv'\n)",
							"type": "Expression"
						},
						"folderPath": "/iPCBI_x_sharebdd1/SERVEIS/sFTP/CLT/BEG"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SFTP_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_ALTES_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_CLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Año": {
						"type": "string"
					},
					"Mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Año,\n'_',\ndataset().Mes,\n\n'_Altes_Exemplars.csv'\n)",
							"type": "Expression"
						},
						"folderPath": "/iPCBI_x_sharebdd1/SERVEIS/sFTP/CLT/BEG"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SFTP_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_ALTES_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_CLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Año": {
						"type": "string"
					},
					"Mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Año,\n'_',\ndataset().Mes,\n\n'_Altes_Holdings.csv'\n)",
							"type": "Expression"
						},
						"folderPath": "/iPCBI_x_sharebdd1/SERVEIS/sFTP/CLT/BEG"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SFTP_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_ALTES_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_CLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Año": {
						"type": "string"
					},
					"Mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Año,\n'_',\ndataset().Mes,\n\n'_Altes_Usuaris.csv'\n)",
							"type": "Expression"
						},
						"folderPath": "/iPCBI_x_sharebdd1/SERVEIS/sFTP/CLT/BEG"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SFTP_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_DIM_BIBLIOTEQUES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BEG_DIM_BIBLIOTEQUES.csv",
						"container": "cltsintesibeg"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_DIM_LOCATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BEG_DIM_LOCATIONS.csv",
						"container": "cltsintesibeg"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_DIM_TERMINALS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BEG_DIM_TERMINALS.csv",
						"container": "cltsintesibeg"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BEG_DIM_INDICADORS.csv",
						"container": "cltsintesibeg"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_PROCEDENCIA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_CLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Año": {
						"type": "string"
					},
					"Mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Año,\n'_',\ndataset().Mes,\n\n'_Total_Exemplars_Procedencia.csv'\n)",
							"type": "Expression"
						},
						"folderPath": "/iPCBI_x_sharebdd1/SERVEIS/sFTP/CLT/BEG"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SFTP_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_TIME')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BEG_DIM_TIME.csv",
						"container": "cltsintesibeg"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DATA",
						"type": "String"
					},
					{
						"name": "FLAG_ES_LABORABLE",
						"type": "String"
					},
					{
						"name": "DATA_ANY",
						"type": "String"
					},
					{
						"name": "NUM_SEMESTRE",
						"type": "String"
					},
					{
						"name": "NUM_TRIMESTRE",
						"type": "String"
					},
					{
						"name": "DATA_ANY_TRIMESTRE",
						"type": "String"
					},
					{
						"name": "DATA_MES",
						"type": "String"
					},
					{
						"name": "DATA_MES_NN",
						"type": "String"
					},
					{
						"name": "DATA_ANY_MES",
						"type": "String"
					},
					{
						"name": "NUM_DIA",
						"type": "String"
					},
					{
						"name": "NUM_DIA_DD",
						"type": "String"
					},
					{
						"name": "NUM_DIA_SEMANA",
						"type": "String"
					},
					{
						"name": "DESC_MES",
						"type": "String"
					},
					{
						"name": "DESC_MES_CAT",
						"type": "String"
					},
					{
						"name": "DESC_DIA",
						"type": "String"
					},
					{
						"name": "DESC_DIA_CAT",
						"type": "String"
					},
					{
						"name": "NUM_SEMANA",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_TOTAL_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_CLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Año": {
						"type": "string"
					},
					"Mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Año,\n'_',\ndataset().Mes,\n\n'_Total_Bibliografics.csv'\n)",
							"type": "Expression"
						},
						"folderPath": "/iPCBI_x_sharebdd1/SERVEIS/sFTP/CLT/BEG"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SFTP_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_TOTAL_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_CLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Año": {
						"type": "string"
					},
					"Mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Año,\n'_',\ndataset().Mes,\n\n'_Total_Exemplars.csv'\n)",
							"type": "Expression"
						},
						"folderPath": "/iPCBI_x_sharebdd1/SERVEIS/sFTP/CLT/BEG"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SFTP_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_TOTAL_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_CLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Año": {
						"type": "string"
					},
					"Mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Año,\n'_',\ndataset().Mes,\n\n'_Total_Holdings.csv'\n)",
							"type": "Expression"
						},
						"folderPath": "/iPCBI_x_sharebdd1/SERVEIS/sFTP/CLT/BEG"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SFTP_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_TOTAL_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_CLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Año": {
						"type": "string"
					},
					"Mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Año,\n'_',\ndataset().Mes,\n\n'_Total_Usuaris.csv'\n)",
							"type": "Expression"
						},
						"folderPath": "/iPCBI_x_sharebdd1/SERVEIS/sFTP/CLT/BEG"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SFTP_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_TRANSACCIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_CLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Año": {
						"type": "string"
					},
					"Mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Año,\n'_',\ndataset().Mes,\n\n'_Transaccions.csv'\n)",
							"type": "Expression"
						},
						"folderPath": "/iPCBI_x_sharebdd1/SERVEIS/sFTP/CLT/BEG"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SFTP_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIBICA_DIM_BIBLIOTEQUES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_DIBICA",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DIBICA"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id_biblioteca",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_usuari",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codi",
						"type": "char"
					},
					{
						"name": "id_tipus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_modul",
						"type": "int",
						"precision": 10
					},
					{
						"name": "niden",
						"type": "char"
					},
					{
						"name": "id_estat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "denominacio",
						"type": "varchar"
					},
					{
						"name": "data_alta_biblio",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "data_baixa_biblio",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_tipus_via",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nom_via",
						"type": "varchar"
					},
					{
						"name": "numero_via",
						"type": "varchar"
					},
					{
						"name": "ine_municipi",
						"type": "varchar"
					},
					{
						"name": "id_districte",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cp",
						"type": "varchar"
					},
					{
						"name": "utmx",
						"type": "float",
						"precision": 15
					},
					{
						"name": "utmy",
						"type": "float",
						"precision": 15
					},
					{
						"name": "longitud",
						"type": "float",
						"precision": 15
					},
					{
						"name": "latitud",
						"type": "float",
						"precision": 15
					},
					{
						"name": "telefon",
						"type": "varchar"
					},
					{
						"name": "extensio",
						"type": "varchar"
					},
					{
						"name": "fax",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "web",
						"type": "varchar"
					},
					{
						"name": "beg",
						"type": "bit"
					},
					{
						"name": "slpc",
						"type": "bit"
					},
					{
						"name": "id_mapa",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_categoria",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_titularitat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "finan_adm_central",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_generalitat",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_diputacio",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_con_comarcal",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_ajuntament",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_universitat",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_privada",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_altres",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "id_forma_acces",
						"type": "int",
						"precision": 10
					},
					{
						"name": "es_cataleg_colectiu_cclp",
						"type": "bit"
					},
					{
						"name": "web_cataleg_colectiu_cclp",
						"type": "varchar"
					},
					{
						"name": "es_cataleg_colectiu_dip_bcn",
						"type": "bit"
					},
					{
						"name": "web_cataleg_colectiu_dip_bcn",
						"type": "varchar"
					},
					{
						"name": "es_cataleg_colectiu_ccuc",
						"type": "bit"
					},
					{
						"name": "web_cataleg_colectiu_ccuc",
						"type": "varchar"
					},
					{
						"name": "es_cataleg_colectiu_beg",
						"type": "bit"
					},
					{
						"name": "web_cataleg_colectiu_beg",
						"type": "varchar"
					},
					{
						"name": "es_cataleg_colectiu_altres",
						"type": "bit"
					},
					{
						"name": "web_cataleg_colectiu_altres",
						"type": "varchar"
					},
					{
						"name": "id_director_tractament",
						"type": "int",
						"precision": 10
					},
					{
						"name": "director_nom",
						"type": "varchar"
					},
					{
						"name": "director_primer_cognom",
						"type": "varchar"
					},
					{
						"name": "director_segon_cognom",
						"type": "varchar"
					},
					{
						"name": "adaptada",
						"type": "bit"
					},
					{
						"name": "observacions",
						"type": "varchar"
					},
					{
						"name": "obs_itineraris",
						"type": "varchar"
					},
					{
						"name": "data_alta",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_alta",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_modif",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_modif",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_baixa",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_baixa",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_adscripcio",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_categoria_esp",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BIBLIOTEQUES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_DIBICA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIBICA_DIM_CATEGORIA_ESP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_DIBICA",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DIBICA"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id_categoria_esp",
						"type": "int",
						"precision": 10
					},
					{
						"name": "desc_categoria_esp",
						"type": "varchar"
					},
					{
						"name": "data_alta",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_alta",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_modif",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_modif",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_baixa",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_baixa",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DICC_CATEGORIA_ESP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_DIBICA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIBICA_DIM_DICC_TRACTAMENTS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_DIBICA",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DIBICA"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id_tractament",
						"type": "int",
						"precision": 10
					},
					{
						"name": "desc_tractament",
						"type": "varchar"
					},
					{
						"name": "data_alta",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_alta",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_modif",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_modif",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_baixa",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_baixa",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DICC_TRACTAMENTS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_DIBICA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIBICA_DIM_HORARIS_HIVERN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_DIBICA",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DIBICA"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id_horari_hivern",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_biblioteca",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dl_mati_ini",
						"type": "varchar"
					},
					{
						"name": "dl_mati_fi",
						"type": "varchar"
					},
					{
						"name": "dl_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "dl_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "dt_mati_ini",
						"type": "varchar"
					},
					{
						"name": "dt_mati_fi",
						"type": "varchar"
					},
					{
						"name": "dt_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "dt_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "dc_mati_ini",
						"type": "varchar"
					},
					{
						"name": "dc_mati_fi",
						"type": "varchar"
					},
					{
						"name": "dc_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "dc_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "dj_mati_ini",
						"type": "varchar"
					},
					{
						"name": "dj_mati_fi",
						"type": "varchar"
					},
					{
						"name": "dj_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "dj_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "dv_mati_ini",
						"type": "varchar"
					},
					{
						"name": "dv_mati_fi",
						"type": "varchar"
					},
					{
						"name": "dv_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "dv_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "ds_mati_ini",
						"type": "varchar"
					},
					{
						"name": "ds_mati_fi",
						"type": "varchar"
					},
					{
						"name": "ds_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "ds_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "dg_mati_ini",
						"type": "varchar"
					},
					{
						"name": "dg_mati_fi",
						"type": "varchar"
					},
					{
						"name": "dg_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "dg_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "resum",
						"type": "varchar"
					},
					{
						"name": "observacions",
						"type": "varchar"
					},
					{
						"name": "data_alta",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_alta",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_modif",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_modif",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_baixa",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_baixa",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HORARIS_HIVERN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_DIBICA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIBICA_DIM_LLOCS_TREBALL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_DIBICA",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DIBICA"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id_lloc_treball",
						"type": "int",
						"precision": 10
					},
					{
						"name": "desc_lloc_treball",
						"type": "varchar"
					},
					{
						"name": "data_alta",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_alta",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_modif",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_modif",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_baixa",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_baixa",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DICC_LLOCS_TREBALL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_DIBICA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIBICA_DIM_ROLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_DIBICA",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DIBICA"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "idRol",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_ROL",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ROLS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_DIBICA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_AUTOPRESTECS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "BEG_DM",
					"table": "DM_BEG_DIM_AUTOPRESTECS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_BIBLIOTEQUES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_BIBLIOTECA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_AGENCY",
						"type": "varchar"
					},
					{
						"name": "ID_USUARI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CODI_BIBLIOTECA",
						"type": "char"
					},
					{
						"name": "ID_TIPUS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_MODUL",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CODI_NIDEN",
						"type": "char"
					},
					{
						"name": "ID_ESTAT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_BIBLIOTECA",
						"type": "varchar"
					},
					{
						"name": "DATA_ALTA_BIBLIO",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DATA_BAIXA_BIBLIO",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ID_TIPUS_VIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_VIA",
						"type": "varchar"
					},
					{
						"name": "NUM_VIA",
						"type": "varchar"
					},
					{
						"name": "INE_MUNICIPI",
						"type": "varchar"
					},
					{
						"name": "ID_DISTRICTE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CP",
						"type": "varchar"
					},
					{
						"name": "UTMX",
						"type": "float",
						"precision": 15
					},
					{
						"name": "UTMY",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NUM_LONGITUD",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NUM_LATITUD",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NUM_TELEFON",
						"type": "varchar"
					},
					{
						"name": "NUM_EXTENSIO",
						"type": "varchar"
					},
					{
						"name": "NUM_FAX",
						"type": "varchar"
					},
					{
						"name": "DESC_EMAIL",
						"type": "varchar"
					},
					{
						"name": "DESC_WEB",
						"type": "varchar"
					},
					{
						"name": "FLAG_BEG",
						"type": "bit"
					},
					{
						"name": "FLAG_SLPC",
						"type": "bit"
					},
					{
						"name": "ID_MAPA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_CATEGORIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_TITULARITAT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_FORMA_ACCES",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ES_CATALEG_COLECTIU_CCLP",
						"type": "bit"
					},
					{
						"name": "WEB_CATALEG_COLECTIU_CCLP",
						"type": "varchar"
					},
					{
						"name": "ES_CATALEG_COLECTIU_DIP_BCN",
						"type": "bit"
					},
					{
						"name": "WEB_CATALEG_COLECTIU_DIP_BCN",
						"type": "varchar"
					},
					{
						"name": "ES_CATALEG_COLECTIU_CCUC",
						"type": "bit"
					},
					{
						"name": "WEB_CATALEG_COLECTIU_CCUC",
						"type": "varchar"
					},
					{
						"name": "ES_CATALEG_COLECTIU_BEG",
						"type": "bit"
					},
					{
						"name": "WEB_CATALEG_COLECTIU_BEG",
						"type": "varchar"
					},
					{
						"name": "ES_CATALEG_COLECTIU_ALTRES",
						"type": "bit"
					},
					{
						"name": "WEB_CATALEG_COLECTIU_ALTRES",
						"type": "varchar"
					},
					{
						"name": "ID_DIRECTOR_TRACTAMENT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_DIRECTOR_NOMB",
						"type": "varchar"
					},
					{
						"name": "DESC_DIRECTOR_PRIMER_COGNOM",
						"type": "varchar"
					},
					{
						"name": "DESC_DIRECTOR_SEGON_COGNOM",
						"type": "varchar"
					},
					{
						"name": "FLAG_ADAPTADA",
						"type": "bit"
					},
					{
						"name": "DESC_OBSERVACIONS",
						"type": "varchar"
					},
					{
						"name": "OBS_ITINERARIS",
						"type": "varchar"
					},
					{
						"name": "DATA_ALTA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ID_USUARI_ALTA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_MODIF",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ID_USUARI_MODIF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_BAIXA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ID_USUARI_BAIXA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_ADSCRIPCIO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_CATEGORIA_ESP",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "BEG_DM",
					"table": "DM_BEG_DIM_BIBLIOTEQUES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_DIBICA_BIBLIOTEQUES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_BIBLIOTECA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_USUARI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CODI_BIBLIOTECA",
						"type": "char"
					},
					{
						"name": "ID_TIPUS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_MODUL",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CODI_NIDEN",
						"type": "char"
					},
					{
						"name": "ID_ESTAT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_BIBLIOTECA",
						"type": "varchar"
					},
					{
						"name": "DATA_ALTA_BIBLIO",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DATA_BAIXA_BIBLIO",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ID_TIPUS_VIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_VIA",
						"type": "varchar"
					},
					{
						"name": "NUM_VIA",
						"type": "varchar"
					},
					{
						"name": "INE_MUNICIPI",
						"type": "varchar"
					},
					{
						"name": "ID_DISTRICTE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CP",
						"type": "varchar"
					},
					{
						"name": "UTMX",
						"type": "float",
						"precision": 15
					},
					{
						"name": "UTMY",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NUM_LONGITUD",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NUM_LATITUD",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NUM_TELEFON",
						"type": "varchar"
					},
					{
						"name": "NUM_EXTENSIO",
						"type": "varchar"
					},
					{
						"name": "NUM_FAX",
						"type": "varchar"
					},
					{
						"name": "DESC_EMAIL",
						"type": "varchar"
					},
					{
						"name": "DESC_WEB",
						"type": "varchar"
					},
					{
						"name": "FLAG_BEG",
						"type": "bit"
					},
					{
						"name": "FLAG_SLPC",
						"type": "bit"
					},
					{
						"name": "ID_MAPA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_CATEGORIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_TITULARITAT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_FORMA_ACCES",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ES_CATALEG_COLECTIU_CCLP",
						"type": "bit"
					},
					{
						"name": "WEB_CATALEG_COLECTIU_CCLP",
						"type": "varchar"
					},
					{
						"name": "ES_CATALEG_COLECTIU_DIP_BCN",
						"type": "bit"
					},
					{
						"name": "WEB_CATALEG_COLECTIU_DIP_BCN",
						"type": "varchar"
					},
					{
						"name": "ES_CATALEG_COLECTIU_CCUC",
						"type": "bit"
					},
					{
						"name": "WEB_CATALEG_COLECTIU_CCUC",
						"type": "varchar"
					},
					{
						"name": "ES_CATALEG_COLECTIU_BEG",
						"type": "bit"
					},
					{
						"name": "WEB_CATALEG_COLECTIU_BEG",
						"type": "varchar"
					},
					{
						"name": "ES_CATALEG_COLECTIU_ALTRES",
						"type": "bit"
					},
					{
						"name": "WEB_CATALEG_COLECTIU_ALTRES",
						"type": "varchar"
					},
					{
						"name": "ID_DIRECTOR_TRACTAMENT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_DIRECTOR_NOMB",
						"type": "varchar"
					},
					{
						"name": "DESC_DIRECTOR_PRIMER_COGNOM",
						"type": "varchar"
					},
					{
						"name": "DESC_DIRECTOR_SEGON_COGNOM",
						"type": "varchar"
					},
					{
						"name": "FLAG_ADAPTADA",
						"type": "bit"
					},
					{
						"name": "DESC_OBSERVACIONS",
						"type": "varchar"
					},
					{
						"name": "OBS_ITINERARIS",
						"type": "varchar"
					},
					{
						"name": "DATA_ALTA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ID_USUARI_ALTA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_MODIF",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ID_USUARI_MODIF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_BAIXA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ID_USUARI_BAIXA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_ADSCRIPCIO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_CATEGORIA_ESP",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "DIB_DM",
					"table": "DM_DIB_DIM_BIBLIOTEQUES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_DIBICA_HORARIS_HIVERN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_HORARI_HIVERN",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_BIBLIOTECA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NUM_DL_MATI_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DL_MATI_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DL_TARDA_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DL_TARDA_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DT_MATI_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DT_MATI_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DT_TARDA_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DT_TARDA_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DC_MATI_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DC_MATI_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DC_TARDA_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DC_TARDA_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DJ_MATI_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DJ_MATI_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DJ_TARDA_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DJ_TARDA_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DV_MATI_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DV_MATI_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DV_TARDA_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DV_TARDA_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DS_MATI_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DS_MATI_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DS_TARDA_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DS_TARDA_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DG_MATI_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DG_MATI_FI",
						"type": "varchar"
					},
					{
						"name": "NUM_DG_TARDA_INI",
						"type": "varchar"
					},
					{
						"name": "NUM_DG_TARDA_FI",
						"type": "varchar"
					},
					{
						"name": "DESC_RESUM",
						"type": "varchar"
					},
					{
						"name": "DESC_OBSERVACIONS",
						"type": "varchar"
					},
					{
						"name": "DATA_ALTA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ID_USUARI_ALTA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_MODIF",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ID_USUARI_MODIF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_BAIXA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ID_USUARI_BAIXA",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "DIB_DM",
					"table": "DM_DIB_DIM_HORARIS_HIVERN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "DESC_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "DESC_COMO_CALCULAR",
						"type": "nvarchar"
					},
					{
						"name": "FLAG_FITXER",
						"type": "nvarchar"
					},
					{
						"name": "FLAG_PRESTECS",
						"type": "nvarchar"
					},
					{
						"name": "FLAG_DATAENTRY",
						"type": "nvarchar"
					},
					{
						"name": "FLAG_NO_PERIODICS",
						"type": "nvarchar"
					},
					{
						"name": "FILA_LEVEL_1",
						"type": "nvarchar"
					},
					{
						"name": "FILA_LEVEL_2",
						"type": "nvarchar"
					},
					{
						"name": "FILA_LEVEL_3",
						"type": "nvarchar"
					},
					{
						"name": "FILA_LEVEL_4",
						"type": "nvarchar"
					},
					{
						"name": "FILA_LEVEL_5",
						"type": "nvarchar"
					},
					{
						"name": "COLUMNA_LEVEL_1",
						"type": "nvarchar"
					},
					{
						"name": "COLUMNA_LEVEL_2",
						"type": "nvarchar"
					},
					{
						"name": "ID_SECCIO",
						"type": "nvarchar"
					},
					{
						"name": "IND_ORDRE",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_DM",
					"table": "DM_BEG_DIM_INDICADORS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_LOCATIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_LOCATION",
						"type": "nvarchar"
					},
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_DM",
					"table": "DM_BEG_DIM_LOCATIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_REL_P_TYPE_INDICADOR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DESC_CONSULTA",
						"type": "nvarchar"
					},
					{
						"name": "P_TYPE",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "ID_INDICADOR",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_DM",
					"table": "DM_BEG_DIM_REL_P_TYPE_INDICADOR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_TERMINALS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_TERMINAL",
						"type": "nvarchar"
					},
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_DM",
					"table": "DM_BEG_DIM_TERMINALS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_TERRITORIAL_AMBIT_TERRITORIAL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_AMBIT_TERRITORIAL",
						"type": "varchar"
					},
					{
						"name": "DESC_AMBIT_TERRITORIAL",
						"type": "varchar"
					},
					{
						"name": "DATA_BAIXA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "TER_DM",
					"table": "DM_TER_DIM_AMBIT_TERRITORIAL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_TERRITORIAL_COMARCA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "INE_COMARCA",
						"type": "varchar"
					},
					{
						"name": "ID_AMBIT_TERRITORIAL",
						"type": "varchar"
					},
					{
						"name": "DESC_COMARCA",
						"type": "varchar"
					},
					{
						"name": "DESC_COMARCA_CAT",
						"type": "varchar"
					},
					{
						"name": "CODI_SSTT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_BAIXA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "TER_DM",
					"table": "DM_TER_DIM_COMARCA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_TERRITORIAL_MUNICIPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "INE_MUNICIPI",
						"type": "varchar"
					},
					{
						"name": "INE_COMARCA",
						"type": "varchar"
					},
					{
						"name": "INE_PROVINCIA",
						"type": "varchar"
					},
					{
						"name": "DESC_MUNICIPI",
						"type": "varchar"
					},
					{
						"name": "DESC_MUNICIPI_CAT",
						"type": "varchar"
					},
					{
						"name": "CP",
						"type": "varchar"
					},
					{
						"name": "NUM_ALTITUD",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NUM_SUPERFICIE",
						"type": "decimal",
						"precision": 6,
						"scale": 2
					},
					{
						"name": "FLAG_CAPITAL_PAIS",
						"type": "bit"
					},
					{
						"name": "FLAG_CAPITAL_COMUNIDAD_AUTONOMA",
						"type": "bit"
					},
					{
						"name": "FLAG_CAPITAL_PROVINCIA",
						"type": "bit"
					},
					{
						"name": "FLAG_CAPITAL_COMARCA",
						"type": "bit"
					},
					{
						"name": "ID_AMBIT_TERRITORIAL",
						"type": "varchar"
					},
					{
						"name": "CODI_SSTT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_BAIXA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "TER_DM",
					"table": "DM_TER_DIM_MUNICIPI"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_TERRITORIAL_PROVINCIA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "INE_PROVINCIA",
						"type": "varchar"
					},
					{
						"name": "INE_COMUNITAT_AUTONOMA",
						"type": "varchar"
					},
					{
						"name": "DESC_PROVINCIA",
						"type": "varchar"
					},
					{
						"name": "DESC_PROVINCIA_CAT",
						"type": "varchar"
					},
					{
						"name": "DATA_BAIXA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "TER_DM",
					"table": "DM_TER_DIM_PROVINCIA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_DIM_TIME')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DATA",
						"type": "nvarchar"
					},
					{
						"name": "FLAG_ES_LABORABLE",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NUM_SEMESTRE",
						"type": "nvarchar"
					},
					{
						"name": "NUM_TRIMESTRE",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_TRIMESTRE",
						"type": "nvarchar"
					},
					{
						"name": "DATA_MES",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_MES_NN",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_MES",
						"type": "nvarchar"
					},
					{
						"name": "NUM_DIA",
						"type": "nvarchar"
					},
					{
						"name": "NUM_DIA_DD",
						"type": "nvarchar"
					},
					{
						"name": "NUM_DIA_SEMANA",
						"type": "nvarchar"
					},
					{
						"name": "DESC_MES",
						"type": "nvarchar"
					},
					{
						"name": "DESC_MES_CAT",
						"type": "nvarchar"
					},
					{
						"name": "DESC_DIA",
						"type": "nvarchar"
					},
					{
						"name": "DESC_DIA_CAT",
						"type": "nvarchar"
					},
					{
						"name": "NUM_SEMANA",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_DM",
					"table": "DM_BEG_DIM_TIME"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_FACT_DATA_ENTRY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					},
					{
						"name": "IND_1_4",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_1111",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_1113",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_1122",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_113",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_114",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_115",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_121",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_122",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_123",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_2111",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_2113",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_2122",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_213",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_214",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_215",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_221",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_222",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_223",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_4111",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_4113",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_4122",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_413",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_414",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_415",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_421",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_422",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_423",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_5111",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_5113",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_5122",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_513",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_514",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_515",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_521",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_522",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_523",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_71",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_72",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_73",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_2_74",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_4_111",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_4_112",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_4_122",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_4_123",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_4_21",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_4_22",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_4_31",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_4_32",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_5_1",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_5_2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_5_3",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_5_41",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_5_42",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_5_5",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_5_6",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_5_7",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_5_8",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_5_9",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_6_4",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_1311",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_1312",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_132",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_1411",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_1412",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_142",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_1511",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_1512",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_152",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_2311",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_2312",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_232",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_2411",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_2412",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_242",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_2511",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_2512",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_252",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_311",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_312",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_313",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_321",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_322",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_8_323",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_011",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_012",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_013",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_015",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_016",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_020",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_0223",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_0231",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_0232",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_0233",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_02411",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_02412",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_02413",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_02421",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_02422",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_02423",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_025",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_9_026",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_11",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_13",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_14",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_15",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_1613",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_1614",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_1615",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_162",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_17",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_18",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_21",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_24",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_25",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_2612",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_2613",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_2614",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_2615",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_262",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_27",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_10_28",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_11_11",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_11_12",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_11_13",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_11_14",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_11_15",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_11_51",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_11_52",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_11_53",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_11_54",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_11_55",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_1",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_3",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_51",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_52",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_53",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_54",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_61",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_62",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_63",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_64",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_7",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_16_8",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_17_1",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_17_2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_17_3",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_19_1",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_19_2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_19_3",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_19_4",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_19_5",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_20_1",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_20_2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_20_3",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_20_4",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_20_5",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_21_1",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_21_2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_21_3",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_21_4",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IND_5_10",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "BEG_DM",
					"table": "DM_BEG_FACT_DATA_ENTRY"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_FACT_HIST_ENTRADA_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "varchar"
					},
					{
						"name": "DATA_PERIODE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DATA_MODIFICACIO",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "BEG_DM",
					"table": "DM_BEG_FACT_HIST_ENTRADA_INDICADORS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_FACT_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_AGENCY",
						"type": "nvarchar"
					},
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_DM",
					"table": "DM_BEG_FACT_INDICADORS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_FACT_INDICADORS_INTER_INTRA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "FLAG_INTER_INTRA",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR_BIB",
						"type": "real",
						"precision": 7
					},
					{
						"name": "IND_VALOR_DIS",
						"type": "real",
						"precision": 7
					},
					{
						"name": "IND_VALOR_MUN",
						"type": "real",
						"precision": 7
					},
					{
						"name": "IND_VALOR_COM",
						"type": "real",
						"precision": 7
					},
					{
						"name": "IND_VALOR_AMB",
						"type": "real",
						"precision": 7
					},
					{
						"name": "IND_VALOR_NAN",
						"type": "real",
						"precision": 7
					},
					{
						"name": "DESC_TRAM_POBLACIO",
						"type": "nvarchar"
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_DM",
					"table": "DM_BEG_FACT_INDICADORS_INTER_INTRA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_BEG_FACT_PRESTECS_ANUALS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_AGENCY",
						"type": "nvarchar"
					},
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_DM",
					"table": "DM_BEG_FACT_PRESTECS_ANUALS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_DIB_DIM_CATEGORIA_ESP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "DIB_DM",
					"table": "DM_DIB_DIM_CATEGORIA_ESP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_DIB_DIM_DICC_LLOCS_TREBALL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "DIB_DM",
					"table": "DM_DIB_DIM_DICC_LLOCS_TREBALL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_DIB_DIM_DICC_TRACTAMENTS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "DIB_DM",
					"table": "DM_DIB_DIM_DICC_TRACTAMENTS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_DIB_DIM_ROLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "DIB_DM",
					"table": "DM_DIB_DIM_ROLS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOGS_BEG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TAULA",
						"type": "varchar"
					},
					{
						"name": "DATA_CARREGA",
						"type": "nvarchar"
					},
					{
						"name": "ESTAT",
						"type": "nvarchar"
					},
					{
						"name": "DATA_INSERCIO",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "LOGS_BEG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/META_BEG_FICHEROS_A_CARGAR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": "/iPCBI_x_sharebdd1/SERVEIS/sFTP/CLT/BEG"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SFTP_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS1_BEG_FACT_INDICADORS_ALTES_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS1",
					"table": "ODS1_BEG_FACT_INDICADORS_ALTES_BIBLIOGRAFICS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS1_BEG_FACT_INDICADORS_ALTES_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS1",
					"table": "ODS1_BEG_FACT_INDICADORS_ALTES_EXEMPLARS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS1_BEG_FACT_INDICADORS_ALTES_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS1",
					"table": "ODS1_BEG_FACT_INDICADORS_ALTES_HOLDINGS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS1_BEG_FACT_INDICADORS_ALTES_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS1",
					"table": "ODS1_BEG_FACT_INDICADORS_ALTES_USUARIS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS1_BEG_FACT_INDICADORS_TOTAL_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS1",
					"table": "ODS1_BEG_FACT_INDICADORS_TOTAL_BIBLIOGRAFICS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS1_BEG_FACT_INDICADORS_TOTAL_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS1",
					"table": "ODS1_BEG_FACT_INDICADORS_TOTAL_EXEMPLARS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS1_BEG_FACT_INDICADORS_TOTAL_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS1",
					"table": "ODS1_BEG_FACT_INDICADORS_TOTAL_HOLDINGS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS1_BEG_FACT_INDICADORS_TOTAL_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS1",
					"table": "ODS1_BEG_FACT_INDICADORS_TOTAL_USUARIS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS1_BEG_FACT_INDICADORS_TRANSACCIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS1",
					"table": "ODS1_BEG_FACT_INDICADORS_TRANSACCIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS1_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS1",
					"table": "ODS1_BEG_FACT_INDICADORS_TOTAL_EXEMPLARS_PROCEDENCIA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS2_BEG_FACT_INDICADORS_BASE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS2",
					"table": "ODS2_BEG_FACT_INDICADORS_BASE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS3_BEG_FACT_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS3",
					"table": "ODS3_BEG_FACT_INDICADORS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS4_BEG_FACT_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS4",
					"table": "ODS4_BEG_FACT_INDICADORS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_DIM_AUTOPRESTECS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "DESC_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "ID_AGENCY",
						"type": "nvarchar"
					},
					{
						"name": "TERMINAL",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_DIM_AUTOPRESTECS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_DIM_BIBLIOTEQUES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_NIDEN",
						"type": "nvarchar"
					},
					{
						"name": "ESTAT",
						"type": "nvarchar"
					},
					{
						"name": "TIPUS",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORIA_ESPECIALITZADA",
						"type": "nvarchar"
					},
					{
						"name": "DESC_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "ID_AGENCY",
						"type": "nvarchar"
					},
					{
						"name": "TERMINAL",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ALTA",
						"type": "nvarchar"
					},
					{
						"name": "DATA_BAIXA",
						"type": "nvarchar"
					},
					{
						"name": "ADAPTADA",
						"type": "nvarchar"
					},
					{
						"name": "FORMA_ACCESS",
						"type": "nvarchar"
					},
					{
						"name": "TITULARITAT",
						"type": "nvarchar"
					},
					{
						"name": "ADREÇA",
						"type": "nvarchar"
					},
					{
						"name": "MUNICIPI",
						"type": "nvarchar"
					},
					{
						"name": "C.P.",
						"type": "nvarchar"
					},
					{
						"name": "COMARCA",
						"type": "nvarchar"
					},
					{
						"name": "ÀMBIT TERRITORIAL",
						"type": "nvarchar"
					},
					{
						"name": "SSTT",
						"type": "nvarchar"
					},
					{
						"name": "PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "UTMX",
						"type": "nvarchar"
					},
					{
						"name": "UTMY",
						"type": "nvarchar"
					},
					{
						"name": "MÒDUL_TERRITORIAL",
						"type": "nvarchar"
					},
					{
						"name": "TELÈFON",
						"type": "nvarchar"
					},
					{
						"name": "EXT",
						"type": "nvarchar"
					},
					{
						"name": "FAX",
						"type": "nvarchar"
					},
					{
						"name": "WEB",
						"type": "nvarchar"
					},
					{
						"name": "ADREÇA_ELCT",
						"type": "nvarchar"
					},
					{
						"name": "ADREÇA_ELECT_2",
						"type": "nvarchar"
					},
					{
						"name": "TRACTAMENT_DIRECT",
						"type": "nvarchar"
					},
					{
						"name": "NOM_DIRECT",
						"type": "nvarchar"
					},
					{
						"name": "PRIMER_COGNOM",
						"type": "nvarchar"
					},
					{
						"name": "SEGON_COGNOM",
						"type": "nvarchar"
					},
					{
						"name": "OBSERVACIONS",
						"type": "nvarchar"
					},
					{
						"name": "GRUP",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_DIM_BIBLIOTEQUES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_DIM_LOCATIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "ID_AGENCY",
						"type": "nvarchar"
					},
					{
						"name": "TERMINAL",
						"type": "nvarchar"
					},
					{
						"name": "LOCATION",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_DIM_LOCATIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_DIM_REL_P_TYPE_INDICADOR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DESC_CONSULTA",
						"type": "nvarchar"
					},
					{
						"name": "P_TYPE",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "ID_INDICADOR",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_DIM_REL_P_TYPE_INDICADOR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_FACT_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_AGENCY",
						"type": "nvarchar"
					},
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "decimal",
						"precision": 17,
						"scale": 6
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_FACT_INDICADORS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_FACT_PRESTECS_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_FACT_PRESTECS_INDICADORS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_FACT_PRESTEC_CONSULTA1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_biblioteca",
						"type": "nvarchar"
					},
					{
						"name": "codi_indicador",
						"type": "nvarchar"
					},
					{
						"name": "valor",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_FACT_PRESTEC_CONSULTA1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_FACT_PRESTEC_CONSULTA10')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_biblioteca",
						"type": "nvarchar"
					},
					{
						"name": "codi_indicador",
						"type": "nvarchar"
					},
					{
						"name": "valor",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_FACT_PRESTEC_CONSULTA10"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_FACT_PRESTEC_CONSULTA3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_biblioteca",
						"type": "nvarchar"
					},
					{
						"name": "codi_indicador",
						"type": "nvarchar"
					},
					{
						"name": "valor",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_FACT_PRESTEC_CONSULTA3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_FACT_PRESTEC_CONSULTA4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_biblioteca",
						"type": "nvarchar"
					},
					{
						"name": "codi_indicador",
						"type": "nvarchar"
					},
					{
						"name": "valor",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_FACT_PRESTEC_CONSULTA4"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_FACT_PRESTEC_CONSULTA5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_biblioteca",
						"type": "nvarchar"
					},
					{
						"name": "codi_indicador",
						"type": "nvarchar"
					},
					{
						"name": "valor",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_FACT_PRESTEC_CONSULTA5"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_FACT_PRESTEC_CONSULTA6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_biblioteca",
						"type": "nvarchar"
					},
					{
						"name": "codi_indicador",
						"type": "nvarchar"
					},
					{
						"name": "valor",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_FACT_PRESTEC_CONSULTA6"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_FACT_PRESTEC_CONSULTA7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_biblioteca",
						"type": "nvarchar"
					},
					{
						"name": "codi_indicador",
						"type": "nvarchar"
					},
					{
						"name": "valor",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_FACT_PRESTEC_CONSULTA7"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_FACT_PRESTEC_CONSULTA8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_biblioteca",
						"type": "nvarchar"
					},
					{
						"name": "codi_indicador",
						"type": "nvarchar"
					},
					{
						"name": "valor",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_FACT_PRESTEC_CONSULTA8"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_FACT_PRESTEC_CONSULTA9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_biblioteca",
						"type": "nvarchar"
					},
					{
						"name": "codi_indicador",
						"type": "nvarchar"
					},
					{
						"name": "valor",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_FACT_PRESTEC_CONSULTA9"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_HORES_DOBERTURA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "char"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "varchar"
					},
					{
						"name": "IND_VALOR",
						"type": "decimal",
						"precision": 17,
						"scale": 6
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_HORES_DOBERTURA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_PRESTECS_ANUAL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "IND_VALOR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_PRESTECS_ANUAL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_BEG_PRESTECS_ANUALS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_biblioteca",
						"type": "varchar"
					},
					{
						"name": "codi_indicador",
						"type": "nvarchar"
					},
					{
						"name": "valor",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_periode",
						"type": "date"
					},
					{
						"name": "data_insercio",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_ODS",
					"table": "ODS_BEG_PRESTECS_ANUALS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_DIM_AUTOPRESTECS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "DESC_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "ID_AGENCY",
						"type": "nvarchar"
					},
					{
						"name": "TERMINAL",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_DIM_AUTOPRESTECS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_DIM_BIBLIOTEQUES_DIBICA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_biblioteca",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_usuari",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codi",
						"type": "char"
					},
					{
						"name": "id_tipus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_modul",
						"type": "int",
						"precision": 10
					},
					{
						"name": "niden",
						"type": "char"
					},
					{
						"name": "id_estat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "denominacio",
						"type": "varchar"
					},
					{
						"name": "data_alta_biblio",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "data_baixa_biblio",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_tipus_via",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nom_via",
						"type": "varchar"
					},
					{
						"name": "numero_via",
						"type": "varchar"
					},
					{
						"name": "ine_municipi",
						"type": "varchar"
					},
					{
						"name": "id_districte",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cp",
						"type": "varchar"
					},
					{
						"name": "utmx",
						"type": "float",
						"precision": 15
					},
					{
						"name": "utmy",
						"type": "float",
						"precision": 15
					},
					{
						"name": "longitud",
						"type": "float",
						"precision": 15
					},
					{
						"name": "latitud",
						"type": "float",
						"precision": 15
					},
					{
						"name": "telefon",
						"type": "varchar"
					},
					{
						"name": "extensio",
						"type": "varchar"
					},
					{
						"name": "fax",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "web",
						"type": "varchar"
					},
					{
						"name": "beg",
						"type": "bit"
					},
					{
						"name": "slpc",
						"type": "bit"
					},
					{
						"name": "id_mapa",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_categoria",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_titularitat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "finan_adm_central",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_generalitat",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_diputacio",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_con_comarcal",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_ajuntament",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_universitat",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_privada",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "finan_altres",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "id_forma_acces",
						"type": "int",
						"precision": 10
					},
					{
						"name": "es_cataleg_colectiu_cclp",
						"type": "bit"
					},
					{
						"name": "web_cataleg_colectiu_cclp",
						"type": "varchar"
					},
					{
						"name": "es_cataleg_colectiu_dip_bcn",
						"type": "bit"
					},
					{
						"name": "web_cataleg_colectiu_dip_bcn",
						"type": "varchar"
					},
					{
						"name": "es_cataleg_colectiu_ccuc",
						"type": "bit"
					},
					{
						"name": "web_cataleg_colectiu_ccuc",
						"type": "varchar"
					},
					{
						"name": "es_cataleg_colectiu_beg",
						"type": "bit"
					},
					{
						"name": "web_cataleg_colectiu_beg",
						"type": "varchar"
					},
					{
						"name": "es_cataleg_colectiu_altres",
						"type": "bit"
					},
					{
						"name": "web_cataleg_colectiu_altres",
						"type": "varchar"
					},
					{
						"name": "id_director_tractament",
						"type": "int",
						"precision": 10
					},
					{
						"name": "director_nom",
						"type": "varchar"
					},
					{
						"name": "director_primer_cognom",
						"type": "varchar"
					},
					{
						"name": "director_segon_cognom",
						"type": "varchar"
					},
					{
						"name": "adaptada",
						"type": "bit"
					},
					{
						"name": "observacions",
						"type": "varchar"
					},
					{
						"name": "obs_itineraris",
						"type": "varchar"
					},
					{
						"name": "data_alta",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_alta",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_modif",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_modif",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_baixa",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_baixa",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_adscripcio",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_categoria_esp",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "DIB_STG",
					"table": "STG_DIB_DIM_BIBLIOTEQUES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_DIM_HORARIS_HIVERN_DIBICA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_horari_hivern",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_biblioteca",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dl_mati_ini",
						"type": "varchar"
					},
					{
						"name": "dl_mati_fi",
						"type": "varchar"
					},
					{
						"name": "dl_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "dl_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "dt_mati_ini",
						"type": "varchar"
					},
					{
						"name": "dt_mati_fi",
						"type": "varchar"
					},
					{
						"name": "dt_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "dt_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "dc_mati_ini",
						"type": "varchar"
					},
					{
						"name": "dc_mati_fi",
						"type": "varchar"
					},
					{
						"name": "dc_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "dc_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "dj_mati_ini",
						"type": "varchar"
					},
					{
						"name": "dj_mati_fi",
						"type": "varchar"
					},
					{
						"name": "dj_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "dj_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "dv_mati_ini",
						"type": "varchar"
					},
					{
						"name": "dv_mati_fi",
						"type": "varchar"
					},
					{
						"name": "dv_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "dv_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "ds_mati_ini",
						"type": "varchar"
					},
					{
						"name": "ds_mati_fi",
						"type": "varchar"
					},
					{
						"name": "ds_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "ds_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "dg_mati_ini",
						"type": "varchar"
					},
					{
						"name": "dg_mati_fi",
						"type": "varchar"
					},
					{
						"name": "dg_tarda_ini",
						"type": "varchar"
					},
					{
						"name": "dg_tarda_fi",
						"type": "varchar"
					},
					{
						"name": "resum",
						"type": "varchar"
					},
					{
						"name": "observacions",
						"type": "varchar"
					},
					{
						"name": "data_alta",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_alta",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_modif",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_modif",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_baixa",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_baixa",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "DIB_STG",
					"table": "STG_DIB_DIM_HORARIS_HIVERN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_DIM_LOCATIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_BIBLIOTECA",
						"type": "nvarchar"
					},
					{
						"name": "ID_AGENCY",
						"type": "nvarchar"
					},
					{
						"name": "TERMINAL",
						"type": "nvarchar"
					},
					{
						"name": "LOCATION",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_DIM_LOCATIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_DIM_REL_P_TYPE_INDICADOR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DESC_CONSULTA",
						"type": "nvarchar"
					},
					{
						"name": "P_TYPE",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INDICADOR",
						"type": "nvarchar"
					},
					{
						"name": "ID_INDICADOR",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_DIM_REL_P_TYPE_INDICADOR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_DIM_TERRITORIAL_AMBIT_TERRITORIAL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IDAmbit",
						"type": "varchar"
					},
					{
						"name": "Nom_Ambit",
						"type": "varchar"
					},
					{
						"name": "Data_baixa",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "TER_STG",
					"table": "STG_TER_DIM_AMBIT_TERRITORIAL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_DIM_TERRITORIAL_COMARCA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "INE_Comarca",
						"type": "varchar"
					},
					{
						"name": "IDAmbit",
						"type": "varchar"
					},
					{
						"name": "Nom_Comarca",
						"type": "varchar"
					},
					{
						"name": "Nom_Comarca_cat",
						"type": "varchar"
					},
					{
						"name": "cod_sstt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Data_baixa",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "TER_STG",
					"table": "STG_TER_DIM_COMARCA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_DIM_TERRITORIAL_MUNICIPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "INE_Municipi",
						"type": "varchar"
					},
					{
						"name": "INE_Comarca",
						"type": "varchar"
					},
					{
						"name": "INE_Provincia",
						"type": "varchar"
					},
					{
						"name": "Nom_Municipi",
						"type": "varchar"
					},
					{
						"name": "Nom_Municipi_cat",
						"type": "varchar"
					},
					{
						"name": "CP",
						"type": "varchar"
					},
					{
						"name": "Altitud",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Superficie",
						"type": "decimal",
						"precision": 6,
						"scale": 2
					},
					{
						"name": "Cap_Pais",
						"type": "bit"
					},
					{
						"name": "Cap_Comunitat_Autonoma",
						"type": "bit"
					},
					{
						"name": "Cap_Provincia",
						"type": "bit"
					},
					{
						"name": "Cap_Comarca",
						"type": "bit"
					},
					{
						"name": "IDAmbit",
						"type": "varchar"
					},
					{
						"name": "cod_sstt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Data_baixa",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "TER_STG",
					"table": "STG_TER_DIM_MUNICIPI"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_DIM_TERRITORIAL_PROVINCIA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "INE_Provincia",
						"type": "varchar"
					},
					{
						"name": "INE_Comunitat_Autonoma",
						"type": "varchar"
					},
					{
						"name": "Nom_Provincia",
						"type": "varchar"
					},
					{
						"name": "Nom_Provincia_cat",
						"type": "varchar"
					},
					{
						"name": "Data_baixa",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "TER_STG",
					"table": "STG_TER_DIM_PROVINCIA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_FACT_ALTES_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi",
						"type": "nvarchar"
					},
					{
						"name": "Significat",
						"type": "nvarchar"
					},
					{
						"name": "a  Llibre",
						"type": "nvarchar"
					},
					{
						"name": "b  Revista",
						"type": "nvarchar"
					},
					{
						"name": "c  Partitura impr.",
						"type": "nvarchar"
					},
					{
						"name": "d  Partitura manus.",
						"type": "nvarchar"
					},
					{
						"name": "e  Mapa imprès",
						"type": "nvarchar"
					},
					{
						"name": "f  Mapa manuscrit",
						"type": "nvarchar"
					},
					{
						"name": "g  Vídeo DVD",
						"type": "nvarchar"
					},
					{
						"name": "i  Sonor no musical",
						"type": "nvarchar"
					},
					{
						"name": "j  Sonor musical",
						"type": "nvarchar"
					},
					{
						"name": "k  Gràfic",
						"type": "nvarchar"
					},
					{
						"name": "l  Article",
						"type": "nvarchar"
					},
					{
						"name": "m  Fitxer informàtic",
						"type": "nvarchar"
					},
					{
						"name": "n  Tesi",
						"type": "nvarchar"
					},
					{
						"name": "o  Equip",
						"type": "nvarchar"
					},
					{
						"name": "p  Material d'arxiu",
						"type": "nvarchar"
					},
					{
						"name": "r  Objecte",
						"type": "nvarchar"
					},
					{
						"name": "t  Manuscrit",
						"type": "nvarchar"
					},
					{
						"name": "u  Base de dades",
						"type": "nvarchar"
					},
					{
						"name": "v  Revista en línia",
						"type": "nvarchar"
					},
					{
						"name": "z  Llibre en línia",
						"type": "nvarchar"
					},
					{
						"name": "  Totals  ",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_FACT_ALTES_BIBLIOGRAFICS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_FACT_ALTES_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi",
						"type": "nvarchar"
					},
					{
						"name": "Significat",
						"type": "nvarchar"
					},
					{
						"name": "4  Llibre prestable ",
						"type": "nvarchar"
					},
					{
						"name": "14  Revista prestable",
						"type": "nvarchar"
					},
					{
						"name": "24  Sonor prestable",
						"type": "nvarchar"
					},
					{
						"name": "34  Vídeo prestable",
						"type": "nvarchar"
					},
					{
						"name": "44  Electrònic prestable",
						"type": "nvarchar"
					},
					{
						"name": "54  Gràfic prestable",
						"type": "nvarchar"
					},
					{
						"name": "64  Mapa prestable",
						"type": "nvarchar"
					},
					{
						"name": "74  Partitura prestable",
						"type": "nvarchar"
					},
					{
						"name": "84  Altre material prestable",
						"type": "nvarchar"
					},
					{
						"name": "99  Temari oposicions",
						"type": "nvarchar"
					},
					{
						"name": "100  Llibre no prestable",
						"type": "nvarchar"
					},
					{
						"name": "110  Revista no prestable",
						"type": "nvarchar"
					},
					{
						"name": "120  Sonor no prestable",
						"type": "nvarchar"
					},
					{
						"name": "130  Vídeo no prestable",
						"type": "nvarchar"
					},
					{
						"name": "140  Electrònic no prestable",
						"type": "nvarchar"
					},
					{
						"name": "150  Gràfic no prestable",
						"type": "nvarchar"
					},
					{
						"name": "160  Mapa no prestable",
						"type": "nvarchar"
					},
					{
						"name": "170  Partitura no prestable",
						"type": "nvarchar"
					},
					{
						"name": "173  Manuscrit no prestable",
						"type": "nvarchar"
					},
					{
						"name": "175  Microforma no prestable",
						"type": "nvarchar"
					},
					{
						"name": "180  Altre material no prestable",
						"type": "nvarchar"
					},
					{
						"name": "190  Analítica no prestable",
						"type": "nvarchar"
					},
					{
						"name": "  Totals  ",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_FACT_ALTES_EXEMPLARS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_FACT_ALTES_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi",
						"type": "nvarchar"
					},
					{
						"name": "Significat",
						"type": "nvarchar"
					},
					{
						"name": "-  Sense informar",
						"type": "nvarchar"
					},
					{
						"name": "0  Desconegut",
						"type": "nvarchar"
					},
					{
						"name": "1  Altres",
						"type": "nvarchar"
					},
					{
						"name": "2  Cessada",
						"type": "nvarchar"
					},
					{
						"name": "4  Es rep",
						"type": "nvarchar"
					},
					{
						"name": "5  No es rep",
						"type": "nvarchar"
					},
					{
						"name": "  Totals  ",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_FACT_ALTES_HOLDINGS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_FACT_ALTES_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi",
						"type": "nvarchar"
					},
					{
						"name": "Significat",
						"type": "nvarchar"
					},
					{
						"name": "10  General intern",
						"type": "nvarchar"
					},
					{
						"name": "11  Bad Code",
						"type": "nvarchar"
					},
					{
						"name": "20  General extern",
						"type": "nvarchar"
					},
					{
						"name": "25  BEG",
						"type": "nvarchar"
					},
					{
						"name": "30  Personal de la biblioteca",
						"type": "nvarchar"
					},
					{
						"name": "110  Institució interna",
						"type": "nvarchar"
					},
					{
						"name": "120  Institució externa",
						"type": "nvarchar"
					},
					{
						"name": "  Totals  ",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_FACT_ALTES_USUARIS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_FACT_HIST_TOTAL_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_HIST_FACT_TOTAL_EXEMPLARS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_FACT_PRESTECS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AGENCY",
						"type": "nvarchar"
					},
					{
						"name": "LOCATION",
						"type": "nvarchar"
					},
					{
						"name": "I TYPE",
						"type": "nvarchar"
					},
					{
						"name": "OUT DATE",
						"type": "nvarchar"
					},
					{
						"name": "OUT LOC",
						"type": "nvarchar"
					},
					{
						"name": "PAT AGENCY",
						"type": "nvarchar"
					},
					{
						"name": "HOME LIBR",
						"type": "nvarchar"
					},
					{
						"name": "P TYPE",
						"type": "nvarchar"
					},
					{
						"name": "RECORD #(Patron)",
						"type": "nvarchar"
					},
					{
						"name": "RECORD #(Item)",
						"type": "nvarchar"
					},
					{
						"name": " DE BARRES",
						"type": "nvarchar"
					},
					{
						"name": "CALL #",
						"type": "nvarchar"
					},
					{
						"name": "RECORD #(BIBLIO)",
						"type": "nvarchar"
					},
					{
						"name": "LANG",
						"type": "nvarchar"
					},
					{
						"name": "MAT TYPE",
						"type": "nvarchar"
					},
					{
						"name": "BIB LVL",
						"type": "nvarchar"
					},
					{
						"name": "COUNTRY",
						"type": "nvarchar"
					},
					{
						"name": "008 Data 1",
						"type": "nvarchar"
					},
					{
						"name": "020",
						"type": "nvarchar"
					},
					{
						"name": "022",
						"type": "nvarchar"
					},
					{
						"name": "CLASIF CDU",
						"type": "nvarchar"
					},
					{
						"name": "AUTHOR",
						"type": "nvarchar"
					},
					{
						"name": "TITLE",
						"type": "nvarchar"
					},
					{
						"name": "PUB INFO",
						"type": "nvarchar"
					},
					{
						"name": "IUSE3",
						"type": "nvarchar"
					},
					{
						"name": "INTL USE",
						"type": "nvarchar"
					},
					{
						"name": "IN LOC",
						"type": "nvarchar"
					},
					{
						"name": "PCODE1",
						"type": "nvarchar"
					},
					{
						"name": "PCODE3",
						"type": "nvarchar"
					},
					{
						"name": "PCODE2",
						"type": "nvarchar"
					},
					{
						"name": "ADREÇA",
						"type": "nvarchar"
					},
					{
						"name": "PCODE4",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_FACT_PRESTECS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_FACT_TOTAL_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi",
						"type": "nvarchar"
					},
					{
						"name": "Significat",
						"type": "nvarchar"
					},
					{
						"name": "-  Bad Code",
						"type": "nvarchar"
					},
					{
						"name": "a  Llibre",
						"type": "nvarchar"
					},
					{
						"name": "b  Revista",
						"type": "nvarchar"
					},
					{
						"name": "c  Partitura impr.",
						"type": "nvarchar"
					},
					{
						"name": "d  Partitura manus.",
						"type": "nvarchar"
					},
					{
						"name": "e  Mapa imprès",
						"type": "nvarchar"
					},
					{
						"name": "f  Mapa manuscrit",
						"type": "nvarchar"
					},
					{
						"name": "g  Vídeo DVD",
						"type": "nvarchar"
					},
					{
						"name": "i  Sonor no musical",
						"type": "nvarchar"
					},
					{
						"name": "j  Sonor musical",
						"type": "nvarchar"
					},
					{
						"name": "k  Gràfic",
						"type": "nvarchar"
					},
					{
						"name": "l  Article",
						"type": "nvarchar"
					},
					{
						"name": "m  Fitxer informàtic",
						"type": "nvarchar"
					},
					{
						"name": "n  Tesi",
						"type": "nvarchar"
					},
					{
						"name": "o  Equip",
						"type": "nvarchar"
					},
					{
						"name": "p  Material d'arxiu",
						"type": "nvarchar"
					},
					{
						"name": "r  Objecte",
						"type": "nvarchar"
					},
					{
						"name": "t  Manuscrit",
						"type": "nvarchar"
					},
					{
						"name": "u  Base de dades",
						"type": "nvarchar"
					},
					{
						"name": "v  Revista en línia",
						"type": "nvarchar"
					},
					{
						"name": "z  Llibre en línia",
						"type": "nvarchar"
					},
					{
						"name": "  Totals  ",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_FACT_TOTAL_BIBLIOGRAFICS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_FACT_TOTAL_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi",
						"type": "nvarchar"
					},
					{
						"name": "Significat",
						"type": "nvarchar"
					},
					{
						"name": "4  Llibre prestable ",
						"type": "nvarchar"
					},
					{
						"name": "14  Revista prestable",
						"type": "nvarchar"
					},
					{
						"name": "24  Sonor prestable",
						"type": "nvarchar"
					},
					{
						"name": "34  Vídeo prestable",
						"type": "nvarchar"
					},
					{
						"name": "44  Electrònic prestable",
						"type": "nvarchar"
					},
					{
						"name": "54  Gràfic prestable",
						"type": "nvarchar"
					},
					{
						"name": "64  Mapa prestable",
						"type": "nvarchar"
					},
					{
						"name": "74  Partitura prestable",
						"type": "nvarchar"
					},
					{
						"name": "84  Altre material prestable",
						"type": "nvarchar"
					},
					{
						"name": "99  Temari oposicions",
						"type": "nvarchar"
					},
					{
						"name": "100  Llibre no prestable",
						"type": "nvarchar"
					},
					{
						"name": "110  Revista no prestable",
						"type": "nvarchar"
					},
					{
						"name": "120  Sonor no prestable",
						"type": "nvarchar"
					},
					{
						"name": "130  Vídeo no prestable",
						"type": "nvarchar"
					},
					{
						"name": "140  Electrònic no prestable",
						"type": "nvarchar"
					},
					{
						"name": "150  Gràfic no prestable",
						"type": "nvarchar"
					},
					{
						"name": "160  Mapa no prestable",
						"type": "nvarchar"
					},
					{
						"name": "170  Partitura no prestable",
						"type": "nvarchar"
					},
					{
						"name": "173  Manuscrit no prestable",
						"type": "nvarchar"
					},
					{
						"name": "175  Microforma no prestable",
						"type": "nvarchar"
					},
					{
						"name": "180  Altre material no prestable",
						"type": "nvarchar"
					},
					{
						"name": "190  Analítica no prestable",
						"type": "nvarchar"
					},
					{
						"name": "  Totals  ",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_FACT_TOTAL_EXEMPLARS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi",
						"type": "nvarchar"
					},
					{
						"name": "Significat",
						"type": "nvarchar"
					},
					{
						"name": "0",
						"type": "nvarchar"
					},
					{
						"name": "-1",
						"type": "nvarchar"
					},
					{
						"name": "-2",
						"type": "nvarchar"
					},
					{
						"name": "-3",
						"type": "nvarchar"
					},
					{
						"name": "-4",
						"type": "nvarchar"
					},
					{
						"name": "-5",
						"type": "nvarchar"
					},
					{
						"name": "-6",
						"type": "nvarchar"
					},
					{
						"name": "-7",
						"type": "nvarchar"
					},
					{
						"name": "-8",
						"type": "nvarchar"
					},
					{
						"name": "-9",
						"type": "nvarchar"
					},
					{
						"name": "-10",
						"type": "nvarchar"
					},
					{
						"name": "-11",
						"type": "nvarchar"
					},
					{
						"name": "-12",
						"type": "nvarchar"
					},
					{
						"name": "-13",
						"type": "nvarchar"
					},
					{
						"name": "-14",
						"type": "nvarchar"
					},
					{
						"name": "-15",
						"type": "nvarchar"
					},
					{
						"name": "-16",
						"type": "nvarchar"
					},
					{
						"name": "-17",
						"type": "nvarchar"
					},
					{
						"name": "-18",
						"type": "nvarchar"
					},
					{
						"name": "-19",
						"type": "nvarchar"
					},
					{
						"name": "-20",
						"type": "nvarchar"
					},
					{
						"name": "-21",
						"type": "nvarchar"
					},
					{
						"name": "-22",
						"type": "nvarchar"
					},
					{
						"name": "-23",
						"type": "nvarchar"
					},
					{
						"name": "  Totals  ",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_FACT_TOTAL_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi",
						"type": "nvarchar"
					},
					{
						"name": "Significat",
						"type": "nvarchar"
					},
					{
						"name": "-  Sense informar",
						"type": "nvarchar"
					},
					{
						"name": "0  Desconegut",
						"type": "nvarchar"
					},
					{
						"name": "1  Altres",
						"type": "nvarchar"
					},
					{
						"name": "2  Cessada",
						"type": "nvarchar"
					},
					{
						"name": "4  Es rep",
						"type": "nvarchar"
					},
					{
						"name": "5  No es rep",
						"type": "nvarchar"
					},
					{
						"name": "  Totals  ",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_FACT_TOTAL_HOLDINGS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_FACT_TOTAL_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi",
						"type": "nvarchar"
					},
					{
						"name": "Significat",
						"type": "nvarchar"
					},
					{
						"name": "10  General intern",
						"type": "nvarchar"
					},
					{
						"name": "11  Bad Code",
						"type": "nvarchar"
					},
					{
						"name": "20  General extern",
						"type": "nvarchar"
					},
					{
						"name": "25  BEG",
						"type": "nvarchar"
					},
					{
						"name": "30  Personal de la biblioteca",
						"type": "nvarchar"
					},
					{
						"name": "110  Institució interna",
						"type": "nvarchar"
					},
					{
						"name": "120  Institució externa",
						"type": "nvarchar"
					},
					{
						"name": "  Totals  ",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_FACT_TOTAL_USUARIS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_FACT_TRANSACCIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Grup estadístic",
						"type": "nvarchar"
					},
					{
						"name": "préstecs",
						"type": "nvarchar"
					},
					{
						"name": "retorns",
						"type": "nvarchar"
					},
					{
						"name": "renovacions",
						"type": "nvarchar"
					},
					{
						"name": "reserves",
						"type": "nvarchar"
					},
					{
						"name": "Hl/RECLL",
						"type": "nvarchar"
					},
					{
						"name": "TOTAL #",
						"type": "nvarchar"
					},
					{
						"name": "PERCENT",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_FACT_TRANSACCIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_HIST_FACT_ALTES_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_HIST_FACT_ALTES_BIBLIOGRAFICS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_HIST_FACT_ALTES_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_HIST_FACT_ALTES_EXEMPLARS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_HIST_FACT_ALTES_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_HIST_FACT_ALTES_HOLDINGS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_HIST_FACT_ALTES_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_HIST_FACT_ALTES_USUARIS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_HIST_FACT_PRESTECS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_AGENCY",
						"type": "nvarchar"
					},
					{
						"name": "ID_LOCATION",
						"type": "nvarchar"
					},
					{
						"name": "CODI_I_TYPE",
						"type": "nvarchar"
					},
					{
						"name": "DATA_OUT_DATE",
						"type": "nvarchar"
					},
					{
						"name": "ID_OUT_LOC",
						"type": "nvarchar"
					},
					{
						"name": "NUM_PAT_AGENCY",
						"type": "nvarchar"
					},
					{
						"name": "NUM_HOME_LIBR",
						"type": "nvarchar"
					},
					{
						"name": "NUM_P_TYPE",
						"type": "nvarchar"
					},
					{
						"name": "CODI_RECORD_PATRON",
						"type": "nvarchar"
					},
					{
						"name": "CODI_RECORD_ITEM",
						"type": "nvarchar"
					},
					{
						"name": "NUM_DE_BARRES",
						"type": "nvarchar"
					},
					{
						"name": "NUM_CALL",
						"type": "nvarchar"
					},
					{
						"name": "DESC_RECORD_BIBLIO",
						"type": "nvarchar"
					},
					{
						"name": "CODI_LANG",
						"type": "nvarchar"
					},
					{
						"name": "CODI_MAT_TYPE",
						"type": "nvarchar"
					},
					{
						"name": "CODI_BIB_LVL",
						"type": "nvarchar"
					},
					{
						"name": "CODI_COUNTRY",
						"type": "nvarchar"
					},
					{
						"name": "CODI_008",
						"type": "nvarchar"
					},
					{
						"name": "CODI_020",
						"type": "nvarchar"
					},
					{
						"name": "CODI_022",
						"type": "nvarchar"
					},
					{
						"name": "CODI_CLASIF_CDU",
						"type": "nvarchar"
					},
					{
						"name": "DESC_AUTHOR",
						"type": "nvarchar"
					},
					{
						"name": "DESC_TITLE",
						"type": "nvarchar"
					},
					{
						"name": "DESC_PUB_INFO",
						"type": "nvarchar"
					},
					{
						"name": "CODI_IUSE3",
						"type": "nvarchar"
					},
					{
						"name": "CODI_INTL_USE",
						"type": "nvarchar"
					},
					{
						"name": "CODI_IN_LOC",
						"type": "nvarchar"
					},
					{
						"name": "CODI_PCODE1",
						"type": "nvarchar"
					},
					{
						"name": "CODI_PCODE3",
						"type": "nvarchar"
					},
					{
						"name": "CODI_PCODE2",
						"type": "nvarchar"
					},
					{
						"name": "DESC_ADREÇA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_PCODE4",
						"type": "nvarchar"
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_HIST_FACT_PRESTECS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_HIST_FACT_TOTAL_EXEMPLARS_PROCEDENCIA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi",
						"type": "nvarchar"
					},
					{
						"name": "Significat",
						"type": "nvarchar"
					},
					{
						"name": "0  -",
						"type": "nvarchar"
					},
					{
						"name": "1  -",
						"type": "nvarchar"
					},
					{
						"name": "2  -",
						"type": "nvarchar"
					},
					{
						"name": "3  -",
						"type": "nvarchar"
					},
					{
						"name": "4  -",
						"type": "nvarchar"
					},
					{
						"name": "5  -",
						"type": "nvarchar"
					},
					{
						"name": "6  -",
						"type": "nvarchar"
					},
					{
						"name": "7  -",
						"type": "nvarchar"
					},
					{
						"name": "8  -",
						"type": "nvarchar"
					},
					{
						"name": "9  -",
						"type": "nvarchar"
					},
					{
						"name": "10  -",
						"type": "nvarchar"
					},
					{
						"name": "11  -",
						"type": "nvarchar"
					},
					{
						"name": "12  -",
						"type": "nvarchar"
					},
					{
						"name": "13  -",
						"type": "nvarchar"
					},
					{
						"name": "14  -",
						"type": "nvarchar"
					},
					{
						"name": "15  -",
						"type": "nvarchar"
					},
					{
						"name": "16  -",
						"type": "nvarchar"
					},
					{
						"name": "17  -",
						"type": "nvarchar"
					},
					{
						"name": "18  -",
						"type": "nvarchar"
					},
					{
						"name": "19  -",
						"type": "nvarchar"
					},
					{
						"name": "20  -",
						"type": "nvarchar"
					},
					{
						"name": "21  -",
						"type": "nvarchar"
					},
					{
						"name": "22  -",
						"type": "nvarchar"
					},
					{
						"name": "23  -",
						"type": "nvarchar"
					},
					{
						"name": "totals",
						"type": "nvarchar"
					},
					{
						"name": "DATA_INSERCIO",
						"type": "date"
					},
					{
						"name": "DATA_PERIODE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_HIST_FACT_TOTAL_EXEMPLARS_PROCEDENCIA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_HIST_FACT_TOTAL_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_HIST_FACT_TOTAL_HOLDINGS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_HIST_FACT_TOTAL_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_HIST_FACT_TOTAL_USUARIS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_BEG_HIST_FACT_TRANSACCIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "BEG_STG",
					"table": "STG_BEG_HIST_FACT_TRANSACCIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_DIB_DICC_LLOCS_TREBALL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "DIB_STG",
					"table": "STG_DIB_DIM_DICC_LLOCS_TREBALL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_DIB_DIM_CATEGORIA_ESP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_categoria_esp",
						"type": "int",
						"precision": 10
					},
					{
						"name": "desc_categoria_esp",
						"type": "varchar"
					},
					{
						"name": "data_alta",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_alta",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_modif",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_modif",
						"type": "int",
						"precision": 10
					},
					{
						"name": "data_baixa",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id_usuari_baixa",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "DIB_STG",
					"table": "STG_DIB_DIM_CATEGORIA_ESP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_DIB_DIM_DICC_TRACTAMENTS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "DIB_STG",
					"table": "STG_DIB_DIM_DICC_TRACTAMENTS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_DIB_DIM_ROLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_CLT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "idRol",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_ROL",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "DIB_STG",
					"table": "STG_DIB_DIM_ROLS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_DIB_ROLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_DIBICA",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "idRol",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_ROL",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ROLS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_DIBICA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TERRITORIAL_AMBIT_TERRITORIAL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_TERRITORIAL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "TERRITORIAL"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "IDAmbit",
						"type": "varchar"
					},
					{
						"name": "Nom_Ambit",
						"type": "varchar"
					},
					{
						"name": "Data_baixa",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AMBIT_TERRITORIAL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_TERRITORIAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TERRITORIAL_COMARCA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_TERRITORIAL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "TERRITORIAL"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "INE_Comarca",
						"type": "varchar"
					},
					{
						"name": "IDAmbit",
						"type": "varchar"
					},
					{
						"name": "Nom_Comarca",
						"type": "varchar"
					},
					{
						"name": "Nom_Comarca_cat",
						"type": "varchar"
					},
					{
						"name": "cod_sstt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Data_baixa",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "COMARCA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_TERRITORIAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TERRITORIAL_MUNICIPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_TERRITORIAL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "TERRITORIAL"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "INE_Municipi",
						"type": "varchar"
					},
					{
						"name": "INE_Comarca",
						"type": "varchar"
					},
					{
						"name": "INE_Provincia",
						"type": "varchar"
					},
					{
						"name": "Nom_Municipi",
						"type": "varchar"
					},
					{
						"name": "Nom_Municipi_cat",
						"type": "varchar"
					},
					{
						"name": "CP",
						"type": "varchar"
					},
					{
						"name": "Altitud",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Superficie",
						"type": "decimal",
						"precision": 6,
						"scale": 2
					},
					{
						"name": "Cap_Pais",
						"type": "bit"
					},
					{
						"name": "Cap_Comunitat_Autonoma",
						"type": "bit"
					},
					{
						"name": "Cap_Provincia",
						"type": "bit"
					},
					{
						"name": "Cap_Comarca",
						"type": "bit"
					},
					{
						"name": "IDAmbit",
						"type": "varchar"
					},
					{
						"name": "cod_sstt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Data_baixa",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "MUNICIPI"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_TERRITORIAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TERRITORIAL_PROVINCIA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_TERRITORIAL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "TERRITORIAL"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "INE_Provincia",
						"type": "varchar"
					},
					{
						"name": "INE_Comunitat_Autonoma",
						"type": "varchar"
					},
					{
						"name": "Nom_Provincia",
						"type": "varchar"
					},
					{
						"name": "Nom_Provincia_cat",
						"type": "varchar"
					},
					{
						"name": "Data_baixa",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PROVINCIA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_TERRITORIAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TXT_PRESTEC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_CLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"NombreArchivo": {
						"type": "string",
						"defaultValue": "2022_01_01.txt"
					}
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().NombreArchivo",
							"type": "Expression"
						},
						"folderPath": "/iPCBI_x_sharebdd1/SERVEIS/sFTP/CLT/BEG"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SFTP_CLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLSX_BEG_DIM_REL_P_TYPE_INDICADOR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FITXERS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BEG_DIM_REL_P_TYPE_INDICADOR.xlsx",
						"container": "cltsintesibeg"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AKV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AKV_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('AzureBlobStorage1_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationRuntimeAzure",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/linkedServices/AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_CLT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('DB_CLT_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationRuntimeAzure",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/linkedServices/AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_DIBICA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('DB_DIBICA_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_TERRITORIAL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('DB_TERRITORIAL_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFTP_CLT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('SFTP_CLT_properties_typeProperties_host')]",
					"port": "22",
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('SFTP_CLT_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "sftp-beg-connection"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntegrationRuntimeAzure')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntegrationRuntimeTimeToLive')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_BEG_DIM_AUTOPRESTECS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_AUTOPRESTECS",
								"type": "DatasetReference"
							},
							"name": "STGDimAutoprestecs"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_DIM_AUTOPRESTECS",
								"type": "DatasetReference"
							},
							"name": "ODSDimAutoprestecs"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tDESC_BIBLIOTECA as string,\n\t\tID_AGENCY as string,\n\t\tTERMINAL as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGDimAutoprestecs\nSTGDimAutoprestecs sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tDESC_BIBLIOTECA as string,\n\t\tID_AGENCY as string,\n\t\tTERMINAL as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSDimAutoprestecs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_AUTOPRESTECS')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_DIM_AUTOPRESTECS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_BEG_DIM_LOCATIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "STGDimLocations"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "ODSDimLocations"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_AGENCY as string,\n\t\tTERMINAL as string,\n\t\tLOCATION as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGDimLocations\nSTGDimLocations sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_AGENCY as string,\n\t\tTERMINAL as string,\n\t\tLOCATION as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSDimLocations"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_LOCATIONS')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_DIM_LOCATIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_BEG_DIM_REL_P_TYPE_INDICADOR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference"
							},
							"name": "STGDimRelPTypeIndicador"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference"
							},
							"name": "ODSDimRelPTypeIndicador"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tDESC_CONSULTA as string,\n\t\tP_TYPE as string,\n\t\tCODI_INDICADOR as string,\n\t\tID_INDICADOR as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGDimRelPTypeIndicador\nSTGDimRelPTypeIndicador sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDESC_CONSULTA as string,\n\t\tP_TYPE as string,\n\t\tCODI_INDICADOR as string,\n\t\tID_INDICADOR as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSDimRelPTypeIndicador"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_REL_P_TYPE_INDICADOR')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_DIM_REL_P_TYPE_INDICADOR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_BEG_DM_INTER_INTRA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Maping parametrizado para calcular la mayoria de indicadores intraanuales y interanuales de BEG. Se calculan todos a nivel de Biblioteca, distrito, municipio, comarca, ambito territorial y nacional.",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMbegFACTindicadors"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMbegDIMbiblioteques"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERRITORIAL_COMARCA",
								"type": "DatasetReference"
							},
							"name": "DMterDIMcomarca"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERRITORIAL_MUNICIPI",
								"type": "DatasetReference"
							},
							"name": "DMterDIMmunicipi"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS_INTER_INTRA",
								"type": "DatasetReference"
							},
							"name": "DMbegFACTindicadors2"
						}
					],
					"transformations": [
						{
							"name": "DCcalculINDbib"
						},
						{
							"name": "selectBIBLIOTEQUESlocalitats"
						},
						{
							"name": "aggVALORbib"
						},
						{
							"name": "fltINDICADORnumerador"
						},
						{
							"name": "numBIBLIOTECA"
						},
						{
							"name": "aggVALORdist"
						},
						{
							"name": "aggVALORmuni"
						},
						{
							"name": "IJbiblioteques4"
						},
						{
							"name": "IJmunicipi4"
						},
						{
							"name": "IJcomarca4"
						},
						{
							"name": "aggVALORcomarca"
						},
						{
							"name": "aggVALORambit"
						},
						{
							"name": "aggVALORnacional"
						},
						{
							"name": "fltINDICADORdenominador"
						},
						{
							"name": "denBIBLIOTECA"
						},
						{
							"name": "fltDATES"
						},
						{
							"name": "dcPERIODE"
						},
						{
							"name": "DCcalculINDdist"
						},
						{
							"name": "DCcalculINDmuni"
						},
						{
							"name": "DCcalculINDcom"
						},
						{
							"name": "DCcalculINDambitTERR"
						},
						{
							"name": "DCcalculINDnacion"
						},
						{
							"name": "joinNUMERAdenominaBIB"
						},
						{
							"name": "unionDENbibliotecas"
						},
						{
							"name": "joinNUMERAdenominaNACIONAL"
						},
						{
							"name": "joinNUMERAdenominaMUNI"
						},
						{
							"name": "joinNUMERAdenominaDIST"
						},
						{
							"name": "joinNUMERAdenominaCOMARCA"
						},
						{
							"name": "joinNUMERAdenominaAMBIT"
						},
						{
							"name": "NACIONAL"
						},
						{
							"name": "BIBLIOTECA"
						},
						{
							"name": "MUNICIPI"
						},
						{
							"name": "DISTRICTE"
						},
						{
							"name": "COMARCA"
						},
						{
							"name": "AMBITterritorial"
						},
						{
							"name": "LJnan"
						},
						{
							"name": "LJmun"
						},
						{
							"name": "LJdis"
						},
						{
							"name": "LJcom"
						},
						{
							"name": "LJamb"
						},
						{
							"name": "selectCOLUMNAS"
						},
						{
							"name": "dcFLAGinterINTRA"
						},
						{
							"name": "dcINDICADORnumerador"
						},
						{
							"name": "dcINDICADORdenominador"
						},
						{
							"name": "sNACIONALnum"
						},
						{
							"name": "sNACIONALden"
						},
						{
							"name": "sBIBden"
						},
						{
							"name": "sBIBnum"
						},
						{
							"name": "sMUNInum"
						},
						{
							"name": "sMUNIden"
						},
						{
							"name": "sDISTnum"
						},
						{
							"name": "sDISTden"
						},
						{
							"name": "sCOMARCAnum"
						},
						{
							"name": "sCOMARCAden"
						},
						{
							"name": "sAMBITnum"
						},
						{
							"name": "sAMBITden"
						},
						{
							"name": "NACIONALden"
						},
						{
							"name": "BIBnum"
						},
						{
							"name": "MUNIden"
						},
						{
							"name": "DISTden"
						},
						{
							"name": "COMARCAden"
						},
						{
							"name": "AMBITden"
						},
						{
							"name": "IJbibliotequesDIM"
						},
						{
							"name": "IJmunicipiDIM"
						},
						{
							"name": "IJcomarcaDIM"
						},
						{
							"name": "fltPOBLACION"
						},
						{
							"name": "aggPOBLACION"
						},
						{
							"name": "dcDESCtramPOBLACIO"
						},
						{
							"name": "ijDESCtramPOBLACIO"
						},
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     P_DATA_INI as integer (20220101),",
						"     P_DATA_FI as integer (20220101),",
						"     P_FLAG_INTER as integer (1),",
						"     P_NOM_IND_CALC as string (\"IND_X_X\"),",
						"     P_CIEN_MIL as integer (1000),",
						"     P_IND_ORIGEN_NUMERADOR as string[] ([\"IND_X_X\",\"IND_Y_Y\"]),",
						"     P_IND_ORIGEN_DENOMINADOR as string[] ([\"IND_X_X\",\"IND_Y_Y\"])",
						"}",
						"source(output(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as decimal(17,6),",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMbegFACTindicadors",
						"source(output(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_AGENCY as string,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMbegDIMbiblioteques",
						"source(output(",
						"          INE_COMARCA as string,",
						"          ID_AMBIT_TERRITORIAL as string,",
						"          DESC_COMARCA as string,",
						"          DESC_COMARCA_CAT as string,",
						"          CODI_SSTT as integer,",
						"          DATA_BAIXA as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMterDIMcomarca",
						"source(output(",
						"          INE_MUNICIPI as string,",
						"          INE_COMARCA as string,",
						"          INE_PROVINCIA as string,",
						"          DESC_MUNICIPI as string,",
						"          DESC_MUNICIPI_CAT as string,",
						"          CP as string,",
						"          NUM_ALTITUD as integer,",
						"          NUM_SUPERFICIE as decimal(6,2),",
						"          FLAG_CAPITAL_PAIS as boolean,",
						"          FLAG_CAPITAL_COMUNIDAD_AUTONOMA as boolean,",
						"          FLAG_CAPITAL_PROVINCIA as boolean,",
						"          FLAG_CAPITAL_COMARCA as boolean,",
						"          ID_AMBIT_TERRITORIAL as string,",
						"          CODI_SSTT as integer,",
						"          DATA_BAIXA as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMterDIMmunicipi",
						"joinNUMERAdenominaBIB derive(ID_INDICADOR = $P_NOM_IND_CALC,",
						"          VALOR_BIB = iif(isNull($P_CIEN_MIL * VALOR / VALOR_den),      \r",
						"    toFloat(0),     \r",
						"    toFloat($P_CIEN_MIL * VALOR / VALOR_den)      \r",
						"    )) ~> DCcalculINDbib",
						"DMbegDIMbiblioteques select(mapColumn(",
						"          ID_BIBLIOTECA,",
						"          CODI_BIBLIOTECA,",
						"          INE_MUNICIPI,",
						"          ID_DISTRICTE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectBIBLIOTEQUESlocalitats",
						"unionDENbibliotecas aggregate(groupBy(CODI_BIBLIOTECA,",
						"          FLAG_NUM_DEM,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORbib",
						"dcPERIODE filter(contains($P_IND_ORIGEN_NUMERADOR, #item == CODI_INDICADOR)) ~> fltINDICADORnumerador",
						"dcINDICADORnumerador select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          FLAG_NUM_DEM,",
						"          IND_VALOR,",
						"          DATA_PERIODE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> numBIBLIOTECA",
						"IJbiblioteques4 aggregate(groupBy(ID_DISTRICTE,",
						"          FLAG_NUM_DEM,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORdist",
						"IJbiblioteques4 aggregate(groupBy(INE_MUNICIPI,",
						"          FLAG_NUM_DEM,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORmuni",
						"unionDENbibliotecas, selectBIBLIOTEQUESlocalitats join(unionDENbibliotecas@CODI_BIBLIOTECA == selectBIBLIOTEQUESlocalitats@CODI_BIBLIOTECA,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJbiblioteques4",
						"IJbiblioteques4, DMterDIMmunicipi join(selectBIBLIOTEQUESlocalitats@INE_MUNICIPI == DMterDIMmunicipi@INE_MUNICIPI,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJmunicipi4",
						"IJmunicipi4, DMterDIMcomarca join(DMterDIMmunicipi@INE_COMARCA == DMterDIMcomarca@INE_COMARCA,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJcomarca4",
						"IJmunicipi4 aggregate(groupBy(INE_COMARCA,",
						"          FLAG_NUM_DEM,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORcomarca",
						"IJcomarca4 aggregate(groupBy(DMterDIMcomarca@ID_AMBIT_TERRITORIAL,",
						"          FLAG_NUM_DEM,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORambit",
						"unionDENbibliotecas aggregate(groupBy(FLAG_NUM_DEM,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORnacional",
						"dcPERIODE filter(contains($P_IND_ORIGEN_DENOMINADOR, #item == CODI_INDICADOR)) ~> fltINDICADORdenominador",
						"dcINDICADORdenominador select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          FLAG_NUM_DEM,",
						"          IND_VALOR,",
						"          DATA_PERIODE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> denBIBLIOTECA",
						"DMbegFACTindicadors filter(iif($P_FLAG_INTER == 1,",
						"    year(DATA_PERIODE) <= year(toDate(toString($P_DATA_FI),\"yyyyMMdd\"))",
						"    &&",
						"    year(DATA_PERIODE) >= year(toDate(toString($P_DATA_INI),\"yyyyMMdd\"))",
						"    ,",
						"    DATA_PERIODE < addDays(toDate(toString($P_DATA_FI),\"yyyyMMdd\"),1)",
						"    &&",
						"    DATA_PERIODE >= toDate(toString($P_DATA_INI),\"yyyyMMdd\")",
						")) ~> fltDATES",
						"fltDATES derive(DATA_PERIODE = iif($P_FLAG_INTER == 1,\r",
						"    toDate(concat(toString(year(DATA_PERIODE)),\"-12-01\"),\"yyyy-MM-dd\"),\r",
						"    DATA_PERIODE\r",
						")) ~> dcPERIODE",
						"joinNUMERAdenominaDIST derive(ID_INDICADOR = $P_NOM_IND_CALC,",
						"          VALOR_DIS = iif(isNull($P_CIEN_MIL * VALOR / VALOR_den), \r",
						"    toFloat(0), \r",
						"    toFloat($P_CIEN_MIL * VALOR / VALOR_den) \r",
						"    )) ~> DCcalculINDdist",
						"joinNUMERAdenominaMUNI derive(ID_INDICADOR = $P_NOM_IND_CALC,",
						"          VALOR_MUN = iif(isNull($P_CIEN_MIL * VALOR / VALOR_den),      \r",
						"    toFloat(0),      \r",
						"    toFloat($P_CIEN_MIL * VALOR / VALOR_den)      \r",
						"    )) ~> DCcalculINDmuni",
						"joinNUMERAdenominaCOMARCA derive(ID_INDICADOR = $P_NOM_IND_CALC,",
						"          VALOR_COM = iif(isNull($P_CIEN_MIL * VALOR / VALOR_den), \r",
						"    toFloat(0), \r",
						"    toFloat($P_CIEN_MIL * VALOR / VALOR_den) \r",
						"    )) ~> DCcalculINDcom",
						"joinNUMERAdenominaAMBIT derive(ID_INDICADOR = $P_NOM_IND_CALC,",
						"          VALOR_AMB = iif(isNull($P_CIEN_MIL * VALOR / VALOR_den), \r",
						"    toFloat(0), \r",
						"    toFloat($P_CIEN_MIL * VALOR / VALOR_den) \r",
						"    )) ~> DCcalculINDambitTERR",
						"joinNUMERAdenominaNACIONAL derive(ID_INDICADOR = $P_NOM_IND_CALC,",
						"          VALOR_NAN = iif(isNull($P_CIEN_MIL * VALOR / VALOR_den),      \r",
						"    toFloat(0),      \r",
						"    toFloat($P_CIEN_MIL * VALOR / VALOR_den)      \r",
						"    )) ~> DCcalculINDnacion",
						"sBIBden, BIBnum join(CODI_BIBLIOTECA == CODI_BIBLIOTECA_den",
						"     && DATA_PERIODE == DATA_PERIODE_den,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaBIB",
						"numBIBLIOTECA, denBIBLIOTECA union(byName: true)~> unionDENbibliotecas",
						"sNACIONALnum, NACIONALden join(DATA_PERIODE == DATA_PERIODE_den,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaNACIONAL",
						"sMUNInum, MUNIden join(INE_MUNICIPI == INE_MUNICIPI_den",
						"     && DATA_PERIODE == DATA_PERIODE_den,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaMUNI",
						"sDISTnum, DISTden join(ID_DISTRICTE == ID_DISTRICTE_den",
						"     && DATA_PERIODE == DATA_PERIODE_den,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaDIST",
						"sCOMARCAnum, COMARCAden join(INE_COMARCA == INE_COMARCA_den",
						"     && DATA_PERIODE == DATA_PERIODE_den,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaCOMARCA",
						"sAMBITnum, AMBITden join(ID_AMBIT_TERRITORIAL == ID_AMBIT_TERRITORIAL_den",
						"     && DATA_PERIODE == DATA_PERIODE_den,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaAMBIT",
						"DCcalculINDnacion select(mapColumn(",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_NAN",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> NACIONAL",
						"DCcalculINDbib select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_BIB",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> BIBLIOTECA",
						"DCcalculINDmuni select(mapColumn(",
						"          INE_MUNICIPI,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_MUN",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MUNICIPI",
						"DCcalculINDdist select(mapColumn(",
						"          ID_DISTRICTE,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_DIS",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DISTRICTE",
						"DCcalculINDcom select(mapColumn(",
						"          INE_COMARCA,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_COM",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> COMARCA",
						"DCcalculINDambitTERR select(mapColumn(",
						"          ID_AMBIT_TERRITORIAL,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_AMB",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AMBITterritorial",
						"BIBLIOTECA, NACIONAL join(BIBLIOTECA@DATA_PERIODE == NACIONAL@DATA_PERIODE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJnan",
						"IJbibliotequesDIM, MUNICIPI join(BIBLIOTECA@DATA_PERIODE == MUNICIPI@DATA_PERIODE",
						"     && DMbegDIMbiblioteques@INE_MUNICIPI == MUNICIPI@INE_MUNICIPI,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJmun",
						"LJmun, DISTRICTE join(BIBLIOTECA@DATA_PERIODE == DISTRICTE@DATA_PERIODE",
						"     && DMbegDIMbiblioteques@ID_DISTRICTE == DISTRICTE@ID_DISTRICTE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJdis",
						"IJmunicipiDIM, COMARCA join(BIBLIOTECA@DATA_PERIODE == COMARCA@DATA_PERIODE",
						"     && DMterDIMmunicipi@INE_COMARCA == COMARCA@INE_COMARCA,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJcom",
						"IJcomarcaDIM, AMBITterritorial join(BIBLIOTECA@DATA_PERIODE == AMBITterritorial@DATA_PERIODE",
						"     && DMterDIMcomarca@ID_AMBIT_TERRITORIAL == AMBITterritorial@ID_AMBIT_TERRITORIAL,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJamb",
						"dcFLAGinterINTRA select(mapColumn(",
						"          CODI_BIBLIOTECA = BIBLIOTECA@CODI_BIBLIOTECA,",
						"          DATA_PERIODE = BIBLIOTECA@DATA_PERIODE,",
						"          CODI_INDICADOR = BIBLIOTECA@ID_INDICADOR,",
						"          FLAG_INTER_INTRA,",
						"          IND_VALOR_BIB = VALOR_BIB,",
						"          IND_VALOR_DIS = VALOR_DIS,",
						"          IND_VALOR_MUN = VALOR_MUN,",
						"          IND_VALOR_COM = VALOR_COM,",
						"          IND_VALOR_AMB = VALOR_AMB,",
						"          IND_VALOR_NAN = VALOR_NAN,",
						"          DESC_TRAM_POBLACIO,",
						"          DATA_CARREGA",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectCOLUMNAS",
						"ijDESCtramPOBLACIO derive(FLAG_INTER_INTRA = iif($P_FLAG_INTER == 1, 'Interanual', 'Intraanual'),",
						"          DATA_CARREGA = currentDate()) ~> dcFLAGinterINTRA",
						"fltINDICADORnumerador derive(FLAG_NUM_DEM = 'NUMERADOR') ~> dcINDICADORnumerador",
						"fltINDICADORdenominador derive(FLAG_NUM_DEM = 'DENOMINADOR') ~> dcINDICADORdenominador",
						"aggVALORnacional filter(FLAG_NUM_DEM == 'NUMERADOR') ~> sNACIONALnum",
						"aggVALORnacional filter(FLAG_NUM_DEM == 'DENOMINADOR') ~> sNACIONALden",
						"aggVALORbib filter(FLAG_NUM_DEM == 'NUMERADOR') ~> sBIBden",
						"aggVALORbib filter(FLAG_NUM_DEM == 'DENOMINADOR') ~> sBIBnum",
						"aggVALORmuni filter(FLAG_NUM_DEM == 'NUMERADOR') ~> sMUNInum",
						"aggVALORmuni filter(FLAG_NUM_DEM == 'DENOMINADOR') ~> sMUNIden",
						"aggVALORdist filter(FLAG_NUM_DEM == 'NUMERADOR') ~> sDISTnum",
						"aggVALORdist filter(FLAG_NUM_DEM == 'DENOMINADOR') ~> sDISTden",
						"aggVALORcomarca filter(FLAG_NUM_DEM == 'NUMERADOR') ~> sCOMARCAnum",
						"aggVALORcomarca filter(FLAG_NUM_DEM == 'DENOMINADOR') ~> sCOMARCAden",
						"aggVALORambit filter(FLAG_NUM_DEM == 'NUMERADOR') ~> sAMBITnum",
						"aggVALORambit filter(FLAG_NUM_DEM == 'DENOMINADOR') ~> sAMBITden",
						"sNACIONALden select(mapColumn(",
						"          FLAG_NUM_DEM_den = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den = DATA_PERIODE,",
						"          VALOR_den = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> NACIONALden",
						"sBIBnum select(mapColumn(",
						"          CODI_BIBLIOTECA_den = CODI_BIBLIOTECA,",
						"          FLAG_NUM_DEM_den = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den = DATA_PERIODE,",
						"          VALOR_den = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> BIBnum",
						"sMUNIden select(mapColumn(",
						"          INE_MUNICIPI_den = INE_MUNICIPI,",
						"          FLAG_NUM_DEM_den = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den = DATA_PERIODE,",
						"          VALOR_den = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MUNIden",
						"sDISTden select(mapColumn(",
						"          ID_DISTRICTE_den = ID_DISTRICTE,",
						"          FLAG_NUM_DEM_den = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den = DATA_PERIODE,",
						"          VALOR_den = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DISTden",
						"sCOMARCAden select(mapColumn(",
						"          INE_COMARCA_den = INE_COMARCA,",
						"          FLAG_NUM_DEM_den = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den = DATA_PERIODE,",
						"          VALOR_den = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> COMARCAden",
						"sAMBITden select(mapColumn(",
						"          ID_AMBIT_TERRITORIAL_den = ID_AMBIT_TERRITORIAL,",
						"          FLAG_NUM_DEM_den = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den = DATA_PERIODE,",
						"          VALOR_den = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AMBITden",
						"LJnan, DMbegDIMbiblioteques join(BIBLIOTECA@CODI_BIBLIOTECA == DMbegDIMbiblioteques@CODI_BIBLIOTECA,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJbibliotequesDIM",
						"LJdis, DMterDIMmunicipi join(DMbegDIMbiblioteques@INE_MUNICIPI == DMterDIMmunicipi@INE_MUNICIPI,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJmunicipiDIM",
						"LJcom, DMterDIMcomarca join(DMterDIMmunicipi@INE_COMARCA == DMterDIMcomarca@INE_COMARCA,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJcomarcaDIM",
						"dcPERIODE filter(CODI_INDICADOR == 'IND_6_4') ~> fltPOBLACION",
						"fltPOBLACION aggregate(groupBy(CODI_BIBLIOTECA,",
						"          DATA_PERIODE),",
						"     VALOR_POBLACIO = sum(IND_VALOR)) ~> aggPOBLACION",
						"aggPOBLACION derive(DESC_TRAM_POBLACIO = iif(VALOR_POBLACIO < 3000, \"Menys de 3.000 hab.\",\r",
						"    iif(VALOR_POBLACIO >= 3000 && VALOR_POBLACIO < 5000, \"3.000-5.000 hab.\",\r",
						"        iif(VALOR_POBLACIO >= 5000 && VALOR_POBLACIO < 10000, \"5.000-10.000 hab.\",\r",
						"            iif(VALOR_POBLACIO >= 10000 && VALOR_POBLACIO < 20000, \"10.000-20.000 hab.\",\r",
						"                iif(VALOR_POBLACIO >= 20000 && VALOR_POBLACIO < 30000, \"20.000-30.000 hab.\",\r",
						"                    iif(VALOR_POBLACIO >= 30000 && VALOR_POBLACIO < 50000, \"30.000-50.000 hab.\",\r",
						"                        iif(VALOR_POBLACIO >= 50000 && VALOR_POBLACIO < 100000, \"50.000-100.000 hab.\",\r",
						"                            iif(VALOR_POBLACIO >= 100000 && VALOR_POBLACIO < 200000, \"100.000-200.000 hab.\",\r",
						"                                iif(VALOR_POBLACIO >= 100000 && VALOR_POBLACIO < 200000, \"Més de 200.000 hab.\",\r",
						"                                     \"ND\"\r",
						"                                )\r",
						"                            )\r",
						"                        )\r",
						"                    )\r",
						"                )\r",
						"            )\r",
						"        )\r",
						"    )\r",
						")) ~> dcDESCtramPOBLACIO",
						"LJamb, dcDESCtramPOBLACIO join(BIBLIOTECA@CODI_BIBLIOTECA == aggPOBLACION@CODI_BIBLIOTECA",
						"     && BIBLIOTECA@DATA_PERIODE == aggPOBLACION@DATA_PERIODE,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> ijDESCtramPOBLACIO",
						"selectCOLUMNAS alterRow(upsertIf(1==1)) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_BIBLIOTECA as string,",
						"          DATA_PERIODE as date,",
						"          CODI_INDICADOR as string,",
						"          FLAG_INTER_INTRA as string,",
						"          IND_VALOR_BIB as float,",
						"          IND_VALOR_DIS as float,",
						"          IND_VALOR_MUN as float,",
						"          IND_VALOR_COM as float,",
						"          IND_VALOR_AMB as float,",
						"          IND_VALOR_NAN as float,",
						"          DESC_TRAM_POBLACIO as string,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CODI_BIBLIOTECA','DATA_PERIODE','CODI_INDICADOR','FLAG_INTER_INTRA'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMbegFACTindicadors2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TERRITORIAL_COMARCA')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TERRITORIAL_MUNICIPI')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS_INTER_INTRA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_BEG_DM_INTER_INTRA_ANY_ANT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Maping parametrizado para calcular la mayoria de indicadores intraanuales y interanuales de BEG. Se calculan todos a nivel de Biblioteca, distrito, municipio, comarca, ambito territorial y nacional.\n\nEn este en concreto se calculan los indicadores IND_12_4011, IND_12_4012 y IND_6_6.",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMbegFACTindicadors"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMbegDIMbiblioteques"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERRITORIAL_COMARCA",
								"type": "DatasetReference"
							},
							"name": "DMterDIMcomarca"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERRITORIAL_MUNICIPI",
								"type": "DatasetReference"
							},
							"name": "DMterDIMmunicipi"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMbegFACTindicadorsANT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS_INTER_INTRA",
								"type": "DatasetReference"
							},
							"name": "DMbegFACTindicadors2"
						}
					],
					"transformations": [
						{
							"name": "DCcalculINDbib"
						},
						{
							"name": "selectBIBLIOTEQUESlocalitats"
						},
						{
							"name": "aggVALORbib"
						},
						{
							"name": "fltINDICADORnumerador"
						},
						{
							"name": "numBIBLIOTECA"
						},
						{
							"name": "aggVALORdist"
						},
						{
							"name": "aggVALORmuni"
						},
						{
							"name": "IJbiblioteques4"
						},
						{
							"name": "IJmunicipi4"
						},
						{
							"name": "IJcomarca4"
						},
						{
							"name": "aggVALORcomarca"
						},
						{
							"name": "aggVALORambit"
						},
						{
							"name": "aggVALORnacional"
						},
						{
							"name": "fltINDICADORdenominador"
						},
						{
							"name": "denBIBLIOTECA"
						},
						{
							"name": "fltDATES"
						},
						{
							"name": "dcPERIODE"
						},
						{
							"name": "DCcalculINDdist"
						},
						{
							"name": "DCcalculINDmuni"
						},
						{
							"name": "DCcalculINDcom"
						},
						{
							"name": "DCcalculINDambitTERR"
						},
						{
							"name": "DCcalculINDnacion"
						},
						{
							"name": "joinNUMERAdenominaBIB"
						},
						{
							"name": "unionDENbibliotecas"
						},
						{
							"name": "joinNUMERAdenominaNACIONAL"
						},
						{
							"name": "joinNUMERAdenominaMUNI"
						},
						{
							"name": "joinNUMERAdenominaDIST"
						},
						{
							"name": "joinNUMERAdenominaCOMARCA"
						},
						{
							"name": "joinNUMERAdenominaAMBIT"
						},
						{
							"name": "NACIONAL"
						},
						{
							"name": "BIBLIOTECA"
						},
						{
							"name": "MUNICIPI"
						},
						{
							"name": "DISTRICTE"
						},
						{
							"name": "COMARCA"
						},
						{
							"name": "AMBITterritorial"
						},
						{
							"name": "LJnan"
						},
						{
							"name": "LJmun"
						},
						{
							"name": "LJdis"
						},
						{
							"name": "LJcom"
						},
						{
							"name": "LJamb"
						},
						{
							"name": "selectCOLUMNAS"
						},
						{
							"name": "dcFLAGinterINTRA"
						},
						{
							"name": "dcINDICADORactual"
						},
						{
							"name": "dcINDICADORanterior"
						},
						{
							"name": "sNACIONALnum"
						},
						{
							"name": "sNACIONALden"
						},
						{
							"name": "sBIBden"
						},
						{
							"name": "sBIBnum"
						},
						{
							"name": "sMUNInum"
						},
						{
							"name": "sMUNIden"
						},
						{
							"name": "sDISTnum"
						},
						{
							"name": "sDISTden"
						},
						{
							"name": "sCOMARCAnum"
						},
						{
							"name": "sCOMARCAden"
						},
						{
							"name": "sAMBITnum"
						},
						{
							"name": "sAMBITden"
						},
						{
							"name": "NACIONALden"
						},
						{
							"name": "BIBnum"
						},
						{
							"name": "MUNIden"
						},
						{
							"name": "DISTden"
						},
						{
							"name": "COMARCAden"
						},
						{
							"name": "AMBITden"
						},
						{
							"name": "IJbibliotequesDIM"
						},
						{
							"name": "IJmunicipiDIM"
						},
						{
							"name": "IJcomarcaDIM"
						},
						{
							"name": "fltPOBLACION"
						},
						{
							"name": "aggPOBLACION"
						},
						{
							"name": "dcDESCtramPOBLACIO"
						},
						{
							"name": "ijDESCtramPOBLACIO"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "fltDATESant"
						},
						{
							"name": "dcPERIODEant"
						},
						{
							"name": "DCcalculINDnacion2"
						},
						{
							"name": "filter2"
						},
						{
							"name": "UNIONcalculINDnacion"
						},
						{
							"name": "filter3"
						},
						{
							"name": "DCcalculINDcom2"
						},
						{
							"name": "filter4"
						},
						{
							"name": "union1"
						},
						{
							"name": "DCcalculINDambitTERR2"
						},
						{
							"name": "union2"
						},
						{
							"name": "filter5"
						},
						{
							"name": "DCcalculINDmuni2"
						},
						{
							"name": "union3"
						},
						{
							"name": "filter6"
						},
						{
							"name": "DCcalculINDdist2"
						},
						{
							"name": "union4"
						},
						{
							"name": "filter7"
						},
						{
							"name": "DCcalculINDbib2"
						},
						{
							"name": "union5"
						}
					],
					"scriptLines": [
						"parameters{",
						"     P_DATA_INI as integer (20220101),",
						"     P_DATA_FI as integer (20220101),",
						"     P_FLAG_INTER as integer (1),",
						"     P_CIEN_MIL as integer (100)",
						"}",
						"source(output(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as decimal(17,6),",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMbegFACTindicadors",
						"source(output(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_AGENCY as string,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMbegDIMbiblioteques",
						"source(output(",
						"          INE_COMARCA as string,",
						"          ID_AMBIT_TERRITORIAL as string,",
						"          DESC_COMARCA as string,",
						"          DESC_COMARCA_CAT as string,",
						"          CODI_SSTT as integer,",
						"          DATA_BAIXA as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMterDIMcomarca",
						"source(output(",
						"          INE_MUNICIPI as string,",
						"          INE_COMARCA as string,",
						"          INE_PROVINCIA as string,",
						"          DESC_MUNICIPI as string,",
						"          DESC_MUNICIPI_CAT as string,",
						"          CP as string,",
						"          NUM_ALTITUD as integer,",
						"          NUM_SUPERFICIE as decimal(6,2),",
						"          FLAG_CAPITAL_PAIS as boolean,",
						"          FLAG_CAPITAL_COMUNIDAD_AUTONOMA as boolean,",
						"          FLAG_CAPITAL_PROVINCIA as boolean,",
						"          FLAG_CAPITAL_COMARCA as boolean,",
						"          ID_AMBIT_TERRITORIAL as string,",
						"          CODI_SSTT as integer,",
						"          DATA_BAIXA as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMterDIMmunicipi",
						"source(output(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as decimal(17,6),",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMbegFACTindicadorsANT",
						"joinNUMERAdenominaBIB derive(ID_INDICADOR = iif(CODI_INDICADOR == \"IND_12_1\", \"IND_12_4011\",\r",
						"    iif(CODI_INDICADOR == \"IND_6_1\", \"IND_6_6\",\r",
						"        \"ND\"\r",
						"    )\r",
						"),",
						"          VALOR_BIB = iif(CODI_INDICADOR == \"IND_12_1\", VALOR - VALOR_ant,\r",
						"    iif(CODI_INDICADOR == \"IND_6_1\", VALOR * $P_CIEN_MIL / VALOR_ant,\r",
						"        toDecimal(0)\r",
						"    )\r",
						")) ~> DCcalculINDbib",
						"DMbegDIMbiblioteques select(mapColumn(",
						"          ID_BIBLIOTECA,",
						"          CODI_BIBLIOTECA,",
						"          INE_MUNICIPI,",
						"          ID_DISTRICTE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectBIBLIOTEQUESlocalitats",
						"unionDENbibliotecas aggregate(groupBy(CODI_BIBLIOTECA,",
						"          CODI_INDICADOR,",
						"          FLAG_ACT_ANT,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORbib",
						"dcPERIODE filter(contains([\"IND_12_1\",\"IND_6_1\"], #item == CODI_INDICADOR)) ~> fltINDICADORnumerador",
						"dcINDICADORactual select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          CODI_INDICADOR,",
						"          FLAG_ACT_ANT,",
						"          IND_VALOR,",
						"          DATA_PERIODE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> numBIBLIOTECA",
						"IJbiblioteques4 aggregate(groupBy(ID_DISTRICTE,",
						"          CODI_INDICADOR,",
						"          FLAG_ACT_ANT,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORdist",
						"IJbiblioteques4 aggregate(groupBy(INE_MUNICIPI,",
						"          CODI_INDICADOR,",
						"          FLAG_ACT_ANT,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORmuni",
						"unionDENbibliotecas, selectBIBLIOTEQUESlocalitats join(unionDENbibliotecas@CODI_BIBLIOTECA == selectBIBLIOTEQUESlocalitats@CODI_BIBLIOTECA,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJbiblioteques4",
						"IJbiblioteques4, DMterDIMmunicipi join(selectBIBLIOTEQUESlocalitats@INE_MUNICIPI == DMterDIMmunicipi@INE_MUNICIPI,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJmunicipi4",
						"IJmunicipi4, DMterDIMcomarca join(DMterDIMmunicipi@INE_COMARCA == DMterDIMcomarca@INE_COMARCA,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJcomarca4",
						"IJmunicipi4 aggregate(groupBy(INE_COMARCA,",
						"          CODI_INDICADOR,",
						"          FLAG_ACT_ANT,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORcomarca",
						"IJcomarca4 aggregate(groupBy(DMterDIMcomarca@ID_AMBIT_TERRITORIAL,",
						"          CODI_INDICADOR,",
						"          FLAG_ACT_ANT,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORambit",
						"unionDENbibliotecas aggregate(groupBy(FLAG_ACT_ANT,",
						"          CODI_INDICADOR,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORnacional",
						"dcPERIODEant filter(contains([\"IND_12_1\",\"IND_6_1\"], #item == CODI_INDICADOR)) ~> fltINDICADORdenominador",
						"dcINDICADORanterior select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          CODI_INDICADOR,",
						"          FLAG_ACT_ANT,",
						"          IND_VALOR,",
						"          DATA_PERIODE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> denBIBLIOTECA",
						"DMbegFACTindicadors filter(iif($P_FLAG_INTER == 1,",
						"    year(DATA_PERIODE) <= year(toDate(toString($P_DATA_FI),\"yyyyMMdd\"))",
						"    &&",
						"    year(DATA_PERIODE) >= year(toDate(toString($P_DATA_INI),\"yyyyMMdd\"))",
						"    ,",
						"    DATA_PERIODE < addDays(toDate(toString($P_DATA_FI),\"yyyyMMdd\"),1)",
						"    &&",
						"    DATA_PERIODE >= toDate(toString($P_DATA_INI),\"yyyyMMdd\")",
						")) ~> fltDATES",
						"fltDATES derive(DATA_PERIODE = iif($P_FLAG_INTER == 1,\r",
						"    toDate(concat(toString(year(DATA_PERIODE)),\"-12-01\"),\"yyyy-MM-dd\"),\r",
						"    DATA_PERIODE\r",
						")) ~> dcPERIODE",
						"joinNUMERAdenominaDIST derive(ID_INDICADOR = iif(CODI_INDICADOR == \"IND_12_1\", \"IND_12_4011\",\r",
						"    iif(CODI_INDICADOR == \"IND_6_1\", \"IND_6_6\",\r",
						"        \"ND\"\r",
						"    )\r",
						"),",
						"          VALOR_DIS = iif(CODI_INDICADOR == \"IND_12_1\", VALOR - VALOR_ant,\r",
						"    iif(CODI_INDICADOR == \"IND_6_1\", VALOR * $P_CIEN_MIL / VALOR_ant,\r",
						"        toDecimal(0)\r",
						"    )\r",
						")) ~> DCcalculINDdist",
						"joinNUMERAdenominaMUNI derive(ID_INDICADOR = iif(CODI_INDICADOR == \"IND_12_1\", \"IND_12_4011\",\r",
						"    iif(CODI_INDICADOR == \"IND_6_1\", \"IND_6_6\",\r",
						"        \"ND\"\r",
						"    )\r",
						"),",
						"          VALOR_MUN = iif(CODI_INDICADOR == \"IND_12_1\", VALOR - VALOR_ant,\r",
						"    iif(CODI_INDICADOR == \"IND_6_1\", VALOR * $P_CIEN_MIL / VALOR_ant,\r",
						"        toDecimal(0)\r",
						"    )\r",
						")) ~> DCcalculINDmuni",
						"joinNUMERAdenominaCOMARCA derive(ID_INDICADOR = iif(CODI_INDICADOR == \"IND_12_1\", \"IND_12_4011\",\r",
						"    iif(CODI_INDICADOR == \"IND_6_1\", \"IND_6_6\",\r",
						"        \"ND\"\r",
						"    )\r",
						"),",
						"          VALOR_COM = iif(CODI_INDICADOR == \"IND_12_1\", VALOR - VALOR_ant,\r",
						"    iif(CODI_INDICADOR == \"IND_6_1\", VALOR * $P_CIEN_MIL / VALOR_ant,\r",
						"        toDecimal(0)\r",
						"    )\r",
						")) ~> DCcalculINDcom",
						"joinNUMERAdenominaAMBIT derive(ID_INDICADOR = iif(CODI_INDICADOR == \"IND_12_1\", \"IND_12_4011\",\r",
						"    iif(CODI_INDICADOR == \"IND_6_1\", \"IND_6_6\",\r",
						"        \"ND\"\r",
						"    )\r",
						"),",
						"          VALOR_AMB = iif(CODI_INDICADOR == \"IND_12_1\", VALOR - VALOR_ant,\r",
						"    iif(CODI_INDICADOR == \"IND_6_1\", VALOR * $P_CIEN_MIL / VALOR_ant,\r",
						"        toDecimal(0)\r",
						"    )\r",
						")) ~> DCcalculINDambitTERR",
						"joinNUMERAdenominaNACIONAL derive(ID_INDICADOR = iif(CODI_INDICADOR == \"IND_12_1\", \"IND_12_4011\",\r",
						"    iif(CODI_INDICADOR == \"IND_6_1\", \"IND_6_6\",\r",
						"        \"ND\"\r",
						"    )\r",
						"),",
						"          VALOR_NAN = iif(CODI_INDICADOR == \"IND_12_1\", VALOR - VALOR_ant,\r",
						"    iif(CODI_INDICADOR == \"IND_6_1\", VALOR * $P_CIEN_MIL / VALOR_ant,\r",
						"        toDecimal(0)\r",
						"    )\r",
						")) ~> DCcalculINDnacion",
						"sBIBden, BIBnum join(CODI_BIBLIOTECA == CODI_BIBLIOTECA_ant",
						"     && DATA_PERIODE == DATA_PERIODE_ant,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaBIB",
						"numBIBLIOTECA, denBIBLIOTECA union(byName: true)~> unionDENbibliotecas",
						"sNACIONALnum, NACIONALden join(DATA_PERIODE == DATA_PERIODE_ant",
						"     && CODI_INDICADOR == CODI_INDICADOR_ant,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaNACIONAL",
						"sMUNInum, MUNIden join(INE_MUNICIPI == INE_MUNICIPI_ant",
						"     && DATA_PERIODE == DATA_PERIODE_ant,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaMUNI",
						"sDISTnum, DISTden join(ID_DISTRICTE == ID_DISTRICTE_ant",
						"     && DATA_PERIODE == DATA_PERIODE_ant,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaDIST",
						"sCOMARCAnum, COMARCAden join(INE_COMARCA == INE_COMARCA_ant",
						"     && DATA_PERIODE == DATA_PERIODE_ant,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaCOMARCA",
						"sAMBITnum, AMBITden join(ID_AMBIT_TERRITORIAL == ID_AMBIT_TERRITORIAL_ant",
						"     && DATA_PERIODE == DATA_PERIODE_ant,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaAMBIT",
						"UNIONcalculINDnacion select(mapColumn(",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_NAN",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> NACIONAL",
						"union5 select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_BIB",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> BIBLIOTECA",
						"union3 select(mapColumn(",
						"          INE_MUNICIPI,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_MUN",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MUNICIPI",
						"union4 select(mapColumn(",
						"          ID_DISTRICTE,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_DIS",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DISTRICTE",
						"union1 select(mapColumn(",
						"          INE_COMARCA,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_COM",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> COMARCA",
						"union2 select(mapColumn(",
						"          ID_AMBIT_TERRITORIAL,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_AMB",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AMBITterritorial",
						"BIBLIOTECA, NACIONAL join(BIBLIOTECA@DATA_PERIODE == NACIONAL@DATA_PERIODE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJnan",
						"IJbibliotequesDIM, MUNICIPI join(BIBLIOTECA@DATA_PERIODE == MUNICIPI@DATA_PERIODE",
						"     && DMbegDIMbiblioteques@INE_MUNICIPI == MUNICIPI@INE_MUNICIPI,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJmun",
						"LJmun, DISTRICTE join(BIBLIOTECA@DATA_PERIODE == DISTRICTE@DATA_PERIODE",
						"     && DMbegDIMbiblioteques@ID_DISTRICTE == DISTRICTE@ID_DISTRICTE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJdis",
						"IJmunicipiDIM, COMARCA join(BIBLIOTECA@DATA_PERIODE == COMARCA@DATA_PERIODE",
						"     && DMterDIMmunicipi@INE_COMARCA == COMARCA@INE_COMARCA,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJcom",
						"IJcomarcaDIM, AMBITterritorial join(BIBLIOTECA@DATA_PERIODE == AMBITterritorial@DATA_PERIODE",
						"     && DMterDIMcomarca@ID_AMBIT_TERRITORIAL == AMBITterritorial@ID_AMBIT_TERRITORIAL,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJamb",
						"dcFLAGinterINTRA select(mapColumn(",
						"          CODI_BIBLIOTECA = BIBLIOTECA@CODI_BIBLIOTECA,",
						"          DATA_PERIODE = BIBLIOTECA@DATA_PERIODE,",
						"          CODI_INDICADOR = BIBLIOTECA@ID_INDICADOR,",
						"          FLAG_INTER_INTRA,",
						"          IND_VALOR_BIB = VALOR_BIB,",
						"          IND_VALOR_DIS = VALOR_DIS,",
						"          IND_VALOR_MUN = VALOR_MUN,",
						"          IND_VALOR_COM = VALOR_COM,",
						"          IND_VALOR_AMB = VALOR_AMB,",
						"          IND_VALOR_NAN = VALOR_NAN,",
						"          DESC_TRAM_POBLACIO,",
						"          DATA_CARREGA",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectCOLUMNAS",
						"ijDESCtramPOBLACIO derive(FLAG_INTER_INTRA = iif($P_FLAG_INTER == 1, 'Interanual', 'Intraanual'),",
						"          DATA_CARREGA = currentDate()) ~> dcFLAGinterINTRA",
						"fltINDICADORnumerador derive(FLAG_ACT_ANT = 'ACTUAL') ~> dcINDICADORactual",
						"fltINDICADORdenominador derive(FLAG_ACT_ANT = 'ANTERIOR') ~> dcINDICADORanterior",
						"aggVALORnacional filter(FLAG_ACT_ANT == 'ACTUAL') ~> sNACIONALnum",
						"aggVALORnacional filter(FLAG_ACT_ANT == 'ANTERIOR') ~> sNACIONALden",
						"aggVALORbib filter(FLAG_ACT_ANT == 'ACTUAL') ~> sBIBden",
						"aggVALORbib filter(FLAG_ACT_ANT == 'ANTERIOR') ~> sBIBnum",
						"aggVALORmuni filter(FLAG_ACT_ANT == 'ACTUAL') ~> sMUNInum",
						"aggVALORmuni filter(FLAG_ACT_ANT == 'ANTERIOR') ~> sMUNIden",
						"aggVALORdist filter(FLAG_ACT_ANT == 'ACTUAL') ~> sDISTnum",
						"aggVALORdist filter(FLAG_ACT_ANT == 'ANTERIOR') ~> sDISTden",
						"aggVALORcomarca filter(FLAG_ACT_ANT == 'ACTUAL') ~> sCOMARCAnum",
						"aggVALORcomarca filter(FLAG_ACT_ANT == 'ANTERIOR') ~> sCOMARCAden",
						"aggVALORambit filter(FLAG_ACT_ANT == 'ACTUAL') ~> sAMBITnum",
						"aggVALORambit filter(FLAG_ACT_ANT == 'ANTERIOR') ~> sAMBITden",
						"sNACIONALden select(mapColumn(",
						"          FLAG_NUM_DEM_ant = FLAG_ACT_ANT,",
						"          CODI_INDICADOR_ant = CODI_INDICADOR,",
						"          DATA_PERIODE_ant = DATA_PERIODE,",
						"          VALOR_ant = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> NACIONALden",
						"sBIBnum select(mapColumn(",
						"          CODI_BIBLIOTECA_ant = CODI_BIBLIOTECA,",
						"          CODI_INDICADOR_ant = CODI_INDICADOR,",
						"          FLAG_NUM_DEM_ant = FLAG_ACT_ANT,",
						"          DATA_PERIODE_ant = DATA_PERIODE,",
						"          VALOR_ant = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> BIBnum",
						"sMUNIden select(mapColumn(",
						"          INE_MUNICIPI_ant = INE_MUNICIPI,",
						"          CODI_INDICADOR_ant = CODI_INDICADOR,",
						"          FLAG_NUM_DEM_ant = FLAG_ACT_ANT,",
						"          DATA_PERIODE_ant = DATA_PERIODE,",
						"          VALOR_ant = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MUNIden",
						"sDISTden select(mapColumn(",
						"          ID_DISTRICTE_ant = ID_DISTRICTE,",
						"          CODI_INDICADOR_ant = CODI_INDICADOR,",
						"          FLAG_NUM_DEM_ant = FLAG_ACT_ANT,",
						"          DATA_PERIODE_ant = DATA_PERIODE,",
						"          VALOR_ant = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DISTden",
						"sCOMARCAden select(mapColumn(",
						"          INE_COMARCA_ant = INE_COMARCA,",
						"          CODI_INDICADOR_ant = CODI_INDICADOR,",
						"          FLAG_NUM_DEM_ant = FLAG_ACT_ANT,",
						"          DATA_PERIODE_ant = DATA_PERIODE,",
						"          VALOR_ant = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> COMARCAden",
						"sAMBITden select(mapColumn(",
						"          ID_AMBIT_TERRITORIAL_ant = ID_AMBIT_TERRITORIAL,",
						"          CODI_INDICADOR_ant = CODI_INDICADOR,",
						"          FLAG_NUM_DEM_ant = FLAG_ACT_ANT,",
						"          DATA_PERIODE_ant = DATA_PERIODE,",
						"          VALOR_ant = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AMBITden",
						"LJnan, DMbegDIMbiblioteques join(BIBLIOTECA@CODI_BIBLIOTECA == DMbegDIMbiblioteques@CODI_BIBLIOTECA,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJbibliotequesDIM",
						"LJdis, DMterDIMmunicipi join(DMbegDIMbiblioteques@INE_MUNICIPI == DMterDIMmunicipi@INE_MUNICIPI,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJmunicipiDIM",
						"LJcom, DMterDIMcomarca join(DMterDIMmunicipi@INE_COMARCA == DMterDIMcomarca@INE_COMARCA,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJcomarcaDIM",
						"dcPERIODE filter(CODI_INDICADOR == 'IND_6_4') ~> fltPOBLACION",
						"fltPOBLACION aggregate(groupBy(CODI_BIBLIOTECA,",
						"          DATA_PERIODE),",
						"     VALOR_POBLACIO = sum(IND_VALOR)) ~> aggPOBLACION",
						"aggPOBLACION derive(DESC_TRAM_POBLACIO = iif(VALOR_POBLACIO < 3000, \"Menys de 3.000 hab.\",\r",
						"    iif(VALOR_POBLACIO >= 3000 && VALOR_POBLACIO < 5000, \"3.000-5.000 hab.\",\r",
						"        iif(VALOR_POBLACIO >= 5000 && VALOR_POBLACIO < 10000, \"5.000-10.000 hab.\",\r",
						"            iif(VALOR_POBLACIO >= 10000 && VALOR_POBLACIO < 20000, \"10.000-20.000 hab.\",\r",
						"                iif(VALOR_POBLACIO >= 20000 && VALOR_POBLACIO < 30000, \"20.000-30.000 hab.\",\r",
						"                    iif(VALOR_POBLACIO >= 30000 && VALOR_POBLACIO < 50000, \"30.000-50.000 hab.\",\r",
						"                        iif(VALOR_POBLACIO >= 50000 && VALOR_POBLACIO < 100000, \"50.000-100.000 hab.\",\r",
						"                            iif(VALOR_POBLACIO >= 100000 && VALOR_POBLACIO < 200000, \"100.000-200.000 hab.\",\r",
						"                                iif(VALOR_POBLACIO >= 100000 && VALOR_POBLACIO < 200000, \"Més de 200.000 hab.\",\r",
						"                                     \"ND\"\r",
						"                                )\r",
						"                            )\r",
						"                        )\r",
						"                    )\r",
						"                )\r",
						"            )\r",
						"        )\r",
						"    )\r",
						")) ~> dcDESCtramPOBLACIO",
						"LJamb, dcDESCtramPOBLACIO join(BIBLIOTECA@CODI_BIBLIOTECA == aggPOBLACION@CODI_BIBLIOTECA",
						"     && BIBLIOTECA@DATA_PERIODE == aggPOBLACION@DATA_PERIODE,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> ijDESCtramPOBLACIO",
						"selectCOLUMNAS alterRow(upsertIf(1==1)) ~> AlterRow1",
						"DMbegFACTindicadorsANT filter(iif($P_FLAG_INTER == 1,",
						"    year(addMonths(DATA_PERIODE, 12)) <= year(toDate(toString($P_DATA_FI),\"yyyyMMdd\"))",
						"    &&",
						"    year(addMonths(DATA_PERIODE, 12)) >= year(toDate(toString($P_DATA_INI),\"yyyyMMdd\"))",
						"    ,",
						"    addMonths(DATA_PERIODE, 12) < addDays(toDate(toString($P_DATA_FI),\"yyyyMMdd\"),1)",
						"    &&",
						"    addMonths(DATA_PERIODE, 12) >= toDate(toString($P_DATA_INI),\"yyyyMMdd\")",
						")) ~> fltDATESant",
						"fltDATESant derive(DATA_PERIODE = iif($P_FLAG_INTER == 1,\r",
						"    addMonths(toDate(concat(toString(year(DATA_PERIODE)),\"-12-01\"),\"yyyy-MM-dd\"),12),\r",
						"    addMonths(DATA_PERIODE ,12)\r",
						"    )) ~> dcPERIODEant",
						"filter2 derive(ID_INDICADOR = \"IND_12_4012\",",
						"          VALOR_NAN = (VALOR - VALOR_ant )* $P_CIEN_MIL /  VALOR_ant) ~> DCcalculINDnacion2",
						"joinNUMERAdenominaNACIONAL filter(CODI_INDICADOR == \"IND_12_1\") ~> filter2",
						"DCcalculINDnacion, DCcalculINDnacion2 union(byName: true)~> UNIONcalculINDnacion",
						"joinNUMERAdenominaCOMARCA filter(CODI_INDICADOR == \"IND_12_1\") ~> filter3",
						"filter3 derive(ID_INDICADOR = \"IND_12_4012\",",
						"          VALOR_COM = (VALOR - VALOR_ant )* $P_CIEN_MIL /  VALOR_ant) ~> DCcalculINDcom2",
						"joinNUMERAdenominaAMBIT filter(CODI_INDICADOR == \"IND_12_1\") ~> filter4",
						"DCcalculINDcom, DCcalculINDcom2 union(byName: true)~> union1",
						"filter4 derive(ID_INDICADOR = \"IND_12_4012\",",
						"          VALOR_AMB = (VALOR - VALOR_ant )* $P_CIEN_MIL /  VALOR_ant) ~> DCcalculINDambitTERR2",
						"DCcalculINDambitTERR, DCcalculINDambitTERR2 union(byName: true)~> union2",
						"joinNUMERAdenominaMUNI filter(CODI_INDICADOR == \"IND_12_1\") ~> filter5",
						"filter5 derive(ID_INDICADOR = \"IND_12_4012\",",
						"          VALOR_MUN = (VALOR - VALOR_ant )* $P_CIEN_MIL /  VALOR_ant) ~> DCcalculINDmuni2",
						"DCcalculINDmuni, DCcalculINDmuni2 union(byName: true)~> union3",
						"joinNUMERAdenominaDIST filter(CODI_INDICADOR == \"IND_12_1\") ~> filter6",
						"filter6 derive(ID_INDICADOR = \"IND_12_4012\",",
						"          VALOR_DIS = (VALOR - VALOR_ant )* $P_CIEN_MIL /  VALOR_ant) ~> DCcalculINDdist2",
						"DCcalculINDdist, DCcalculINDdist2 union(byName: true)~> union4",
						"joinNUMERAdenominaBIB filter(CODI_INDICADOR == \"IND_12_1\") ~> filter7",
						"filter7 derive(ID_INDICADOR = \"IND_12_4012\",",
						"          VALOR_BIB = (VALOR - VALOR_ant )* $P_CIEN_MIL /  VALOR_ant) ~> DCcalculINDbib2",
						"DCcalculINDbib, DCcalculINDbib2 union(byName: true)~> union5",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_BIBLIOTECA as string,",
						"          DATA_PERIODE as date,",
						"          CODI_INDICADOR as string,",
						"          FLAG_INTER_INTRA as string,",
						"          IND_VALOR_BIB as float,",
						"          IND_VALOR_DIS as float,",
						"          IND_VALOR_MUN as float,",
						"          IND_VALOR_COM as float,",
						"          IND_VALOR_AMB as float,",
						"          IND_VALOR_NAN as float,",
						"          DESC_TRAM_POBLACIO as string,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CODI_BIBLIOTECA','DATA_PERIODE','CODI_INDICADOR','FLAG_INTER_INTRA'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMbegFACTindicadors2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TERRITORIAL_COMARCA')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TERRITORIAL_MUNICIPI')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS_INTER_INTRA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_BEG_DM_INTER_INTRA_IND_9_029')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Maping parametrizado para calcular la mayoria de indicadores intraanuales y interanuales de BEG. Se calculan todos a nivel de Biblioteca, distrito, municipio, comarca, ambito territorial y nacional.",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMbegFACTindicadors"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMbegDIMbiblioteques"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERRITORIAL_COMARCA",
								"type": "DatasetReference"
							},
							"name": "DMterDIMcomarca"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERRITORIAL_MUNICIPI",
								"type": "DatasetReference"
							},
							"name": "DMterDIMmunicipi"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS_INTER_INTRA",
								"type": "DatasetReference"
							},
							"name": "DMbegFACTindicadors2"
						}
					],
					"transformations": [
						{
							"name": "DCcalculINDbib"
						},
						{
							"name": "selectBIBLIOTEQUESlocalitats"
						},
						{
							"name": "aggVALORbib"
						},
						{
							"name": "fltINDICADORnumerador"
						},
						{
							"name": "numBIBLIOTECA"
						},
						{
							"name": "aggVALORdist"
						},
						{
							"name": "aggVALORmuni"
						},
						{
							"name": "IJbiblioteques4"
						},
						{
							"name": "IJmunicipi4"
						},
						{
							"name": "IJcomarca4"
						},
						{
							"name": "aggVALORcomarca"
						},
						{
							"name": "aggVALORambit"
						},
						{
							"name": "aggVALORnacional"
						},
						{
							"name": "fltINDICADORdenominador"
						},
						{
							"name": "denBIBLIOTECA"
						},
						{
							"name": "fltDATES"
						},
						{
							"name": "dcPERIODE"
						},
						{
							"name": "DCcalculINDdist"
						},
						{
							"name": "DCcalculINDmuni"
						},
						{
							"name": "DCcalculINDcom"
						},
						{
							"name": "DCcalculINDambitTERR"
						},
						{
							"name": "DCcalculINDnacion"
						},
						{
							"name": "joinNUMERAdenominaBIB"
						},
						{
							"name": "unionDENbibliotecas"
						},
						{
							"name": "joinNUMERAdenominaNACIONAL"
						},
						{
							"name": "joinNUMERAdenominaMUNI"
						},
						{
							"name": "joinNUMERAdenominaDIST"
						},
						{
							"name": "joinNUMERAdenominaCOMARCA"
						},
						{
							"name": "joinNUMERAdenominaAMBIT"
						},
						{
							"name": "NACIONAL"
						},
						{
							"name": "BIBLIOTECA"
						},
						{
							"name": "MUNICIPI"
						},
						{
							"name": "DISTRICTE"
						},
						{
							"name": "COMARCA"
						},
						{
							"name": "AMBITterritorial"
						},
						{
							"name": "LJnan"
						},
						{
							"name": "LJmun"
						},
						{
							"name": "LJdis"
						},
						{
							"name": "LJcom"
						},
						{
							"name": "LJamb"
						},
						{
							"name": "selectCOLUMNAS"
						},
						{
							"name": "dcFLAGinterINTRA"
						},
						{
							"name": "dcINDICADORnumerador"
						},
						{
							"name": "dcINDICADORdenominador"
						},
						{
							"name": "sNACIONALnum"
						},
						{
							"name": "sNACIONALden"
						},
						{
							"name": "sBIBnum"
						},
						{
							"name": "sBIBden"
						},
						{
							"name": "sMUNInum"
						},
						{
							"name": "sMUNIden"
						},
						{
							"name": "sDISTnum"
						},
						{
							"name": "sDISTden"
						},
						{
							"name": "sCOMARCAnum"
						},
						{
							"name": "sCOMARCAden"
						},
						{
							"name": "sAMBITnum"
						},
						{
							"name": "sAMBITden"
						},
						{
							"name": "NACIONALden"
						},
						{
							"name": "BIBden"
						},
						{
							"name": "MUNIden"
						},
						{
							"name": "DISTden"
						},
						{
							"name": "COMARCAden"
						},
						{
							"name": "AMBITden"
						},
						{
							"name": "IJbibliotequesDIM"
						},
						{
							"name": "IJmunicipiDIM"
						},
						{
							"name": "IJcomarcaDIM"
						},
						{
							"name": "fltPOBLACION"
						},
						{
							"name": "aggPOBLACION"
						},
						{
							"name": "dcDESCtramPOBLACIO"
						},
						{
							"name": "ijDESCtramPOBLACIO"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "fltINDICADORdenominador2"
						},
						{
							"name": "dcINDICADORdenominador2"
						},
						{
							"name": "den2BIBLIOTECA"
						},
						{
							"name": "unionDEN2bibliotecas"
						},
						{
							"name": "sNACIONALden2"
						},
						{
							"name": "NACIONALden2"
						},
						{
							"name": "joinNUMERAdenomina2NACIONAL"
						},
						{
							"name": "sCOMARCAden2"
						},
						{
							"name": "COMARCAden2"
						},
						{
							"name": "joinNUMERAdenomina2COMARCA"
						},
						{
							"name": "sAMBITden2"
						},
						{
							"name": "AMBITden2"
						},
						{
							"name": "joinNUMERAdenominaAMBIT2"
						},
						{
							"name": "sMUNIden2"
						},
						{
							"name": "MUNIden2"
						},
						{
							"name": "joinNUMERAdenominaMUNI2"
						},
						{
							"name": "sDISTden2"
						},
						{
							"name": "DISTden2"
						},
						{
							"name": "joinNUMERAdenominaDIST2"
						},
						{
							"name": "sBIBnum2"
						},
						{
							"name": "BIBden2"
						},
						{
							"name": "joinNUMERAdenominaBIB2"
						}
					],
					"scriptLines": [
						"parameters{",
						"     P_DATA_INI as integer (20220101),",
						"     P_DATA_FI as integer (20220101),",
						"     P_FLAG_INTER as integer (1),",
						"     P_NOM_IND_CALC as string (\"IND_X_X\"),",
						"     P_IND_ORIGEN_NUMERADOR as string[] ([\"IND_X_X\",\"IND_Y_Y\"]),",
						"     P_IND_ORIGEN_DENOMINADOR as string[] ([\"IND_X_X\",\"IND_Y_Y\"]),",
						"     P_IND_ORIGEN_DENOMINADOR2 as string[] ([\"IND_X_X\",\"IND_Y_Y\"])",
						"}",
						"source(output(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as decimal(17,6),",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMbegFACTindicadors",
						"source(output(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_AGENCY as string,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMbegDIMbiblioteques",
						"source(output(",
						"          INE_COMARCA as string,",
						"          ID_AMBIT_TERRITORIAL as string,",
						"          DESC_COMARCA as string,",
						"          DESC_COMARCA_CAT as string,",
						"          CODI_SSTT as integer,",
						"          DATA_BAIXA as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMterDIMcomarca",
						"source(output(",
						"          INE_MUNICIPI as string,",
						"          INE_COMARCA as string,",
						"          INE_PROVINCIA as string,",
						"          DESC_MUNICIPI as string,",
						"          DESC_MUNICIPI_CAT as string,",
						"          CP as string,",
						"          NUM_ALTITUD as integer,",
						"          NUM_SUPERFICIE as decimal(6,2),",
						"          FLAG_CAPITAL_PAIS as boolean,",
						"          FLAG_CAPITAL_COMUNIDAD_AUTONOMA as boolean,",
						"          FLAG_CAPITAL_PROVINCIA as boolean,",
						"          FLAG_CAPITAL_COMARCA as boolean,",
						"          ID_AMBIT_TERRITORIAL as string,",
						"          CODI_SSTT as integer,",
						"          DATA_BAIXA as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMterDIMmunicipi",
						"joinNUMERAdenominaBIB2 derive(ID_INDICADOR = $P_NOM_IND_CALC,",
						"          VALOR_BIB = iif(isNull(VALOR / VALOR_den / VALOR_den2), \r",
						"    toFloat(0), \r",
						"    toFloat(VALOR / VALOR_den / VALOR_den2) \r",
						"    )) ~> DCcalculINDbib",
						"DMbegDIMbiblioteques select(mapColumn(",
						"          ID_BIBLIOTECA,",
						"          CODI_BIBLIOTECA,",
						"          INE_MUNICIPI,",
						"          ID_DISTRICTE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectBIBLIOTEQUESlocalitats",
						"unionDENbibliotecas aggregate(groupBy(CODI_BIBLIOTECA,",
						"          FLAG_NUM_DEM,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORbib",
						"dcPERIODE filter(contains($P_IND_ORIGEN_NUMERADOR, #item == CODI_INDICADOR)) ~> fltINDICADORnumerador",
						"dcINDICADORnumerador select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          FLAG_NUM_DEM,",
						"          IND_VALOR,",
						"          DATA_PERIODE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> numBIBLIOTECA",
						"IJbiblioteques4 aggregate(groupBy(ID_DISTRICTE,",
						"          FLAG_NUM_DEM,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORdist",
						"IJbiblioteques4 aggregate(groupBy(INE_MUNICIPI,",
						"          FLAG_NUM_DEM,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORmuni",
						"unionDENbibliotecas, selectBIBLIOTEQUESlocalitats join(unionDENbibliotecas@CODI_BIBLIOTECA == selectBIBLIOTEQUESlocalitats@CODI_BIBLIOTECA,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJbiblioteques4",
						"IJbiblioteques4, DMterDIMmunicipi join(selectBIBLIOTEQUESlocalitats@INE_MUNICIPI == DMterDIMmunicipi@INE_MUNICIPI,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJmunicipi4",
						"IJmunicipi4, DMterDIMcomarca join(DMterDIMmunicipi@INE_COMARCA == DMterDIMcomarca@INE_COMARCA,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJcomarca4",
						"IJmunicipi4 aggregate(groupBy(INE_COMARCA,",
						"          FLAG_NUM_DEM,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORcomarca",
						"IJcomarca4 aggregate(groupBy(DMterDIMcomarca@ID_AMBIT_TERRITORIAL,",
						"          FLAG_NUM_DEM,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORambit",
						"unionDENbibliotecas aggregate(groupBy(FLAG_NUM_DEM,",
						"          DATA_PERIODE),",
						"     VALOR = sum(IND_VALOR)) ~> aggVALORnacional",
						"dcPERIODE filter(contains($P_IND_ORIGEN_DENOMINADOR, #item == CODI_INDICADOR)) ~> fltINDICADORdenominador",
						"dcINDICADORdenominador select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          FLAG_NUM_DEM,",
						"          IND_VALOR,",
						"          DATA_PERIODE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> denBIBLIOTECA",
						"DMbegFACTindicadors filter(iif($P_FLAG_INTER == 1,",
						"    year(DATA_PERIODE) <= year(toDate(toString($P_DATA_FI),\"yyyyMMdd\"))",
						"    &&",
						"    year(DATA_PERIODE) >= year(toDate(toString($P_DATA_INI),\"yyyyMMdd\"))",
						"    ,",
						"    DATA_PERIODE < addDays(toDate(toString($P_DATA_FI),\"yyyyMMdd\"),1)",
						"    &&",
						"    DATA_PERIODE >= toDate(toString($P_DATA_INI),\"yyyyMMdd\")",
						")) ~> fltDATES",
						"fltDATES derive(DATA_PERIODE = iif($P_FLAG_INTER == 1,\r",
						"    toDate(concat(toString(year(DATA_PERIODE)),\"-12-01\"),\"yyyy-MM-dd\"),\r",
						"    DATA_PERIODE\r",
						")) ~> dcPERIODE",
						"joinNUMERAdenominaDIST2 derive(ID_INDICADOR = $P_NOM_IND_CALC,",
						"          VALOR_DIS = iif(isNull(VALOR / VALOR_den / VALOR_den2), \r",
						"    toFloat(0), \r",
						"    toFloat(VALOR / VALOR_den / VALOR_den2) \r",
						"    )) ~> DCcalculINDdist",
						"joinNUMERAdenominaMUNI2 derive(ID_INDICADOR = $P_NOM_IND_CALC,",
						"          VALOR_MUN = iif(isNull(VALOR / VALOR_den / VALOR_den2), \r",
						"    toFloat(0), \r",
						"    toFloat(VALOR / VALOR_den / VALOR_den2) \r",
						"    )) ~> DCcalculINDmuni",
						"joinNUMERAdenomina2COMARCA derive(ID_INDICADOR = $P_NOM_IND_CALC,",
						"          VALOR_COM = iif(isNull(VALOR / VALOR_den / VALOR_den2), \r",
						"    toFloat(0), \r",
						"    toFloat(VALOR / VALOR_den / VALOR_den2) \r",
						"    )) ~> DCcalculINDcom",
						"joinNUMERAdenominaAMBIT2 derive(ID_INDICADOR = $P_NOM_IND_CALC,",
						"          VALOR_AMB = iif(isNull(VALOR / VALOR_den / VALOR_den2), \r",
						"    toFloat(0), \r",
						"    toFloat(VALOR / VALOR_den / VALOR_den2) \r",
						"    )) ~> DCcalculINDambitTERR",
						"joinNUMERAdenomina2NACIONAL derive(ID_INDICADOR = $P_NOM_IND_CALC,",
						"          VALOR_NAN = iif(isNull(VALOR / VALOR_den / VALOR_den2),\r",
						"    toFloat(0),\r",
						"    toFloat(VALOR / VALOR_den / VALOR_den2)\r",
						"    )) ~> DCcalculINDnacion",
						"sBIBnum, BIBden join(CODI_BIBLIOTECA == CODI_BIBLIOTECA_den",
						"     && DATA_PERIODE == DATA_PERIODE_den,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaBIB",
						"unionDEN2bibliotecas, denBIBLIOTECA union(byName: true)~> unionDENbibliotecas",
						"sNACIONALnum, NACIONALden join(DATA_PERIODE == DATA_PERIODE_den,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaNACIONAL",
						"sMUNInum, MUNIden join(INE_MUNICIPI == INE_MUNICIPI_den",
						"     && DATA_PERIODE == DATA_PERIODE_den,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaMUNI",
						"sDISTnum, DISTden join(ID_DISTRICTE == ID_DISTRICTE_den",
						"     && DATA_PERIODE == DATA_PERIODE_den,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaDIST",
						"sCOMARCAnum, COMARCAden join(INE_COMARCA == INE_COMARCA_den",
						"     && DATA_PERIODE == DATA_PERIODE_den,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaCOMARCA",
						"sAMBITnum, AMBITden join(ID_AMBIT_TERRITORIAL == ID_AMBIT_TERRITORIAL_den",
						"     && DATA_PERIODE == DATA_PERIODE_den,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaAMBIT",
						"DCcalculINDnacion select(mapColumn(",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_NAN",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> NACIONAL",
						"DCcalculINDbib select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_BIB",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> BIBLIOTECA",
						"DCcalculINDmuni select(mapColumn(",
						"          INE_MUNICIPI,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_MUN",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MUNICIPI",
						"DCcalculINDdist select(mapColumn(",
						"          ID_DISTRICTE,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_DIS",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DISTRICTE",
						"DCcalculINDcom select(mapColumn(",
						"          INE_COMARCA,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_COM",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> COMARCA",
						"DCcalculINDambitTERR select(mapColumn(",
						"          ID_AMBIT_TERRITORIAL,",
						"          DATA_PERIODE,",
						"          ID_INDICADOR,",
						"          VALOR_AMB",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AMBITterritorial",
						"BIBLIOTECA, NACIONAL join(BIBLIOTECA@DATA_PERIODE == NACIONAL@DATA_PERIODE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJnan",
						"IJbibliotequesDIM, MUNICIPI join(BIBLIOTECA@DATA_PERIODE == MUNICIPI@DATA_PERIODE",
						"     && DMbegDIMbiblioteques@INE_MUNICIPI == MUNICIPI@INE_MUNICIPI,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJmun",
						"LJmun, DISTRICTE join(BIBLIOTECA@DATA_PERIODE == DISTRICTE@DATA_PERIODE",
						"     && DMbegDIMbiblioteques@ID_DISTRICTE == DISTRICTE@ID_DISTRICTE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJdis",
						"IJmunicipiDIM, COMARCA join(BIBLIOTECA@DATA_PERIODE == COMARCA@DATA_PERIODE",
						"     && DMterDIMmunicipi@INE_COMARCA == COMARCA@INE_COMARCA,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJcom",
						"IJcomarcaDIM, AMBITterritorial join(BIBLIOTECA@DATA_PERIODE == AMBITterritorial@DATA_PERIODE",
						"     && DMterDIMcomarca@ID_AMBIT_TERRITORIAL == AMBITterritorial@ID_AMBIT_TERRITORIAL,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LJamb",
						"dcFLAGinterINTRA select(mapColumn(",
						"          CODI_BIBLIOTECA = BIBLIOTECA@CODI_BIBLIOTECA,",
						"          DATA_PERIODE = BIBLIOTECA@DATA_PERIODE,",
						"          CODI_INDICADOR = BIBLIOTECA@ID_INDICADOR,",
						"          FLAG_INTER_INTRA,",
						"          IND_VALOR_BIB = VALOR_BIB,",
						"          IND_VALOR_DIS = VALOR_DIS,",
						"          IND_VALOR_MUN = VALOR_MUN,",
						"          IND_VALOR_COM = VALOR_COM,",
						"          IND_VALOR_AMB = VALOR_AMB,",
						"          IND_VALOR_NAN = VALOR_NAN,",
						"          DESC_TRAM_POBLACIO,",
						"          DATA_CARREGA",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectCOLUMNAS",
						"ijDESCtramPOBLACIO derive(FLAG_INTER_INTRA = iif($P_FLAG_INTER == 1, 'Interanual', 'Intraanual'),",
						"          DATA_CARREGA = currentDate()) ~> dcFLAGinterINTRA",
						"fltINDICADORnumerador derive(FLAG_NUM_DEM = 'NUMERADOR') ~> dcINDICADORnumerador",
						"fltINDICADORdenominador derive(FLAG_NUM_DEM = 'DENOMINADOR') ~> dcINDICADORdenominador",
						"aggVALORnacional filter(FLAG_NUM_DEM == 'NUMERADOR') ~> sNACIONALnum",
						"aggVALORnacional filter(FLAG_NUM_DEM == 'DENOMINADOR') ~> sNACIONALden",
						"aggVALORbib filter(FLAG_NUM_DEM == 'NUMERADOR') ~> sBIBnum",
						"aggVALORbib filter(FLAG_NUM_DEM == 'DENOMINADOR') ~> sBIBden",
						"aggVALORmuni filter(FLAG_NUM_DEM == 'NUMERADOR') ~> sMUNInum",
						"aggVALORmuni filter(FLAG_NUM_DEM == 'DENOMINADOR') ~> sMUNIden",
						"aggVALORdist filter(FLAG_NUM_DEM == 'NUMERADOR') ~> sDISTnum",
						"aggVALORdist filter(FLAG_NUM_DEM == 'DENOMINADOR') ~> sDISTden",
						"aggVALORcomarca filter(FLAG_NUM_DEM == 'NUMERADOR') ~> sCOMARCAnum",
						"aggVALORcomarca filter(FLAG_NUM_DEM == 'DENOMINADOR') ~> sCOMARCAden",
						"aggVALORambit filter(FLAG_NUM_DEM == 'NUMERADOR') ~> sAMBITnum",
						"aggVALORambit filter(FLAG_NUM_DEM == 'DENOMINADOR') ~> sAMBITden",
						"sNACIONALden select(mapColumn(",
						"          FLAG_NUM_DEM_den = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den = DATA_PERIODE,",
						"          VALOR_den = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> NACIONALden",
						"sBIBden select(mapColumn(",
						"          CODI_BIBLIOTECA_den = CODI_BIBLIOTECA,",
						"          FLAG_NUM_DEM_den = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den = DATA_PERIODE,",
						"          VALOR_den = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> BIBden",
						"sMUNIden select(mapColumn(",
						"          INE_MUNICIPI_den = INE_MUNICIPI,",
						"          FLAG_NUM_DEM_den = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den = DATA_PERIODE,",
						"          VALOR_den = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MUNIden",
						"sDISTden select(mapColumn(",
						"          ID_DISTRICTE_den = ID_DISTRICTE,",
						"          FLAG_NUM_DEM_den = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den = DATA_PERIODE,",
						"          VALOR_den = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DISTden",
						"sCOMARCAden select(mapColumn(",
						"          INE_COMARCA_den = INE_COMARCA,",
						"          FLAG_NUM_DEM_den = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den = DATA_PERIODE,",
						"          VALOR_den = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> COMARCAden",
						"sAMBITden select(mapColumn(",
						"          ID_AMBIT_TERRITORIAL_den = ID_AMBIT_TERRITORIAL,",
						"          FLAG_NUM_DEM_den = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den = DATA_PERIODE,",
						"          VALOR_den = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AMBITden",
						"LJnan, DMbegDIMbiblioteques join(BIBLIOTECA@CODI_BIBLIOTECA == DMbegDIMbiblioteques@CODI_BIBLIOTECA,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJbibliotequesDIM",
						"LJdis, DMterDIMmunicipi join(DMbegDIMbiblioteques@INE_MUNICIPI == DMterDIMmunicipi@INE_MUNICIPI,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJmunicipiDIM",
						"LJcom, DMterDIMcomarca join(DMterDIMmunicipi@INE_COMARCA == DMterDIMcomarca@INE_COMARCA,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> IJcomarcaDIM",
						"dcPERIODE filter(CODI_INDICADOR == 'IND_6_4') ~> fltPOBLACION",
						"fltPOBLACION aggregate(groupBy(CODI_BIBLIOTECA,",
						"          DATA_PERIODE),",
						"     VALOR_POBLACIO = sum(IND_VALOR)) ~> aggPOBLACION",
						"aggPOBLACION derive(DESC_TRAM_POBLACIO = iif(VALOR_POBLACIO < 3000, \"Menys de 3.000 hab.\",\r",
						"    iif(VALOR_POBLACIO >= 3000 && VALOR_POBLACIO < 5000, \"3.000-5.000 hab.\",\r",
						"        iif(VALOR_POBLACIO >= 5000 && VALOR_POBLACIO < 10000, \"5.000-10.000 hab.\",\r",
						"            iif(VALOR_POBLACIO >= 10000 && VALOR_POBLACIO < 20000, \"10.000-20.000 hab.\",\r",
						"                iif(VALOR_POBLACIO >= 20000 && VALOR_POBLACIO < 30000, \"20.000-30.000 hab.\",\r",
						"                    iif(VALOR_POBLACIO >= 30000 && VALOR_POBLACIO < 50000, \"30.000-50.000 hab.\",\r",
						"                        iif(VALOR_POBLACIO >= 50000 && VALOR_POBLACIO < 100000, \"50.000-100.000 hab.\",\r",
						"                            iif(VALOR_POBLACIO >= 100000 && VALOR_POBLACIO < 200000, \"100.000-200.000 hab.\",\r",
						"                                iif(VALOR_POBLACIO >= 100000 && VALOR_POBLACIO < 200000, \"Més de 200.000 hab.\",\r",
						"                                     \"ND\"\r",
						"                                )\r",
						"                            )\r",
						"                        )\r",
						"                    )\r",
						"                )\r",
						"            )\r",
						"        )\r",
						"    )\r",
						")) ~> dcDESCtramPOBLACIO",
						"LJamb, dcDESCtramPOBLACIO join(BIBLIOTECA@CODI_BIBLIOTECA == aggPOBLACION@CODI_BIBLIOTECA",
						"     && BIBLIOTECA@DATA_PERIODE == aggPOBLACION@DATA_PERIODE,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> ijDESCtramPOBLACIO",
						"selectCOLUMNAS alterRow(upsertIf(1==1)) ~> AlterRow1",
						"dcPERIODE filter(contains($P_IND_ORIGEN_DENOMINADOR2, #item == CODI_INDICADOR)) ~> fltINDICADORdenominador2",
						"fltINDICADORdenominador2 derive(FLAG_NUM_DEM = 'DENOMINADOR2') ~> dcINDICADORdenominador2",
						"dcINDICADORdenominador2 select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          FLAG_NUM_DEM,",
						"          IND_VALOR,",
						"          DATA_PERIODE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> den2BIBLIOTECA",
						"numBIBLIOTECA, den2BIBLIOTECA union(byName: true)~> unionDEN2bibliotecas",
						"aggVALORnacional filter(FLAG_NUM_DEM == 'DENOMINADOR2') ~> sNACIONALden2",
						"sNACIONALden2 select(mapColumn(",
						"          FLAG_NUM_DEM_den2 = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den2 = DATA_PERIODE,",
						"          VALOR_den2 = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> NACIONALden2",
						"joinNUMERAdenominaNACIONAL, NACIONALden2 join(DATA_PERIODE == DATA_PERIODE_den2,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenomina2NACIONAL",
						"aggVALORcomarca filter(FLAG_NUM_DEM == 'DENOMINADOR2') ~> sCOMARCAden2",
						"sCOMARCAden2 select(mapColumn(",
						"          INE_COMARCA_den2 = INE_COMARCA,",
						"          FLAG_NUM_DEM_den2 = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den2 = DATA_PERIODE,",
						"          VALOR_den2 = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> COMARCAden2",
						"joinNUMERAdenominaCOMARCA, COMARCAden2 join(INE_COMARCA == INE_COMARCA_den2",
						"     && DATA_PERIODE == DATA_PERIODE_den2,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenomina2COMARCA",
						"aggVALORambit filter(FLAG_NUM_DEM == 'DENOMINADOR2') ~> sAMBITden2",
						"sAMBITden2 select(mapColumn(",
						"          ID_AMBIT_TERRITORIAL_den2 = ID_AMBIT_TERRITORIAL,",
						"          FLAG_NUM_DEM_den2 = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den2 = DATA_PERIODE,",
						"          VALOR_den2 = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AMBITden2",
						"joinNUMERAdenominaAMBIT, AMBITden2 join(ID_AMBIT_TERRITORIAL == ID_AMBIT_TERRITORIAL_den2",
						"     && DATA_PERIODE == DATA_PERIODE_den2,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaAMBIT2",
						"aggVALORmuni filter(FLAG_NUM_DEM == 'DENOMINADOR2') ~> sMUNIden2",
						"sMUNIden2 select(mapColumn(",
						"          INE_MUNICIPI_den2 = INE_MUNICIPI,",
						"          FLAG_NUM_DEM_den2 = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den2 = DATA_PERIODE,",
						"          VALOR_den2 = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MUNIden2",
						"joinNUMERAdenominaMUNI, MUNIden2 join(INE_MUNICIPI == INE_MUNICIPI_den2",
						"     && DATA_PERIODE == DATA_PERIODE_den2,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaMUNI2",
						"aggVALORdist filter(FLAG_NUM_DEM == 'DENOMINADOR2') ~> sDISTden2",
						"sDISTden2 select(mapColumn(",
						"          ID_DISTRICTE_den2 = ID_DISTRICTE,",
						"          FLAG_NUM_DEM_den2 = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den2 = DATA_PERIODE,",
						"          VALOR_den2 = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DISTden2",
						"joinNUMERAdenominaDIST, DISTden2 join(ID_DISTRICTE == ID_DISTRICTE_den2",
						"     && DATA_PERIODE == DATA_PERIODE_den2,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaDIST2",
						"aggVALORbib filter(FLAG_NUM_DEM == 'DENOMINADOR2') ~> sBIBnum2",
						"sBIBnum2 select(mapColumn(",
						"          CODI_BIBLIOTECA_den2 = CODI_BIBLIOTECA,",
						"          FLAG_NUM_DEM_den2 = FLAG_NUM_DEM,",
						"          DATA_PERIODE_den2 = DATA_PERIODE,",
						"          VALOR_den2 = VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> BIBden2",
						"joinNUMERAdenominaBIB, BIBden2 join(CODI_BIBLIOTECA == CODI_BIBLIOTECA_den2",
						"     && DATA_PERIODE == DATA_PERIODE_den2,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinNUMERAdenominaBIB2",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_BIBLIOTECA as string,",
						"          DATA_PERIODE as date,",
						"          CODI_INDICADOR as string,",
						"          FLAG_INTER_INTRA as string,",
						"          IND_VALOR_BIB as float,",
						"          IND_VALOR_DIS as float,",
						"          IND_VALOR_MUN as float,",
						"          IND_VALOR_COM as float,",
						"          IND_VALOR_AMB as float,",
						"          IND_VALOR_NAN as float,",
						"          DESC_TRAM_POBLACIO as string,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CODI_BIBLIOTECA','DATA_PERIODE','CODI_INDICADOR','FLAG_INTER_INTRA'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMbegFACTindicadors2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TERRITORIAL_COMARCA')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TERRITORIAL_MUNICIPI')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS_INTER_INTRA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_BEG_ODS4_BAIXES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS3_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODS3FactIndicadors"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODSFactIndicadors"
						}
					],
					"transformations": [
						{
							"name": "SoloCodiBiblioteca"
						},
						{
							"name": "Datas"
						},
						{
							"name": "Select"
						},
						{
							"name": "join"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS3FactIndicadors\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimBiblioteques\nDimBiblioteques select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tID_AGENCY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SoloCodiBiblioteca\njoin derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> Datas\nDatas select(mapColumn(\n\t\tID_AGENCY,\n\t\tCODI_BIBLIOTECA = SoloCodiBiblioteca@CODI_BIBLIOTECA,\n\t\tCODI_INDICADOR,\n\t\tIND_VALOR,\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nSoloCodiBiblioteca, ODS3FactIndicadors join(SoloCodiBiblioteca@CODI_BIBLIOTECA == ODS3FactIndicadors@CODI_BIBLIOTECA,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join\nSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_AGENCY as string,\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as decimal(17,6),\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSFactIndicadors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS3_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_INDICADORS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CARREGA_DATA_ENTRY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_DATA_ENTRY",
								"type": "DatasetReference"
							},
							"name": "DataEntry"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMDimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMFactIndicadors"
						}
					],
					"transformations": [
						{
							"name": "Unpivot"
						},
						{
							"name": "FiltroDespeses"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "Join"
						},
						{
							"name": "SelectAgency"
						},
						{
							"name": "Select"
						},
						{
							"name": "FiltroPeriode"
						},
						{
							"name": "CalculoIndicadors"
						},
						{
							"name": "CalculoIndicadors2"
						},
						{
							"name": "CalculoIndicadors3"
						},
						{
							"name": "CalculoIndicadors4"
						},
						{
							"name": "CalculoIndicadors5"
						},
						{
							"name": "AlterRow"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Data_Carrega as string",
						"}",
						"source(output(",
						"          CODI_BIBLIOTECA as string,",
						"          DATA_PERIODE as date,",
						"          IND_1_4 as double,",
						"          IND_2_1111 as double,",
						"          IND_2_1113 as double,",
						"          IND_2_1122 as double,",
						"          IND_2_113 as double,",
						"          IND_2_114 as double,",
						"          IND_2_115 as double,",
						"          IND_2_121 as double,",
						"          IND_2_122 as double,",
						"          IND_2_123 as double,",
						"          IND_2_2111 as double,",
						"          IND_2_2113 as double,",
						"          IND_2_2122 as double,",
						"          IND_2_213 as double,",
						"          IND_2_214 as double,",
						"          IND_2_215 as double,",
						"          IND_2_221 as double,",
						"          IND_2_222 as double,",
						"          IND_2_223 as double,",
						"          IND_2_4111 as double,",
						"          IND_2_4113 as double,",
						"          IND_2_4122 as double,",
						"          IND_2_413 as double,",
						"          IND_2_414 as double,",
						"          IND_2_415 as double,",
						"          IND_2_421 as double,",
						"          IND_2_422 as double,",
						"          IND_2_423 as double,",
						"          IND_2_5111 as double,",
						"          IND_2_5113 as double,",
						"          IND_2_5122 as double,",
						"          IND_2_513 as double,",
						"          IND_2_514 as double,",
						"          IND_2_515 as double,",
						"          IND_2_521 as double,",
						"          IND_2_522 as double,",
						"          IND_2_523 as double,",
						"          IND_2_71 as double,",
						"          IND_2_72 as double,",
						"          IND_2_73 as double,",
						"          IND_2_74 as double,",
						"          IND_4_111 as double,",
						"          IND_4_112 as double,",
						"          IND_4_122 as double,",
						"          IND_4_123 as double,",
						"          IND_4_21 as double,",
						"          IND_4_22 as double,",
						"          IND_4_31 as double,",
						"          IND_4_32 as double,",
						"          IND_5_1 as double,",
						"          IND_5_2 as double,",
						"          IND_5_3 as double,",
						"          IND_5_41 as double,",
						"          IND_5_42 as double,",
						"          IND_5_5 as double,",
						"          IND_5_6 as double,",
						"          IND_5_7 as double,",
						"          IND_5_8 as double,",
						"          IND_5_9 as double,",
						"          IND_6_4 as double,",
						"          IND_8_1311 as double,",
						"          IND_8_1312 as double,",
						"          IND_8_132 as double,",
						"          IND_8_1411 as double,",
						"          IND_8_1412 as double,",
						"          IND_8_142 as double,",
						"          IND_8_1511 as double,",
						"          IND_8_1512 as double,",
						"          IND_8_152 as double,",
						"          IND_8_2311 as double,",
						"          IND_8_2312 as double,",
						"          IND_8_232 as double,",
						"          IND_8_2411 as double,",
						"          IND_8_2412 as double,",
						"          IND_8_242 as double,",
						"          IND_8_2511 as double,",
						"          IND_8_2512 as double,",
						"          IND_8_252 as double,",
						"          IND_8_311 as double,",
						"          IND_8_312 as double,",
						"          IND_8_313 as double,",
						"          IND_8_321 as double,",
						"          IND_8_322 as double,",
						"          IND_8_323 as double,",
						"          IND_9_2 as double,",
						"          IND_9_011 as double,",
						"          IND_9_012 as double,",
						"          IND_9_013 as double,",
						"          IND_9_015 as double,",
						"          IND_9_016 as double,",
						"          IND_9_020 as double,",
						"          IND_9_0223 as double,",
						"          IND_9_0231 as double,",
						"          IND_9_0232 as double,",
						"          IND_9_0233 as double,",
						"          IND_9_02411 as double,",
						"          IND_9_02412 as double,",
						"          IND_9_02413 as double,",
						"          IND_9_02421 as double,",
						"          IND_9_02422 as double,",
						"          IND_9_02423 as double,",
						"          IND_9_025 as double,",
						"          IND_9_026 as double,",
						"          IND_10_11 as double,",
						"          IND_10_13 as double,",
						"          IND_10_14 as double,",
						"          IND_10_15 as double,",
						"          IND_10_1613 as double,",
						"          IND_10_1614 as double,",
						"          IND_10_1615 as double,",
						"          IND_10_162 as double,",
						"          IND_10_17 as double,",
						"          IND_10_18 as double,",
						"          IND_10_21 as double,",
						"          IND_10_24 as double,",
						"          IND_10_25 as double,",
						"          IND_10_2612 as double,",
						"          IND_10_2613 as double,",
						"          IND_10_2614 as double,",
						"          IND_10_2615 as double,",
						"          IND_10_262 as double,",
						"          IND_10_27 as double,",
						"          IND_10_28 as double,",
						"          IND_11_11 as double,",
						"          IND_11_12 as double,",
						"          IND_11_13 as double,",
						"          IND_11_14 as double,",
						"          IND_11_15 as double,",
						"          IND_11_51 as double,",
						"          IND_11_52 as double,",
						"          IND_11_53 as double,",
						"          IND_11_54 as double,",
						"          IND_11_55 as double,",
						"          IND_16_1 as double,",
						"          IND_16_2 as double,",
						"          IND_16_3 as double,",
						"          IND_16_51 as double,",
						"          IND_16_52 as double,",
						"          IND_16_53 as double,",
						"          IND_16_54 as double,",
						"          IND_16_61 as double,",
						"          IND_16_62 as double,",
						"          IND_16_63 as double,",
						"          IND_16_64 as double,",
						"          IND_16_7 as double,",
						"          IND_16_8 as double,",
						"          IND_17_1 as double,",
						"          IND_17_2 as double,",
						"          IND_17_3 as double,",
						"          IND_19_1 as double,",
						"          IND_19_2 as double,",
						"          IND_19_3 as double,",
						"          IND_19_4 as double,",
						"          IND_19_5 as double,",
						"          IND_20_1 as double,",
						"          IND_20_2 as double,",
						"          IND_20_3 as double,",
						"          IND_20_4 as double,",
						"          IND_20_5 as double,",
						"          IND_21_1 as double,",
						"          IND_21_2 as double,",
						"          IND_21_3 as double,",
						"          IND_21_4 as double,",
						"          IND_5_10 as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DataEntry",
						"source(output(",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_NIDEN as string,",
						"          ESTAT as string,",
						"          TIPUS as string,",
						"          CATEGORIA_ESPECIALITZADA as string,",
						"          DESC_BIBLIOTECA as string,",
						"          ID_AGENCY as string,",
						"          TERMINAL as string,",
						"          DATA_ALTA as string,",
						"          DATA_BAIXA as string,",
						"          ADAPTADA as string,",
						"          FORMA_ACCESS as string,",
						"          TITULARITAT as string,",
						"          {ADREÇA} as string,",
						"          MUNICIPI as string,",
						"          {C.P.} as string,",
						"          COMARCA as string,",
						"          {ÀMBIT TERRITORIAL} as string,",
						"          SSTT as string,",
						"          PROVINCIA as string,",
						"          UTMX as string,",
						"          UTMY as string,",
						"          {MÒDUL_TERRITORIAL} as string,",
						"          {TELÈFON} as string,",
						"          EXT as string,",
						"          FAX as string,",
						"          WEB as string,",
						"          {ADREÇA_ELCT} as string,",
						"          {ADREÇA_ELECT_2} as string,",
						"          TRACTAMENT_DIRECT as string,",
						"          NOM_DIRECT as string,",
						"          PRIMER_COGNOM as string,",
						"          SEGON_COGNOM as string,",
						"          OBSERVACIONS as string,",
						"          GRUP as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMDimBiblioteques",
						"CalculoIndicadors5 unpivot(output(",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as double",
						"     ),",
						"     ungroupBy(CODI_BIBLIOTECA,",
						"          DATA_PERIODE),",
						"     lateral: true,",
						"     ignoreNullPivots: false) ~> Unpivot",
						"Unpivot filter(not(month(DATA_PERIODE) != 12 && in(['IND_11_11',",
						"'IND_11_12',",
						"'IND_11_13',",
						"'IND_11_14',",
						"'IND_11_15',",
						"'IND_11_51',",
						"'IND_11_52',",
						"'IND_11_53',",
						"'IND_11_54',",
						"'IND_11_55'],CODI_INDICADOR)",
						")) ~> FiltroDespeses",
						"FiltroDespeses derive(DATA_INSERCIO = currentDate()) ~> DataInsercio",
						"DataInsercio, SelectAgency join(Unpivot@CODI_BIBLIOTECA == SelectAgency@CODI_BIBLIOTECA,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Join",
						"DMDimBiblioteques select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          ID_AGENCY",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectAgency",
						"Join select(mapColumn(",
						"          ID_AGENCY,",
						"          CODI_BIBLIOTECA = Unpivot@CODI_BIBLIOTECA,",
						"          CODI_INDICADOR,",
						"          IND_VALOR,",
						"          DATA_INSERCIO,",
						"          DATA_PERIODE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"DataEntry filter(toDate(concat($Data_Carrega,'01'),'yyyyMMdd') == DATA_PERIODE) ~> FiltroPeriode",
						"FiltroPeriode derive(IND_2_111 = IND_2_1111+IND_2_1113,",
						"          IND_2_12 = IND_2_121+IND_2_122+IND_2_123,",
						"          IND_2_211 = IND_2_2111+IND_2_2113,",
						"          IND_2_22 = IND_2_221+IND_2_222+IND_2_223,",
						"          IND_2_3111 = IND_2_2111+IND_2_1111,",
						"          IND_2_3113 = IND_2_2113+IND_2_1113,",
						"          IND_2_3122 = IND_2_2122+IND_2_1122,",
						"          IND_2_313 = IND_2_213+IND_2_113,",
						"          IND_2_314 = IND_2_214+IND_2_114,",
						"          IND_2_315 = IND_2_215+IND_2_115,",
						"          IND_2_321 = IND_2_221+IND_2_121,",
						"          IND_2_322 = IND_2_222+IND_2_122,",
						"          IND_2_323 = IND_2_223+IND_2_123,",
						"          IND_2_411 = IND_2_4111+IND_2_4113,",
						"          IND_2_42 = IND_2_421+IND_2_422+IND_2_423,",
						"          IND_2_511 = IND_2_5111+IND_2_5113,",
						"          IND_2_52 = IND_2_521+IND_2_522+IND_2_523,",
						"          IND_2_6111 = IND_2_5111+IND_2_4111,",
						"          IND_2_6113 = IND_2_5113+IND_2_4113,",
						"          IND_2_6122 = IND_2_5122+IND_2_4122,",
						"          IND_2_613 = IND_2_513+IND_2_413,",
						"          IND_2_614 = IND_2_514+IND_2_414,",
						"          IND_2_615 = IND_2_515+IND_2_415,",
						"          IND_2_621 = IND_2_521+IND_2_421,",
						"          IND_2_622 = IND_2_522+IND_2_422,",
						"          IND_2_623 = IND_2_523+IND_2_423,",
						"          IND_4_11 = IND_4_111+IND_4_112,",
						"          IND_4_12 = IND_4_122+IND_4_123,",
						"          IND_4_13 = IND_4_111+IND_4_122,",
						"          IND_4_14 = IND_4_112+IND_4_123,",
						"          IND_4_2 = IND_4_21+IND_4_22,",
						"          IND_4_3 = IND_4_31+IND_4_32,",
						"          IND_5_4 = IND_5_41+IND_5_42,",
						"          IND_8_131 = IND_8_1311+IND_8_1312,",
						"          IND_8_111 = IND_8_1311+IND_8_1411+IND_8_1511,",
						"          IND_8_112 = IND_8_1312+IND_8_1412+IND_8_1512,",
						"          IND_8_141 = IND_8_1411+IND_8_1412,",
						"          IND_8_151 = IND_8_1511+IND_8_1512,",
						"          IND_8_241 = IND_8_2411+IND_8_2412,",
						"          IND_8_251 = IND_8_2511+IND_8_2512,",
						"          IND_8_31 = IND_8_311+IND_8_312+IND_8_313,",
						"          IND_8_32 = IND_8_321+IND_8_322+IND_8_323,",
						"          IND_8_211 = IND_8_2311+IND_8_2411+IND_8_2511,",
						"          IND_8_212 = IND_8_2312+IND_8_2412+IND_8_2512,",
						"          IND_8_231 = IND_8_2311+IND_8_2312,",
						"          IND_8_22 = IND_8_232+IND_8_242+IND_8_252,",
						"          IND_9_023 = IND_9_0231+IND_9_0232+IND_9_0233,",
						"          IND_9_0241 = IND_9_02411+IND_9_02412+IND_9_02413,",
						"          IND_9_0242 = IND_9_02421+IND_9_02422+IND_9_02423,",
						"          IND_9_1 = IND_9_2+IND_10_21,",
						"          IND_10_161 = IND_10_1613+IND_10_1614+IND_10_1615,",
						"          IND_10_261 = IND_10_2612+IND_10_2613+IND_10_2614+IND_10_2615,",
						"          IND_11_1 = IND_11_11+IND_11_12+IND_11_13+IND_11_14+IND_11_15,",
						"          IND_11_5 = IND_11_51+IND_11_52+IND_11_53+IND_11_54+IND_11_55,",
						"          IND_16_5 = IND_16_51+IND_16_52+IND_16_53+IND_16_54,",
						"          IND_16_6 = IND_16_61+IND_16_62+IND_16_63+IND_16_64,",
						"          IND_19 = IND_19_1+IND_19_2+IND_19_3+IND_19_4+IND_19_5,",
						"          IND_20 = IND_20_1+IND_20_2+IND_20_3+IND_20_4+IND_20_5,",
						"          IND_21 = IND_21_1+IND_21_2+IND_21_3+IND_21_4) ~> CalculoIndicadors",
						"CalculoIndicadors derive(IND_2_11 = IND_2_111+IND_2_113+IND_2_114+IND_2_115,",
						"          IND_2_21 = IND_2_211+IND_2_213+IND_2_214+IND_2_215,",
						"          IND_2_311 = IND_2_211+IND_2_111,",
						"          IND_2_32 = IND_2_22+IND_2_12,",
						"          IND_2_41 = IND_2_411+IND_2_413+IND_2_414+IND_2_415,",
						"          IND_2_511 = IND_2_5111+IND_2_5113,",
						"          IND_2_611 = IND_2_511+IND_2_411,",
						"          IND_2_62 = IND_2_52+IND_2_42,",
						"          IND_4_1 = IND_4_11+IND_4_12,",
						"          IND_4_12 = IND_4_122+IND_4_123,",
						"          IND_4_1b = IND_4_13+IND_4_14,",
						"          IND_8_11 = IND_8_111+IND_8_112,",
						"          IND_8_12 = IND_8_132+IND_8_142+IND_8_152,",
						"          IND_8_13 = IND_8_131+IND_8_132,",
						"          IND_8_14 = IND_8_141+IND_8_142,",
						"          IND_8_15 = IND_8_151+IND_8_152,",
						"          IND_8_21 = IND_8_211+IND_8_212,",
						"          IND_8_23 = IND_8_231+IND_8_232,",
						"          IND_8_24 = IND_8_241+IND_8_242,",
						"          IND_8_25 = IND_8_251+IND_8_252,",
						"          IND_9_024 = IND_9_0241+IND_9_0242,",
						"          IND_10_16 = IND_10_161+IND_10_162,",
						"          IND_10_26 = IND_10_261+IND_10_262,",
						"          IND_11 = IND_11_1+IND_11_5) ~> CalculoIndicadors2",
						"CalculoIndicadors2 derive(IND_2_1 = IND_2_11+IND_2_12,",
						"          IND_2_2 = IND_2_21+IND_2_22,",
						"          IND_2_31 = IND_2_21+IND_2_11,",
						"          IND_2_4 = IND_2_41+IND_2_42,",
						"          IND_2_51 = IND_2_511+IND_2_513+IND_2_514+IND_2_515,",
						"          IND_8_1 = IND_8_11+IND_8_12,",
						"          IND_8_2 = IND_8_21+IND_8_22,",
						"          IND_10_2 = IND_10_21+IND_10_24+IND_10_25+IND_10_26+IND_10_27+IND_10_28,",
						"          IND_10_1 = IND_10_11+IND_10_13+IND_10_14+IND_10_15+IND_10_16+IND_10_17+IND_10_18) ~> CalculoIndicadors3",
						"CalculoIndicadors3 derive(IND_2_3 = IND_2_2+IND_2_1,",
						"          IND_2_5 = IND_2_51+IND_2_52,",
						"          IND_2_61 = IND_2_51+IND_2_41) ~> CalculoIndicadors4",
						"CalculoIndicadors4 derive(IND_2_6 = IND_2_5+IND_2_4) ~> CalculoIndicadors5",
						"Select alterRow(upsertIf(1==1)) ~> AlterRow",
						"AlterRow sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as double,",
						"          DATA_PERIODE as date,",
						"          DATA_INSERCIO as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CODI_BIBLIOTECA','CODI_INDICADOR','DATA_PERIODE'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactIndicadors"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_DATA_ENTRY')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CARREGA_DATA_ENTRY_MES_VENCIDO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_DATA_ENTRY",
								"type": "DatasetReference"
							},
							"name": "DataEntry"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMDimBiblioteques"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_HIST_ENTRADA_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "HistEntradaIndicadors"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMFactIndicadors"
						}
					],
					"transformations": [
						{
							"name": "Unpivot"
						},
						{
							"name": "FiltroDespeses"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "Join"
						},
						{
							"name": "SelectAgency"
						},
						{
							"name": "Select"
						},
						{
							"name": "CalculoIndicadors"
						},
						{
							"name": "CalculoIndicadors2"
						},
						{
							"name": "CalculoIndicadors3"
						},
						{
							"name": "CalculoIndicadors4"
						},
						{
							"name": "CalculoIndicadors5"
						},
						{
							"name": "AlterRow"
						},
						{
							"name": "join1"
						},
						{
							"name": "ADate"
						},
						{
							"name": "select3"
						},
						{
							"name": "MaxModif"
						},
						{
							"name": "FiltroDataModificacio"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CODI_BIBLIOTECA as string,",
						"          DATA_PERIODE as date,",
						"          IND_1_4 as double,",
						"          IND_2_1111 as double,",
						"          IND_2_1113 as double,",
						"          IND_2_1122 as double,",
						"          IND_2_113 as double,",
						"          IND_2_114 as double,",
						"          IND_2_115 as double,",
						"          IND_2_121 as double,",
						"          IND_2_122 as double,",
						"          IND_2_123 as double,",
						"          IND_2_2111 as double,",
						"          IND_2_2113 as double,",
						"          IND_2_2122 as double,",
						"          IND_2_213 as double,",
						"          IND_2_214 as double,",
						"          IND_2_215 as double,",
						"          IND_2_221 as double,",
						"          IND_2_222 as double,",
						"          IND_2_223 as double,",
						"          IND_2_4111 as double,",
						"          IND_2_4113 as double,",
						"          IND_2_4122 as double,",
						"          IND_2_413 as double,",
						"          IND_2_414 as double,",
						"          IND_2_415 as double,",
						"          IND_2_421 as double,",
						"          IND_2_422 as double,",
						"          IND_2_423 as double,",
						"          IND_2_5111 as double,",
						"          IND_2_5113 as double,",
						"          IND_2_5122 as double,",
						"          IND_2_513 as double,",
						"          IND_2_514 as double,",
						"          IND_2_515 as double,",
						"          IND_2_521 as double,",
						"          IND_2_522 as double,",
						"          IND_2_523 as double,",
						"          IND_2_71 as double,",
						"          IND_2_72 as double,",
						"          IND_2_73 as double,",
						"          IND_2_74 as double,",
						"          IND_4_111 as double,",
						"          IND_4_112 as double,",
						"          IND_4_122 as double,",
						"          IND_4_123 as double,",
						"          IND_4_21 as double,",
						"          IND_4_22 as double,",
						"          IND_4_31 as double,",
						"          IND_4_32 as double,",
						"          IND_5_1 as double,",
						"          IND_5_2 as double,",
						"          IND_5_3 as double,",
						"          IND_5_41 as double,",
						"          IND_5_42 as double,",
						"          IND_5_5 as double,",
						"          IND_5_6 as double,",
						"          IND_5_7 as double,",
						"          IND_5_8 as double,",
						"          IND_5_9 as double,",
						"          IND_6_4 as double,",
						"          IND_8_1311 as double,",
						"          IND_8_1312 as double,",
						"          IND_8_132 as double,",
						"          IND_8_1411 as double,",
						"          IND_8_1412 as double,",
						"          IND_8_142 as double,",
						"          IND_8_1511 as double,",
						"          IND_8_1512 as double,",
						"          IND_8_152 as double,",
						"          IND_8_2311 as double,",
						"          IND_8_2312 as double,",
						"          IND_8_232 as double,",
						"          IND_8_2411 as double,",
						"          IND_8_2412 as double,",
						"          IND_8_242 as double,",
						"          IND_8_2511 as double,",
						"          IND_8_2512 as double,",
						"          IND_8_252 as double,",
						"          IND_8_311 as double,",
						"          IND_8_312 as double,",
						"          IND_8_313 as double,",
						"          IND_8_321 as double,",
						"          IND_8_322 as double,",
						"          IND_8_323 as double,",
						"          IND_9_2 as double,",
						"          IND_9_011 as double,",
						"          IND_9_012 as double,",
						"          IND_9_013 as double,",
						"          IND_9_015 as double,",
						"          IND_9_016 as double,",
						"          IND_9_020 as double,",
						"          IND_9_0223 as double,",
						"          IND_9_0231 as double,",
						"          IND_9_0232 as double,",
						"          IND_9_0233 as double,",
						"          IND_9_02411 as double,",
						"          IND_9_02412 as double,",
						"          IND_9_02413 as double,",
						"          IND_9_02421 as double,",
						"          IND_9_02422 as double,",
						"          IND_9_02423 as double,",
						"          IND_9_025 as double,",
						"          IND_9_026 as double,",
						"          IND_10_11 as double,",
						"          IND_10_13 as double,",
						"          IND_10_14 as double,",
						"          IND_10_15 as double,",
						"          IND_10_1613 as double,",
						"          IND_10_1614 as double,",
						"          IND_10_1615 as double,",
						"          IND_10_162 as double,",
						"          IND_10_17 as double,",
						"          IND_10_18 as double,",
						"          IND_10_21 as double,",
						"          IND_10_24 as double,",
						"          IND_10_25 as double,",
						"          IND_10_2612 as double,",
						"          IND_10_2613 as double,",
						"          IND_10_2614 as double,",
						"          IND_10_2615 as double,",
						"          IND_10_262 as double,",
						"          IND_10_27 as double,",
						"          IND_10_28 as double,",
						"          IND_11_11 as double,",
						"          IND_11_12 as double,",
						"          IND_11_13 as double,",
						"          IND_11_14 as double,",
						"          IND_11_15 as double,",
						"          IND_11_51 as double,",
						"          IND_11_52 as double,",
						"          IND_11_53 as double,",
						"          IND_11_54 as double,",
						"          IND_11_55 as double,",
						"          IND_16_1 as double,",
						"          IND_16_2 as double,",
						"          IND_16_3 as double,",
						"          IND_16_51 as double,",
						"          IND_16_52 as double,",
						"          IND_16_53 as double,",
						"          IND_16_54 as double,",
						"          IND_16_61 as double,",
						"          IND_16_62 as double,",
						"          IND_16_63 as double,",
						"          IND_16_64 as double,",
						"          IND_16_7 as double,",
						"          IND_16_8 as double,",
						"          IND_17_1 as double,",
						"          IND_17_2 as double,",
						"          IND_17_3 as double,",
						"          IND_19_1 as double,",
						"          IND_19_2 as double,",
						"          IND_19_3 as double,",
						"          IND_19_4 as double,",
						"          IND_19_5 as double,",
						"          IND_20_1 as double,",
						"          IND_20_2 as double,",
						"          IND_20_3 as double,",
						"          IND_20_4 as double,",
						"          IND_20_5 as double,",
						"          IND_21_1 as double,",
						"          IND_21_2 as double,",
						"          IND_21_3 as double,",
						"          IND_21_4 as double,",
						"          IND_5_10 as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DataEntry",
						"source(output(",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_NIDEN as string,",
						"          ESTAT as string,",
						"          TIPUS as string,",
						"          CATEGORIA_ESPECIALITZADA as string,",
						"          DESC_BIBLIOTECA as string,",
						"          ID_AGENCY as string,",
						"          TERMINAL as string,",
						"          DATA_ALTA as string,",
						"          DATA_BAIXA as string,",
						"          ADAPTADA as string,",
						"          FORMA_ACCESS as string,",
						"          TITULARITAT as string,",
						"          {ADREÇA} as string,",
						"          MUNICIPI as string,",
						"          {C.P.} as string,",
						"          COMARCA as string,",
						"          {ÀMBIT TERRITORIAL} as string,",
						"          SSTT as string,",
						"          PROVINCIA as string,",
						"          UTMX as string,",
						"          UTMY as string,",
						"          {MÒDUL_TERRITORIAL} as string,",
						"          {TELÈFON} as string,",
						"          EXT as string,",
						"          FAX as string,",
						"          WEB as string,",
						"          {ADREÇA_ELCT} as string,",
						"          {ADREÇA_ELECT_2} as string,",
						"          TRACTAMENT_DIRECT as string,",
						"          NOM_DIRECT as string,",
						"          PRIMER_COGNOM as string,",
						"          SEGON_COGNOM as string,",
						"          OBSERVACIONS as string,",
						"          GRUP as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMDimBiblioteques",
						"source(output(",
						"          CODI_BIBLIOTECA as string,",
						"          DATA_PERIODE as timestamp,",
						"          DATA_MODIFICACIO as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> HistEntradaIndicadors",
						"CalculoIndicadors5 unpivot(output(",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as double",
						"     ),",
						"     ungroupBy(CODI_BIBLIOTECA,",
						"          DATA_PERIODE),",
						"     lateral: true,",
						"     ignoreNullPivots: false) ~> Unpivot",
						"Unpivot filter(not(month(DATA_PERIODE) != 12 && in(['IND_11_11',",
						"'IND_11_12',",
						"'IND_11_13',",
						"'IND_11_14',",
						"'IND_11_15',",
						"'IND_11_16',",
						"'IND_11_21',",
						"'IND_11_22',",
						"'IND_11_23',",
						"'IND_11_24',",
						"'IND_11_25',",
						"'IND_11_26',",
						"'IND_11_31',",
						"'IND_11_32',",
						"'IND_11_33',",
						"'IND_11_34',",
						"'IND_11_35',",
						"'IND_11_36',",
						"'IND_11_41',",
						"'IND_11_42',",
						"'IND_11_43',",
						"'IND_11_44',",
						"'IND_11_45',",
						"'IND_11_46',",
						"'IND_11_51',",
						"'IND_11_52',",
						"'IND_11_53',",
						"'IND_11_54',",
						"'IND_11_55',",
						"'IND_11_56'],CODI_INDICADOR)",
						")) ~> FiltroDespeses",
						"FiltroDespeses derive(DATA_INSERCIO = currentDate()) ~> DataInsercio",
						"DataInsercio, SelectAgency join(Unpivot@CODI_BIBLIOTECA == SelectAgency@CODI_BIBLIOTECA,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Join",
						"DMDimBiblioteques select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          ID_AGENCY",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectAgency",
						"Join select(mapColumn(",
						"          ID_AGENCY,",
						"          CODI_BIBLIOTECA = Unpivot@CODI_BIBLIOTECA,",
						"          CODI_INDICADOR,",
						"          IND_VALOR,",
						"          DATA_INSERCIO,",
						"          DATA_PERIODE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"select3 derive(IND_2_111 = IND_2_1111+IND_2_1113,",
						"          IND_2_12 = IND_2_121+IND_2_122+IND_2_123,",
						"          IND_2_211 = IND_2_2111+IND_2_2113,",
						"          IND_2_22 = IND_2_221+IND_2_222+IND_2_223,",
						"          IND_2_3111 = IND_2_2111+IND_2_1111,",
						"          IND_2_3113 = IND_2_2113+IND_2_1113,",
						"          IND_2_3122 = IND_2_2122+IND_2_1122,",
						"          IND_2_313 = IND_2_213+IND_2_113,",
						"          IND_2_314 = IND_2_214+IND_2_114,",
						"          IND_2_315 = IND_2_215+IND_2_115,",
						"          IND_2_321 = IND_2_221+IND_2_121,",
						"          IND_2_322 = IND_2_222+IND_2_122,",
						"          IND_2_323 = IND_2_223+IND_2_123,",
						"          IND_2_411 = IND_2_4111+IND_2_4113,",
						"          IND_2_42 = IND_2_421+IND_2_422+IND_2_423,",
						"          IND_2_511 = IND_2_5111+IND_2_5113,",
						"          IND_2_52 = IND_2_521+IND_2_522+IND_2_523,",
						"          IND_2_6111 = IND_2_5111+IND_2_4111,",
						"          IND_2_6113 = IND_2_5113+IND_2_4113,",
						"          IND_2_6122 = IND_2_5122+IND_2_4122,",
						"          IND_2_613 = IND_2_513+IND_2_413,",
						"          IND_2_614 = IND_2_514+IND_2_414,",
						"          IND_2_615 = IND_2_515+IND_2_415,",
						"          IND_2_621 = IND_2_521+IND_2_421,",
						"          IND_2_622 = IND_2_522+IND_2_422,",
						"          IND_2_623 = IND_2_523+IND_2_423,",
						"          IND_4_11 = IND_4_111+IND_4_112,",
						"          IND_4_12 = IND_4_122+IND_4_123,",
						"          IND_4_13 = IND_4_111+IND_4_122,",
						"          IND_4_14 = IND_4_112+IND_4_123,",
						"          IND_4_2 = IND_4_21+IND_4_22,",
						"          IND_4_3 = IND_4_31+IND_4_32,",
						"          IND_5_4 = IND_5_41+IND_5_42,",
						"          IND_8_131 = IND_8_1311+IND_8_1312,",
						"          IND_8_111 = IND_8_1311+IND_8_1411+IND_8_1511,",
						"          IND_8_112 = IND_8_1312+IND_8_1412+IND_8_1512,",
						"          IND_8_141 = IND_8_1411+IND_8_1412,",
						"          IND_8_151 = IND_8_1511+IND_8_1512,",
						"          IND_8_241 = IND_8_2411+IND_8_2412,",
						"          IND_8_251 = IND_8_2511+IND_8_2512,",
						"          IND_8_31 = IND_8_311+IND_8_312+IND_8_313,",
						"          IND_8_32 = IND_8_321+IND_8_322+IND_8_323,",
						"          IND_8_211 = IND_8_2311+IND_8_2411+IND_8_2511,",
						"          IND_8_212 = IND_8_2312+IND_8_2412+IND_8_2512,",
						"          IND_8_231 = IND_8_2311+IND_8_2312,",
						"          IND_8_22 = IND_8_232+IND_8_242+IND_8_252,",
						"          IND_9_023 = IND_9_0231+IND_9_0232+IND_9_0233,",
						"          IND_9_0241 = IND_9_02411+IND_9_02412+IND_9_02413,",
						"          IND_9_0242 = IND_9_02421+IND_9_02422+IND_9_02423,",
						"          IND_9_1 = IND_9_2+IND_10_21,",
						"          IND_10_161 = IND_10_1613+IND_10_1614+IND_10_1615,",
						"          IND_10_261 = IND_10_2612+IND_10_2613+IND_10_2614+IND_10_2615,",
						"          IND_11_1 = IND_11_11+IND_11_12+IND_11_13+IND_11_14+IND_11_15,",
						"          IND_11_5 = IND_11_51+IND_11_52+IND_11_53+IND_11_54+IND_11_55,",
						"          IND_16_5 = IND_16_51+IND_16_52+IND_16_53+IND_16_54,",
						"          IND_16_6 = IND_16_61+IND_16_62+IND_16_63+IND_16_64,",
						"          IND_19 = IND_19_1+IND_19_2+IND_19_3+IND_19_4+IND_19_5,",
						"          IND_20 = IND_20_1+IND_20_2+IND_20_3+IND_20_4+IND_20_5,",
						"          IND_21 = IND_21_1+IND_21_2+IND_21_3+IND_21_4) ~> CalculoIndicadors",
						"CalculoIndicadors derive(IND_2_11 = IND_2_111+IND_2_113+IND_2_114+IND_2_115,",
						"          IND_2_21 = IND_2_211+IND_2_213+IND_2_214+IND_2_215,",
						"          IND_2_311 = IND_2_211+IND_2_111,",
						"          IND_2_32 = IND_2_22+IND_2_12,",
						"          IND_2_41 = IND_2_411+IND_2_413+IND_2_414+IND_2_415,",
						"          IND_2_511 = IND_2_5111+IND_2_5113,",
						"          IND_2_611 = IND_2_511+IND_2_411,",
						"          IND_2_62 = IND_2_52+IND_2_42,",
						"          IND_4_1 = IND_4_11+IND_4_12,",
						"          IND_4_12 = IND_4_122+IND_4_123,",
						"          IND_4_1b = IND_4_13+IND_4_14,",
						"          IND_8_11 = IND_8_111+IND_8_112,",
						"          IND_8_12 = IND_8_132+IND_8_142+IND_8_152,",
						"          IND_8_13 = IND_8_131+IND_8_132,",
						"          IND_8_14 = IND_8_141+IND_8_142,",
						"          IND_8_15 = IND_8_151+IND_8_152,",
						"          IND_8_21 = IND_8_211+IND_8_212,",
						"          IND_8_23 = IND_8_231+IND_8_232,",
						"          IND_8_24 = IND_8_241+IND_8_242,",
						"          IND_8_25 = IND_8_251+IND_8_252,",
						"          IND_9_024 = IND_9_0241+IND_9_0242,",
						"          IND_10_16 = IND_10_161+IND_10_162,",
						"          IND_10_26 = IND_10_261+IND_10_262,",
						"          IND_11 = IND_11_1+IND_11_5) ~> CalculoIndicadors2",
						"CalculoIndicadors2 derive(IND_2_1 = IND_2_11+IND_2_12,",
						"          IND_2_2 = IND_2_21+IND_2_22,",
						"          IND_2_31 = IND_2_21+IND_2_11,",
						"          IND_2_4 = IND_2_41+IND_2_42,",
						"          IND_2_51 = IND_2_511+IND_2_513+IND_2_514+IND_2_515,",
						"          IND_8_1 = IND_8_11+IND_8_12,",
						"          IND_8_2 = IND_8_21+IND_8_22,",
						"          IND_10_2 = IND_10_21+IND_10_24+IND_10_25+IND_10_26+IND_10_27+IND_10_28,",
						"          IND_10_1 = IND_10_11+IND_10_13+IND_10_14+IND_10_15+IND_10_16+IND_10_17+IND_10_18) ~> CalculoIndicadors3",
						"CalculoIndicadors3 derive(IND_2_3 = IND_2_2+IND_2_1,",
						"          IND_2_5 = IND_2_51+IND_2_52,",
						"          IND_2_61 = IND_2_51+IND_2_41) ~> CalculoIndicadors4",
						"CalculoIndicadors4 derive(IND_2_6 = IND_2_5+IND_2_4) ~> CalculoIndicadors5",
						"Select alterRow(upsertIf(true())) ~> AlterRow",
						"DataEntry, ADate join(DataEntry@CODI_BIBLIOTECA == MaxModif@CODI_BIBLIOTECA",
						"     && DataEntry@DATA_PERIODE == ADate@DATA_PERIODE,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"MaxModif derive(DATA_PERIODE = toDate(concat(toString(year(DATA_PERIODE)),'-',toString(month(DATA_PERIODE)),'-01'),'yyyy-MM-dd','ISO 8601')) ~> ADate",
						"join1 select(mapColumn(",
						"          CODI_BIBLIOTECA = DataEntry@CODI_BIBLIOTECA,",
						"          DATA_PERIODE = DataEntry@DATA_PERIODE,",
						"          IND_1_4,",
						"          IND_2_1111,",
						"          IND_2_1113,",
						"          IND_2_1122,",
						"          IND_2_113,",
						"          IND_2_114,",
						"          IND_2_115,",
						"          IND_2_121,",
						"          IND_2_122,",
						"          IND_2_123,",
						"          IND_2_2111,",
						"          IND_2_2113,",
						"          IND_2_2122,",
						"          IND_2_213,",
						"          IND_2_214,",
						"          IND_2_215,",
						"          IND_2_221,",
						"          IND_2_222,",
						"          IND_2_223,",
						"          IND_2_4111,",
						"          IND_2_4113,",
						"          IND_2_4122,",
						"          IND_2_413,",
						"          IND_2_414,",
						"          IND_2_415,",
						"          IND_2_421,",
						"          IND_2_422,",
						"          IND_2_423,",
						"          IND_2_5111,",
						"          IND_2_5113,",
						"          IND_2_5122,",
						"          IND_2_513,",
						"          IND_2_514,",
						"          IND_2_515,",
						"          IND_2_521,",
						"          IND_2_522,",
						"          IND_2_523,",
						"          IND_2_71,",
						"          IND_2_72,",
						"          IND_2_73,",
						"          IND_2_74,",
						"          IND_4_111,",
						"          IND_4_112,",
						"          IND_4_122,",
						"          IND_4_123,",
						"          IND_4_21,",
						"          IND_4_22,",
						"          IND_4_31,",
						"          IND_4_32,",
						"          IND_5_1,",
						"          IND_5_2,",
						"          IND_5_3,",
						"          IND_5_41,",
						"          IND_5_42,",
						"          IND_5_5,",
						"          IND_5_6,",
						"          IND_5_7,",
						"          IND_5_8,",
						"          IND_5_9,",
						"          IND_6_4,",
						"          IND_8_1311,",
						"          IND_8_1312,",
						"          IND_8_132,",
						"          IND_8_1411,",
						"          IND_8_1412,",
						"          IND_8_142,",
						"          IND_8_1511,",
						"          IND_8_1512,",
						"          IND_8_152,",
						"          IND_8_2311,",
						"          IND_8_2312,",
						"          IND_8_232,",
						"          IND_8_2411,",
						"          IND_8_2412,",
						"          IND_8_242,",
						"          IND_8_2511,",
						"          IND_8_2512,",
						"          IND_8_252,",
						"          IND_8_311,",
						"          IND_8_312,",
						"          IND_8_313,",
						"          IND_8_321,",
						"          IND_8_322,",
						"          IND_8_323,",
						"          IND_9_2,",
						"          IND_9_011,",
						"          IND_9_012,",
						"          IND_9_013,",
						"          IND_9_015,",
						"          IND_9_016,",
						"          IND_9_020,",
						"          IND_9_0223,",
						"          IND_9_0231,",
						"          IND_9_0232,",
						"          IND_9_0233,",
						"          IND_9_02411,",
						"          IND_9_02412,",
						"          IND_9_02413,",
						"          IND_9_02421,",
						"          IND_9_02422,",
						"          IND_9_02423,",
						"          IND_9_025,",
						"          IND_9_026,",
						"          IND_10_11,",
						"          IND_10_13,",
						"          IND_10_14,",
						"          IND_10_15,",
						"          IND_10_1613,",
						"          IND_10_1614,",
						"          IND_10_1615,",
						"          IND_10_162,",
						"          IND_10_17,",
						"          IND_10_18,",
						"          IND_10_21,",
						"          IND_10_24,",
						"          IND_10_25,",
						"          IND_10_2612,",
						"          IND_10_2613,",
						"          IND_10_2614,",
						"          IND_10_2615,",
						"          IND_10_262,",
						"          IND_10_27,",
						"          IND_10_28,",
						"          IND_11_11,",
						"          IND_11_12,",
						"          IND_11_13,",
						"          IND_11_14,",
						"          IND_11_15,",
						"          IND_11_51,",
						"          IND_11_52,",
						"          IND_11_53,",
						"          IND_11_54,",
						"          IND_11_55,",
						"          IND_16_1,",
						"          IND_16_2,",
						"          IND_16_3,",
						"          IND_16_51,",
						"          IND_16_52,",
						"          IND_16_53,",
						"          IND_16_54,",
						"          IND_16_61,",
						"          IND_16_62,",
						"          IND_16_63,",
						"          IND_16_64,",
						"          IND_16_7,",
						"          IND_16_8,",
						"          IND_17_1,",
						"          IND_17_2,",
						"          IND_17_3,",
						"          IND_19_1,",
						"          IND_19_2,",
						"          IND_19_3,",
						"          IND_19_4,",
						"          IND_19_5,",
						"          IND_20_1,",
						"          IND_20_2,",
						"          IND_20_3,",
						"          IND_20_4,",
						"          IND_20_5,",
						"          IND_21_1,",
						"          IND_21_2,",
						"          IND_21_3,",
						"          IND_21_4,",
						"          IND_5_10",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select3",
						"FiltroDataModificacio aggregate(groupBy(CODI_BIBLIOTECA,",
						"          DATA_PERIODE),",
						"     DATA_MODIFICACIO = max(DATA_MODIFICACIO)) ~> MaxModif",
						"HistEntradaIndicadors filter(DATA_MODIFICACIO > addDays(currentTimestamp(), -1)) ~> FiltroDataModificacio",
						"AlterRow sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as double,",
						"          DATA_PERIODE as date,",
						"          DATA_INSERCIO as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CODI_BIBLIOTECA','CODI_INDICADOR','DATA_PERIODE'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactIndicadors"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_DATA_ENTRY')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_HIST_ENTRADA_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CARREGA_NO_PERIODICS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Hemos dejado el destino en Automapping asumiendo que el pivot hará el match. Si fallase, hay que poner explicitamente las columnas del pivot.",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMFactIndicadors"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMDimIndicadors"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMDimBibliotecas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_DATA_ENTRY",
								"type": "DatasetReference"
							},
							"name": "DMDataEntry"
						}
					],
					"transformations": [
						{
							"name": "Join"
						},
						{
							"name": "Pivot"
						},
						{
							"name": "Select"
						},
						{
							"name": "DataPeriode"
						},
						{
							"name": "FiltroNoPeriodics"
						},
						{
							"name": "FiltroMesAnterior"
						},
						{
							"name": "CrossJoin"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Data_Carrega as string",
						"}",
						"source(output(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMFactIndicadors",
						"source(output(",
						"          ID_INDICADOR as string,",
						"          CODI_INDICADOR as string,",
						"          DESC_INDICADOR as string,",
						"          DESC_COMO_CALCULAR as string,",
						"          FLAG_FITXER as string,",
						"          FLAG_DATAENTRY as string,",
						"          FLAG_NO_PERIODICS as string,",
						"          ID_PARENT_INDICADOR as string,",
						"          FILA_LEVEL_1 as string,",
						"          FILA_LEVEL_2 as string,",
						"          FILA_LEVEL_3 as string,",
						"          FILA_LEVEL_4 as string,",
						"          FILA_LEVEL_5 as string,",
						"          COLUMNA_LEVEL_1 as string,",
						"          COLUMNA_LEVEL_2 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMDimIndicadors",
						"source(output(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_AGENCY as string,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMDimBibliotecas",
						"FiltroMesAnterior, CrossJoin join(DMFactIndicadors@CODI_INDICADOR == DMDimIndicadors@CODI_INDICADOR,",
						"     joinType:'right',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Join",
						"Select pivot(groupBy(CODI_BIBLIOTECA),",
						"     pivotBy(CODI_INDICADOR),",
						"     {} = sum(IND_VALOR),",
						"     columnNaming: '$N$V',",
						"     lateral: true) ~> Pivot",
						"Join select(mapColumn(",
						"          CODI_BIBLIOTECA = DMDimBibliotecas@CODI_BIBLIOTECA,",
						"          CODI_INDICADOR = DMDimIndicadors@CODI_INDICADOR,",
						"          IND_VALOR",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"Pivot derive(DATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataPeriode",
						"DMDimIndicadors filter(FLAG_NO_PERIODICS == '1') ~> FiltroNoPeriodics",
						"DMFactIndicadors filter(addMonths(toDate(concat($Data_Carrega,'01'),'yyyyMMdd'),-1) == DATA_PERIODE) ~> FiltroMesAnterior",
						"FiltroNoPeriodics, DMDimBibliotecas join(true(),",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> CrossJoin",
						"DataPeriode sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_BIBLIOTECA as string,",
						"          DATA_PERIODE as date,",
						"          IND_1_4 as double,",
						"          IND_2_1111 as double,",
						"          IND_2_1113 as double,",
						"          IND_2_1122 as double,",
						"          IND_2_113 as double,",
						"          IND_2_114 as double,",
						"          IND_2_115 as double,",
						"          IND_2_121 as double,",
						"          IND_2_122 as double,",
						"          IND_2_123 as double,",
						"          IND_2_2111 as double,",
						"          IND_2_2113 as double,",
						"          IND_2_2122 as double,",
						"          IND_2_213 as double,",
						"          IND_2_214 as double,",
						"          IND_2_215 as double,",
						"          IND_2_221 as double,",
						"          IND_2_222 as double,",
						"          IND_2_223 as double,",
						"          IND_2_4111 as double,",
						"          IND_2_4113 as double,",
						"          IND_2_4122 as double,",
						"          IND_2_413 as double,",
						"          IND_2_414 as double,",
						"          IND_2_415 as double,",
						"          IND_2_421 as double,",
						"          IND_2_422 as double,",
						"          IND_2_423 as double,",
						"          IND_2_5111 as double,",
						"          IND_2_5113 as double,",
						"          IND_2_5122 as double,",
						"          IND_2_513 as double,",
						"          IND_2_514 as double,",
						"          IND_2_515 as double,",
						"          IND_2_521 as double,",
						"          IND_2_522 as double,",
						"          IND_2_523 as double,",
						"          IND_2_71 as double,",
						"          IND_2_72 as double,",
						"          IND_2_73 as double,",
						"          IND_2_74 as double,",
						"          IND_4_111 as double,",
						"          IND_4_112 as double,",
						"          IND_4_122 as double,",
						"          IND_4_123 as double,",
						"          IND_4_21 as double,",
						"          IND_4_22 as double,",
						"          IND_4_31 as double,",
						"          IND_4_32 as double,",
						"          IND_5_1 as double,",
						"          IND_5_2 as double,",
						"          IND_5_3 as double,",
						"          IND_5_41 as double,",
						"          IND_5_42 as double,",
						"          IND_5_5 as double,",
						"          IND_5_6 as double,",
						"          IND_5_7 as double,",
						"          IND_5_8 as double,",
						"          IND_5_9 as double,",
						"          IND_6_4 as double,",
						"          IND_8_1311 as double,",
						"          IND_8_1312 as double,",
						"          IND_8_132 as double,",
						"          IND_8_1411 as double,",
						"          IND_8_1412 as double,",
						"          IND_8_142 as double,",
						"          IND_8_1511 as double,",
						"          IND_8_1512 as double,",
						"          IND_8_152 as double,",
						"          IND_8_2311 as double,",
						"          IND_8_2312 as double,",
						"          IND_8_232 as double,",
						"          IND_8_2411 as double,",
						"          IND_8_2412 as double,",
						"          IND_8_242 as double,",
						"          IND_8_2511 as double,",
						"          IND_8_2512 as double,",
						"          IND_8_252 as double,",
						"          IND_8_311 as double,",
						"          IND_8_312 as double,",
						"          IND_8_313 as double,",
						"          IND_8_321 as double,",
						"          IND_8_322 as double,",
						"          IND_8_323 as double,",
						"          IND_9_2 as double,",
						"          IND_9_011 as double,",
						"          IND_9_012 as double,",
						"          IND_9_013 as double,",
						"          IND_9_015 as double,",
						"          IND_9_016 as double,",
						"          IND_9_020 as double,",
						"          IND_9_0223 as double,",
						"          IND_9_0231 as double,",
						"          IND_9_0232 as double,",
						"          IND_9_0233 as double,",
						"          IND_9_02411 as double,",
						"          IND_9_02412 as double,",
						"          IND_9_02413 as double,",
						"          IND_9_02421 as double,",
						"          IND_9_02422 as double,",
						"          IND_9_02423 as double,",
						"          IND_9_025 as double,",
						"          IND_9_026 as double,",
						"          IND_10_11 as double,",
						"          IND_10_13 as double,",
						"          IND_10_14 as double,",
						"          IND_10_15 as double,",
						"          IND_10_1613 as double,",
						"          IND_10_1614 as double,",
						"          IND_10_1615 as double,",
						"          IND_10_162 as double,",
						"          IND_10_17 as double,",
						"          IND_10_18 as double,",
						"          IND_10_21 as double,",
						"          IND_10_24 as double,",
						"          IND_10_25 as double,",
						"          IND_10_2612 as double,",
						"          IND_10_2613 as double,",
						"          IND_10_2614 as double,",
						"          IND_10_2615 as double,",
						"          IND_10_262 as double,",
						"          IND_10_27 as double,",
						"          IND_10_28 as double,",
						"          IND_11_11 as double,",
						"          IND_11_12 as double,",
						"          IND_11_13 as double,",
						"          IND_11_14 as double,",
						"          IND_11_15 as double,",
						"          IND_11_51 as double,",
						"          IND_11_52 as double,",
						"          IND_11_53 as double,",
						"          IND_11_54 as double,",
						"          IND_11_55 as double,",
						"          IND_16_1 as double,",
						"          IND_16_2 as double,",
						"          IND_16_3 as double,",
						"          IND_16_51 as double,",
						"          IND_16_52 as double,",
						"          IND_16_53 as double,",
						"          IND_16_54 as double,",
						"          IND_16_61 as double,",
						"          IND_16_62 as double,",
						"          IND_16_63 as double,",
						"          IND_16_64 as double,",
						"          IND_16_7 as double,",
						"          IND_16_8 as double,",
						"          IND_17_1 as double,",
						"          IND_17_2 as double,",
						"          IND_17_3 as double,",
						"          IND_19_1 as double,",
						"          IND_19_2 as double,",
						"          IND_19_3 as double,",
						"          IND_19_4 as double,",
						"          IND_19_5 as double,",
						"          IND_20_1 as double,",
						"          IND_20_2 as double,",
						"          IND_20_3 as double,",
						"          IND_20_4 as double,",
						"          IND_20_5 as double,",
						"          IND_21_1 as double,",
						"          IND_21_2 as double,",
						"          IND_21_3 as double,",
						"          IND_21_4 as double,",
						"          IND_5_10 as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMDataEntry"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_DATA_ENTRY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CARREGA_PROCEDENCIA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
								"type": "DatasetReference"
							},
							"name": "Procedencia"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS3_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODS3FactIndicadorsSink"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Procedencia",
						"Procedencia sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODS3FactIndicadorsSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA')]",
				"[concat(variables('factoryId'), '/datasets/ODS3_BEG_FACT_INDICADORS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DIBICA_A_BIBLIOTEQUES_BEG')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_DIBICA_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimDIBICA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"transformations": [
						{
							"name": "FiltroBibliotecasBeg"
						},
						{
							"name": "AlterRow"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimDIBICA",
						"DimDIBICA filter(in([",
						"'E0018','E0076',",
						"  'E0090',",
						"'E0298',",
						"'E0308',",
						"'E0017',",
						"'E0408',",
						"'E0409',",
						"'E0410',",
						"'E0411',",
						"'E0105',",
						"'E0324',",
						"'E0091',",
						"'E0325',",
						"'E0021',",
						"'E0093',",
						"'E0086',",
						"'E0097',",
						"'E0089',",
						"'E0095',",
						"'E0003',",
						"'E0010',",
						"'E0096',",
						"'E0068',",
						"'E0037',",
						"'E0111',",
						"'E0048',",
						"'E0041',",
						"'E0027',",
						"'E0043',",
						"'E0065',",
						"'E0098',",
						"'E0032',",
						"'E0006',",
						"'E0085',",
						"'E0053',",
						"'E0297',",
						"'E0009',",
						"'E0069',",
						"'E0007',",
						"'E0072',",
						"'E0326',",
						"'E0320',",
						"'E0063',",
						"'E0064',",
						"'E0092',",
						"'E0028',",
						"'E0288',",
						"'E0073',",
						"'E0075',",
						"'E0050',",
						"'E0407',",
						"'E0221',",
						"'E0314',",
						"'E0312',",
						"'E0294',",
						"'E0313',",
						"'E0309',",
						"'E0317',",
						"'E0311',",
						"'E0310',",
						"'E0318',",
						"'E0280',",
						"'E0055',",
						"'E0049',",
						"'E0413',",
						"'E0052',",
						"'E0323',",
						"'E0322',",
						"'E0415'],CODI_BIBLIOTECA)) ~> FiltroBibliotecasBeg",
						"FiltroBibliotecasBeg alterRow(upsertIf(1==1)) ~> AlterRow",
						"AlterRow sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_AGENCY as string,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CODI_BIBLIOTECA'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DimBiblioteques"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_DIBICA_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DIBICA_A_DIM_BIBLIOTEQUES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_DIBICA_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimDIBICA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"transformations": [
						{
							"name": "Select"
						},
						{
							"name": "CatalegBEG"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimDIBICA",
						"CatalegBEG select(mapColumn(",
						"          ID_BIBLIOTECA,",
						"          ID_USUARI,",
						"          CODI_BIBLIOTECA,",
						"          ID_TIPUS,",
						"          ID_MODUL,",
						"          CODI_NIDEN,",
						"          ID_ESTAT,",
						"          DESC_BIBLIOTECA,",
						"          DATA_ALTA_BIBLIO,",
						"          DATA_BAIXA_BIBLIO,",
						"          ID_TIPUS_VIA,",
						"          DESC_VIA,",
						"          NUM_VIA,",
						"          INE_MUNICIPI,",
						"          ID_DISTRICTE,",
						"          CP,",
						"          UTMX,",
						"          UTMY,",
						"          NUM_LONGITUD,",
						"          NUM_LATITUD,",
						"          NUM_TELEFON,",
						"          NUM_EXTENSIO,",
						"          NUM_FAX,",
						"          DESC_EMAIL,",
						"          DESC_WEB,",
						"          FLAG_BEG,",
						"          FLAG_SLPC,",
						"          ID_MAPA,",
						"          ID_CATEGORIA,",
						"          ID_TITULARITAT,",
						"          ID_FORMA_ACCES,",
						"          ES_CATALEG_COLECTIU_CCLP,",
						"          WEB_CATALEG_COLECTIU_CCLP,",
						"          ES_CATALEG_COLECTIU_DIP_BCN,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN,",
						"          ES_CATALEG_COLECTIU_CCUC,",
						"          WEB_CATALEG_COLECTIU_CCUC,",
						"          ES_CATALEG_COLECTIU_BEG,",
						"          WEB_CATALEG_COLECTIU_BEG,",
						"          ES_CATALEG_COLECTIU_ALTRES,",
						"          WEB_CATALEG_COLECTIU_ALTRES,",
						"          ID_DIRECTOR_TRACTAMENT,",
						"          DESC_DIRECTOR_NOMB,",
						"          DESC_DIRECTOR_PRIMER_COGNOM,",
						"          DESC_DIRECTOR_SEGON_COGNOM,",
						"          FLAG_ADAPTADA,",
						"          DESC_OBSERVACIONS,",
						"          OBS_ITINERARIS,",
						"          DATA_ALTA,",
						"          ID_USUARI_ALTA,",
						"          DATA_MODIF,",
						"          ID_USUARI_MODIF,",
						"          DATA_BAIXA,",
						"          ID_USUARI_BAIXA,",
						"          ID_ADSCRIPCIO,",
						"          ID_CATEGORIA_ESP",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"DimDIBICA filter(ES_CATALEG_COLECTIU_BEG) ~> CatalegBEG",
						"Select sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_AGENCY as string,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          CODI_NIDEN,",
						"          ESTAT = ID_ESTAT,",
						"          TIPUS = ID_TIPUS,",
						"          CATEGORIA_ESPECIALITZADA = ID_CATEGORIA,",
						"          DESC_BIBLIOTECA,",
						"          DATA_ALTA = DATA_ALTA_BIBLIO,",
						"          DATA_BAIXA,",
						"          ADAPTADA = FLAG_ADAPTADA,",
						"          FORMA_ACCESS = ID_FORMA_ACCES,",
						"          TITULARITAT = ID_TITULARITAT,",
						"          MUNICIPI = INE_MUNICIPI,",
						"          {C.P.} = CP,",
						"          UTMX,",
						"          UTMY,",
						"          {TELÈFON} = NUM_TELEFON,",
						"          EXT = NUM_EXTENSIO,",
						"          FAX = NUM_FAX,",
						"          WEB = DESC_WEB,",
						"          TRACTAMENT_DIRECT = ID_DIRECTOR_TRACTAMENT,",
						"          NOM_DIRECT = DESC_DIRECTOR_NOMB,",
						"          PRIMER_COGNOM = DESC_DIRECTOR_PRIMER_COGNOM,",
						"          SEGON_COGNOM = DESC_DIRECTOR_SEGON_COGNOM,",
						"          OBSERVACIONS = DESC_OBSERVACIONS",
						"     )) ~> DimBiblioteques"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_DIBICA_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DIM_TIME')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CSV_TIME",
								"type": "DatasetReference"
							},
							"name": "CSVTime"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TIME",
								"type": "DatasetReference"
							},
							"name": "DMDimTime"
						}
					],
					"transformations": [
						{
							"name": "CambiarTipo"
						}
					],
					"scriptLines": [
						"source(output(",
						"          DATA as string,",
						"          FLAG_ES_LABORABLE as string,",
						"          DATA_ANY as string,",
						"          NUM_SEMESTRE as string,",
						"          NUM_TRIMESTRE as string,",
						"          DATA_ANY_TRIMESTRE as string,",
						"          DATA_MES as string,",
						"          DATA_MES_NN as string,",
						"          DATA_ANY_MES as string,",
						"          NUM_DIA as string,",
						"          NUM_DIA_DD as string,",
						"          NUM_DIA_SEMANA as string,",
						"          DESC_MES as string,",
						"          DESC_MES_CAT as string,",
						"          DESC_DIA as string,",
						"          DESC_DIA_CAT as string,",
						"          NUM_SEMANA as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CSVTime",
						"CSVTime derive(DATA_ANY = toInteger(DATA_ANY),",
						"          DATA_MES = toInteger(DATA_MES)) ~> CambiarTipo",
						"CambiarTipo sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          DATA as string,",
						"          FLAG_ES_LABORABLE as string,",
						"          DATA_ANY as integer,",
						"          NUM_SEMESTRE as string,",
						"          NUM_TRIMESTRE as string,",
						"          DATA_ANY_TRIMESTRE as string,",
						"          DATA_MES as integer,",
						"          DATA_MES_NN as string,",
						"          DATA_ANY_MES as string,",
						"          NUM_DIA as string,",
						"          NUM_DIA_DD as string,",
						"          NUM_DIA_SEMANA as string,",
						"          DESC_MES as string,",
						"          DESC_MES_CAT as string,",
						"          DESC_DIA as string,",
						"          DESC_DIA_CAT as string,",
						"          NUM_SEMANA as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMDimTime"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_TIME')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TIME')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BAIXES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODSFactIndicadors"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMFactIndicadors"
						}
					],
					"transformations": [
						{
							"name": "AlterRow"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSFactIndicadors",
						"ODSFactIndicadors alterRow(upsertIf(1==1)) ~> AlterRow",
						"AlterRow sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as double,",
						"          DATA_PERIODE as date,",
						"          DATA_INSERCIO as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CODI_BIBLIOTECA','CODI_INDICADOR','DATA_PERIODE'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactIndicadors"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_AMBIT_TERRITORIAL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_TERRITORIAL_AMBIT_TERRITORIAL",
								"type": "DatasetReference"
							},
							"name": "STGAmbitTerritorial"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERRITORIAL_AMBIT_TERRITORIAL",
								"type": "DatasetReference"
							},
							"name": "DMAmbitTerritorial"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          IDAmbit as string,",
						"          Nom_Ambit as string,",
						"          Data_baixa as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGAmbitTerritorial",
						"STGAmbitTerritorial sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_AMBIT_TERRITORIAL as string,",
						"          DESC_AMBIT_TERRITORIAL as string,",
						"          DATA_BAIXA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_AMBIT_TERRITORIAL = IDAmbit,",
						"          DESC_AMBIT_TERRITORIAL = Nom_Ambit,",
						"          DATA_BAIXA = Data_baixa",
						"     )) ~> DMAmbitTerritorial"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_TERRITORIAL_AMBIT_TERRITORIAL')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TERRITORIAL_AMBIT_TERRITORIAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_COMARCA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_TERRITORIAL_COMARCA",
								"type": "DatasetReference"
							},
							"name": "STGComarca"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERRITORIAL_COMARCA",
								"type": "DatasetReference"
							},
							"name": "DMComarca"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          INE_Comarca as string,",
						"          IDAmbit as string,",
						"          Nom_Comarca as string,",
						"          Nom_Comarca_cat as string,",
						"          cod_sstt as integer,",
						"          Data_baixa as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGComarca",
						"STGComarca sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          INE_COMARCA as string,",
						"          ID_AMBIT_TERRITORIAL as string,",
						"          DESC_COMARCA as string,",
						"          DESC_COMARCA_CAT as string,",
						"          CODI_SSTT as integer,",
						"          DATA_BAIXA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          INE_COMARCA = INE_Comarca,",
						"          ID_AMBIT_TERRITORIAL = IDAmbit,",
						"          DESC_COMARCA = Nom_Comarca,",
						"          DESC_COMARCA_CAT = Nom_Comarca_cat,",
						"          CODI_SSTT = cod_sstt,",
						"          DATA_BAIXA = Data_baixa",
						"     )) ~> DMComarca"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_TERRITORIAL_COMARCA')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TERRITORIAL_COMARCA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_DIM_AUTOPRESTECS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_DIM_AUTOPRESTECS",
								"type": "DatasetReference"
							},
							"name": "ODSDimAutoprestecs"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_AUTOPRESTECS",
								"type": "DatasetReference"
							},
							"name": "DMDimAutoprestecs"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tDESC_BIBLIOTECA as string,\n\t\tID_AGENCY as string,\n\t\tTERMINAL as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSDimAutoprestecs\nODSDimAutoprestecs sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DMDimAutoprestecs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_DIM_AUTOPRESTECS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_AUTOPRESTECS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_DIM_BIBLIOTEQUES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "ODSDimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMDimBiblioteques"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_NIDEN as string,\n\t\tESTAT as string,\n\t\tTIPUS as string,\n\t\tCATEGORIA_ESPECIALITZADA as string,\n\t\tDESC_BIBLIOTECA as string,\n\t\tID_AGENCY as string,\n\t\tTERMINAL as string,\n\t\tDATA_ALTA as string,\n\t\tDATA_BAIXA as string,\n\t\tADAPTADA as string,\n\t\tFORMA_ACCESS as string,\n\t\tTITULARITAT as string,\n\t\t{ADREÇA} as string,\n\t\tMUNICIPI as string,\n\t\t{C.P.} as string,\n\t\tCOMARCA as string,\n\t\t{ÀMBIT TERRITORIAL} as string,\n\t\tSSTT as string,\n\t\tPROVINCIA as string,\n\t\tUTMX as string,\n\t\tUTMY as string,\n\t\t{MÒDUL_TERRITORIAL} as string,\n\t\t{TELÈFON} as string,\n\t\tEXT as string,\n\t\tFAX as string,\n\t\tWEB as string,\n\t\t{ADREÇA_ELCT} as string,\n\t\t{ADREÇA_ELECT_2} as string,\n\t\tTRACTAMENT_DIRECT as string,\n\t\tNOM_DIRECT as string,\n\t\tPRIMER_COGNOM as string,\n\t\tSEGON_COGNOM as string,\n\t\tOBSERVACIONS as string,\n\t\tGRUP as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSDimBiblioteques\nODSDimBiblioteques sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as string,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DMDimBiblioteques"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_DIM_LOCATIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "ODSDimLocations"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "DMDimLocations"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_AGENCY as string,\n\t\tTERMINAL as string,\n\t\tLOCATION as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSDimLocations\nODSDimLocations sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_LOCATION as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DMDimLocations"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_DIM_LOCATIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_LOCATIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_DIM_REL_P_TYPE_INDICADOR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference"
							},
							"name": "ODSDimRelPTypeIndicador"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_REL_P_TYPE_INDICADOR",
								"type": "DatasetReference"
							},
							"name": "DMDimRelPTypeIndicador"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tDESC_CONSULTA as string,\n\t\tP_TYPE as string,\n\t\tCODI_INDICADOR as string,\n\t\tID_INDICADOR as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSDimRelPTypeIndicador\nODSDimRelPTypeIndicador sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDESC_CONSULTA as string,\n\t\tP_TYPE as string,\n\t\tCODI_INDICADOR as string,\n\t\tID_INDICADOR as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DMDimRelPTypeIndicador"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_DIM_REL_P_TYPE_INDICADOR')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_REL_P_TYPE_INDICADOR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_FACT_INDICADOR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODSFactIndicadors"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_PRESTECS_ANUALS",
								"type": "DatasetReference"
							},
							"name": "PrestecsAnuals"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMFactIndicadors"
						}
					],
					"transformations": [
						{
							"name": "AlterRow"
						},
						{
							"name": "Union"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as decimal(17,6),",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSFactIndicadors",
						"source(output(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_PERIODE as date,",
						"          DATA_INSERCIO as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> PrestecsAnuals",
						"Union alterRow(upsertIf(1==1)) ~> AlterRow",
						"ODSFactIndicadors, PrestecsAnuals union(byName: true)~> Union",
						"AlterRow sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as double,",
						"          DATA_PERIODE as date,",
						"          DATA_INSERCIO as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CODI_BIBLIOTECA','CODI_INDICADOR','DATA_PERIODE'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactIndicadors"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_PRESTECS_ANUALS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_FACT_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODSFactIndicadors"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMFactIndicadors"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tID_AGENCY as string,\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tVALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tPERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSFactIndicadors\nODSFactIndicadors sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_AGENCY as string,\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as double,\n\t\tDATA_PERIODE as date,\n\t\tDATA_INSERCIO as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DMFactIndicadors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_MUNICIPI')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_TERRITORIAL_MUNICIPI",
								"type": "DatasetReference"
							},
							"name": "STGMunicipi"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERRITORIAL_MUNICIPI",
								"type": "DatasetReference"
							},
							"name": "DMMunicipi"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          INE_Municipi as string,",
						"          INE_Comarca as string,",
						"          INE_Provincia as string,",
						"          Nom_Municipi as string,",
						"          Nom_Municipi_cat as string,",
						"          CP as string,",
						"          Altitud as integer,",
						"          Superficie as decimal(6,2),",
						"          Cap_Pais as boolean,",
						"          Cap_Comunitat_Autonoma as boolean,",
						"          Cap_Provincia as boolean,",
						"          Cap_Comarca as boolean,",
						"          IDAmbit as string,",
						"          cod_sstt as integer,",
						"          Data_baixa as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGMunicipi",
						"STGMunicipi sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          INE_MUNICIPI as string,",
						"          INE_COMARCA as string,",
						"          INE_PROVINCIA as string,",
						"          DESC_MUNICIPI as string,",
						"          DESC_MUNICIPI_CAT as string,",
						"          CP as string,",
						"          NUM_ALTITUD as integer,",
						"          NUM_SUPERFICIE as decimal(6,2),",
						"          FLAG_CAPITAL_PAIS as boolean,",
						"          FLAG_CAPITAL_COMUNIDAD_AUTONOMA as boolean,",
						"          FLAG_CAPITAL_PROVINCIA as boolean,",
						"          FLAG_CAPITAL_COMARCA as boolean,",
						"          ID_AMBIT_TERRITORIAL as string,",
						"          CODI_SSTT as integer,",
						"          DATA_BAIXA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          INE_MUNICIPI = INE_Municipi,",
						"          INE_COMARCA = INE_Comarca,",
						"          INE_PROVINCIA = INE_Provincia,",
						"          DESC_MUNICIPI = Nom_Municipi,",
						"          DESC_MUNICIPI_CAT = Nom_Municipi_cat,",
						"          CP,",
						"          NUM_ALTITUD = Altitud,",
						"          NUM_SUPERFICIE = Superficie,",
						"          FLAG_CAPITAL_PAIS = Cap_Pais,",
						"          FLAG_CAPITAL_COMUNIDAD_AUTONOMA = Cap_Comunitat_Autonoma,",
						"          FLAG_CAPITAL_PROVINCIA = Cap_Provincia,",
						"          FLAG_CAPITAL_COMARCA = Cap_Comarca,",
						"          ID_AMBIT_TERRITORIAL = IDAmbit,",
						"          CODI_SSTT = cod_sstt,",
						"          DATA_BAIXA = Data_baixa",
						"     )) ~> DMMunicipi"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_TERRITORIAL_MUNICIPI')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TERRITORIAL_MUNICIPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_PROVINCIA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_TERRITORIAL_PROVINCIA",
								"type": "DatasetReference"
							},
							"name": "STGProvincia"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERRITORIAL_PROVINCIA",
								"type": "DatasetReference"
							},
							"name": "DMProvincia"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          INE_Provincia as string,",
						"          INE_Comunitat_Autonoma as string,",
						"          Nom_Provincia as string,",
						"          Nom_Provincia_cat as string,",
						"          Data_baixa as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGProvincia",
						"STGProvincia sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          INE_PROVINCIA as string,",
						"          INE_COMUNITAT_AUTONOMA as string,",
						"          DESC_PROVINCIA as string,",
						"          DESC_PROVINCIA_CAT as string,",
						"          DATA_BAIXA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          INE_PROVINCIA = INE_Provincia,",
						"          INE_COMUNITAT_AUTONOMA = INE_Comunitat_Autonoma,",
						"          DESC_PROVINCIA = Nom_Provincia,",
						"          DESC_PROVINCIA_CAT = Nom_Provincia_cat,",
						"          DATA_BAIXA = Data_baixa",
						"     )) ~> DMProvincia"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_TERRITORIAL_PROVINCIA')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TERRITORIAL_PROVINCIA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BIBLIOTEQUES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_BIBLIOTEQUES_DIBICA",
								"type": "DatasetReference"
							},
							"name": "STGBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_DIBICA_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMBiblioteques"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          id_biblioteca as integer,",
						"          id_usuari as integer,",
						"          codi as string,",
						"          id_tipus as integer,",
						"          id_modul as integer,",
						"          niden as string,",
						"          id_estat as integer,",
						"          denominacio as string,",
						"          data_alta_biblio as timestamp,",
						"          data_baixa_biblio as timestamp,",
						"          id_tipus_via as integer,",
						"          nom_via as string,",
						"          numero_via as string,",
						"          ine_municipi as string,",
						"          id_districte as integer,",
						"          cp as string,",
						"          utmx as double,",
						"          utmy as double,",
						"          longitud as double,",
						"          latitud as double,",
						"          telefon as string,",
						"          extensio as string,",
						"          fax as string,",
						"          email as string,",
						"          web as string,",
						"          beg as boolean,",
						"          slpc as boolean,",
						"          id_mapa as integer,",
						"          id_categoria as integer,",
						"          id_titularitat as integer,",
						"          finan_adm_central as decimal(18,2),",
						"          finan_generalitat as decimal(18,2),",
						"          finan_diputacio as decimal(18,2),",
						"          finan_con_comarcal as decimal(18,2),",
						"          finan_ajuntament as decimal(18,2),",
						"          finan_universitat as decimal(18,2),",
						"          finan_privada as decimal(18,2),",
						"          finan_altres as decimal(18,2),",
						"          id_forma_acces as integer,",
						"          es_cataleg_colectiu_cclp as boolean,",
						"          web_cataleg_colectiu_cclp as string,",
						"          es_cataleg_colectiu_dip_bcn as boolean,",
						"          web_cataleg_colectiu_dip_bcn as string,",
						"          es_cataleg_colectiu_ccuc as boolean,",
						"          web_cataleg_colectiu_ccuc as string,",
						"          es_cataleg_colectiu_beg as boolean,",
						"          web_cataleg_colectiu_beg as string,",
						"          es_cataleg_colectiu_altres as boolean,",
						"          web_cataleg_colectiu_altres as string,",
						"          id_director_tractament as integer,",
						"          director_nom as string,",
						"          director_primer_cognom as string,",
						"          director_segon_cognom as string,",
						"          adaptada as boolean,",
						"          observacions as string,",
						"          obs_itineraris as string,",
						"          data_alta as timestamp,",
						"          id_usuari_alta as integer,",
						"          data_modif as timestamp,",
						"          id_usuari_modif as integer,",
						"          data_baixa as timestamp,",
						"          id_usuari_baixa as integer,",
						"          id_adscripcio as integer,",
						"          id_categoria_esp as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGBiblioteques",
						"STGBiblioteques sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_BIBLIOTECA = id_biblioteca,",
						"          ID_USUARI = id_usuari,",
						"          CODI_BIBLIOTECA = codi,",
						"          ID_TIPUS = id_tipus,",
						"          ID_MODUL = id_modul,",
						"          CODI_NIDEN = niden,",
						"          ID_ESTAT = id_estat,",
						"          DESC_BIBLIOTECA = denominacio,",
						"          DATA_ALTA_BIBLIO = data_alta_biblio,",
						"          DATA_BAIXA_BIBLIO = data_baixa_biblio,",
						"          ID_TIPUS_VIA = id_tipus_via,",
						"          DESC_VIA = nom_via,",
						"          NUM_VIA = numero_via,",
						"          INE_MUNICIPI = ine_municipi,",
						"          ID_DISTRICTE = id_districte,",
						"          CP = cp,",
						"          UTMX = utmx,",
						"          UTMY = utmy,",
						"          NUM_LONGITUD = longitud,",
						"          NUM_LATITUD = latitud,",
						"          NUM_TELEFON = telefon,",
						"          NUM_EXTENSIO = extensio,",
						"          NUM_FAX = fax,",
						"          DESC_EMAIL = email,",
						"          DESC_WEB = web,",
						"          FLAG_BEG = beg,",
						"          FLAG_SLPC = slpc,",
						"          ID_MAPA = id_mapa,",
						"          ID_CATEGORIA = id_categoria,",
						"          ID_TITULARITAT = id_titularitat,",
						"          ID_FORMA_ACCES = id_forma_acces,",
						"          ES_CATALEG_COLECTIU_CCLP = es_cataleg_colectiu_cclp,",
						"          WEB_CATALEG_COLECTIU_CCLP = web_cataleg_colectiu_cclp,",
						"          ES_CATALEG_COLECTIU_DIP_BCN = es_cataleg_colectiu_dip_bcn,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN = web_cataleg_colectiu_dip_bcn,",
						"          ES_CATALEG_COLECTIU_CCUC = es_cataleg_colectiu_ccuc,",
						"          WEB_CATALEG_COLECTIU_CCUC = web_cataleg_colectiu_ccuc,",
						"          ES_CATALEG_COLECTIU_BEG = es_cataleg_colectiu_beg,",
						"          WEB_CATALEG_COLECTIU_BEG = web_cataleg_colectiu_beg,",
						"          ES_CATALEG_COLECTIU_ALTRES = es_cataleg_colectiu_altres,",
						"          WEB_CATALEG_COLECTIU_ALTRES = web_cataleg_colectiu_altres,",
						"          ID_DIRECTOR_TRACTAMENT = id_director_tractament,",
						"          DESC_DIRECTOR_NOMB = director_nom,",
						"          DESC_DIRECTOR_PRIMER_COGNOM = director_primer_cognom,",
						"          DESC_DIRECTOR_SEGON_COGNOM = director_segon_cognom,",
						"          FLAG_ADAPTADA = adaptada,",
						"          DESC_OBSERVACIONS = observacions,",
						"          OBS_ITINERARIS = obs_itineraris,",
						"          DATA_ALTA = data_alta,",
						"          ID_USUARI_ALTA = id_usuari_alta,",
						"          DATA_MODIF = data_modif,",
						"          ID_USUARI_MODIF = id_usuari_modif,",
						"          DATA_BAIXA = data_baixa,",
						"          ID_USUARI_BAIXA = id_usuari_baixa,",
						"          ID_ADSCRIPCIO = id_adscripcio,",
						"          ID_CATEGORIA_ESP = id_categoria_esp",
						"     )) ~> DMBiblioteques"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_BIBLIOTEQUES_DIBICA')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_DIBICA_BIBLIOTEQUES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_CATEGORIA_ESP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_DIB_DIM_CATEGORIA_ESP",
								"type": "DatasetReference"
							},
							"name": "STGDimCategoriaEsp"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_DIB_DIM_CATEGORIA_ESP",
								"type": "DatasetReference"
							},
							"name": "DMDimCategoriaEsp"
						}
					],
					"transformations": [
						{
							"name": "RenombrarCampos"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_categoria_esp as integer,",
						"          desc_categoria_esp as string,",
						"          data_alta as timestamp,",
						"          id_usuari_alta as integer,",
						"          data_modif as timestamp,",
						"          id_usuari_modif as integer,",
						"          data_baixa as timestamp,",
						"          id_usuari_baixa as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGDimCategoriaEsp",
						"STGDimCategoriaEsp select(mapColumn(",
						"          ID_CATEGORIA_ESP = id_categoria_esp,",
						"          DESC_CATEGORIA_ESP = desc_categoria_esp,",
						"          DATA_ALTA = data_alta,",
						"          ID_USUARI_ALTA = id_usuari_alta,",
						"          DATA_MODIF = data_modif,",
						"          ID_USUARI_MODIF = id_usuari_modif,",
						"          DATA_BAIXA = data_baixa,",
						"          ID_USUARI_BAIXA = id_usuari_baixa",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenombrarCampos",
						"RenombrarCampos sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMDimCategoriaEsp"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_DIB_DIM_CATEGORIA_ESP')]",
				"[concat(variables('factoryId'), '/datasets/DM_DIB_DIM_CATEGORIA_ESP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_DICC_LLOCS_TREBALL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_DIB_DICC_LLOCS_TREBALL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_DIB_DIM_DICC_LLOCS_TREBALL",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_DIB_DICC_LLOCS_TREBALL')]",
				"[concat(variables('factoryId'), '/datasets/DM_DIB_DIM_DICC_LLOCS_TREBALL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_DICC_TRACTAMENTS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_DIB_DIM_DICC_TRACTAMENTS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_DIB_DIM_DICC_TRACTAMENTS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_DIB_DIM_DICC_TRACTAMENTS')]",
				"[concat(variables('factoryId'), '/datasets/DM_DIB_DIM_DICC_TRACTAMENTS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_HORARIS_HIVERN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_HORARIS_HIVERN_DIBICA",
								"type": "DatasetReference"
							},
							"name": "STGHorarisHivern"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_DIBICA_HORARIS_HIVERN",
								"type": "DatasetReference"
							},
							"name": "DMHorarisHivern"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          id_horari_hivern as integer,",
						"          id_biblioteca as integer,",
						"          dl_mati_ini as string,",
						"          dl_mati_fi as string,",
						"          dl_tarda_ini as string,",
						"          dl_tarda_fi as string,",
						"          dt_mati_ini as string,",
						"          dt_mati_fi as string,",
						"          dt_tarda_ini as string,",
						"          dt_tarda_fi as string,",
						"          dc_mati_ini as string,",
						"          dc_mati_fi as string,",
						"          dc_tarda_ini as string,",
						"          dc_tarda_fi as string,",
						"          dj_mati_ini as string,",
						"          dj_mati_fi as string,",
						"          dj_tarda_ini as string,",
						"          dj_tarda_fi as string,",
						"          dv_mati_ini as string,",
						"          dv_mati_fi as string,",
						"          dv_tarda_ini as string,",
						"          dv_tarda_fi as string,",
						"          ds_mati_ini as string,",
						"          ds_mati_fi as string,",
						"          ds_tarda_ini as string,",
						"          ds_tarda_fi as string,",
						"          dg_mati_ini as string,",
						"          dg_mati_fi as string,",
						"          dg_tarda_ini as string,",
						"          dg_tarda_fi as string,",
						"          resum as string,",
						"          observacions as string,",
						"          data_alta as timestamp,",
						"          id_usuari_alta as integer,",
						"          data_modif as timestamp,",
						"          id_usuari_modif as integer,",
						"          data_baixa as timestamp,",
						"          id_usuari_baixa as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGHorarisHivern",
						"STGHorarisHivern sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_HORARI_HIVERN as integer,",
						"          ID_BIBLIOTECA as integer,",
						"          NUM_DL_MATI_INI as string,",
						"          NUM_DL_MATI_FI as string,",
						"          NUM_DL_TARDA_INI as string,",
						"          NUM_DL_TARDA_FI as string,",
						"          NUM_DT_MATI_INI as string,",
						"          NUM_DT_MATI_FI as string,",
						"          NUM_DT_TARDA_INI as string,",
						"          NUM_DT_TARDA_FI as string,",
						"          NUM_DC_MATI_INI as string,",
						"          NUM_DC_MATI_FI as string,",
						"          NUM_DC_TARDA_INI as string,",
						"          NUM_DC_TARDA_FI as string,",
						"          NUM_DJ_MATI_INI as string,",
						"          NUM_DJ_MATI_FI as string,",
						"          NUM_DJ_TARDA_INI as string,",
						"          NUM_DJ_TARDA_FI as string,",
						"          NUM_DV_MATI_INI as string,",
						"          NUM_DV_MATI_FI as string,",
						"          NUM_DV_TARDA_INI as string,",
						"          NUM_DV_TARDA_FI as string,",
						"          NUM_DS_MATI_INI as string,",
						"          NUM_DS_MATI_FI as string,",
						"          NUM_DS_TARDA_INI as string,",
						"          NUM_DS_TARDA_FI as string,",
						"          NUM_DG_MATI_INI as string,",
						"          NUM_DG_MATI_FI as string,",
						"          NUM_DG_TARDA_INI as string,",
						"          NUM_DG_TARDA_FI as string,",
						"          DESC_RESUM as string,",
						"          DESC_OBSERVACIONS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_HORARI_HIVERN = id_horari_hivern,",
						"          ID_BIBLIOTECA = id_biblioteca,",
						"          NUM_DL_MATI_INI = dl_mati_ini,",
						"          NUM_DL_MATI_FI = dl_mati_fi,",
						"          NUM_DL_TARDA_INI = dl_tarda_ini,",
						"          NUM_DL_TARDA_FI = dl_tarda_fi,",
						"          NUM_DT_MATI_INI = dt_mati_ini,",
						"          NUM_DT_MATI_FI = dt_mati_fi,",
						"          NUM_DT_TARDA_INI = dt_tarda_ini,",
						"          NUM_DT_TARDA_FI = dt_tarda_fi,",
						"          NUM_DC_MATI_INI = dc_mati_ini,",
						"          NUM_DC_MATI_FI = dc_mati_fi,",
						"          NUM_DC_TARDA_INI = dc_tarda_ini,",
						"          NUM_DC_TARDA_FI = dc_tarda_fi,",
						"          NUM_DJ_MATI_INI = dj_mati_ini,",
						"          NUM_DJ_MATI_FI = dj_mati_fi,",
						"          NUM_DJ_TARDA_INI = dj_tarda_ini,",
						"          NUM_DJ_TARDA_FI = dj_tarda_fi,",
						"          NUM_DV_MATI_INI = dv_mati_ini,",
						"          NUM_DV_MATI_FI = dv_mati_fi,",
						"          NUM_DV_TARDA_INI = dv_tarda_ini,",
						"          NUM_DV_TARDA_FI = dv_tarda_fi,",
						"          NUM_DS_MATI_INI = ds_mati_ini,",
						"          NUM_DS_MATI_FI = ds_mati_fi,",
						"          NUM_DS_TARDA_INI = ds_tarda_ini,",
						"          NUM_DS_TARDA_FI = ds_tarda_fi,",
						"          NUM_DG_MATI_INI = dg_mati_ini,",
						"          NUM_DG_MATI_FI = dg_mati_fi,",
						"          NUM_DG_TARDA_INI = dg_tarda_ini,",
						"          NUM_DG_TARDA_FI = dg_tarda_fi,",
						"          DESC_RESUM = resum,",
						"          DESC_OBSERVACIONS = observacions,",
						"          DATA_ALTA = data_alta,",
						"          ID_USUARI_ALTA = id_usuari_alta,",
						"          DATA_MODIF = data_modif,",
						"          ID_USUARI_MODIF = id_usuari_modif,",
						"          DATA_BAIXA = data_baixa,",
						"          ID_USUARI_BAIXA = id_usuari_baixa",
						"     )) ~> DMHorarisHivern"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_DIM_HORARIS_HIVERN_DIBICA')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_DIBICA_HORARIS_HIVERN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_ROLS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_DIB_DIM_ROLS",
								"type": "DatasetReference"
							},
							"name": "STGRols"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_DIB_DIM_ROLS",
								"type": "DatasetReference"
							},
							"name": "DMRols"
						}
					],
					"transformations": [
						{
							"name": "FiltroRol"
						}
					],
					"scriptLines": [
						"source(output(",
						"          idRol as integer,",
						"          DESC_ROL as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGRols",
						"STGRols filter(in([1,4,5],idRol)) ~> FiltroRol",
						"FiltroRol sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMRols"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_DIB_DIM_ROLS')]",
				"[concat(variables('factoryId'), '/datasets/DM_DIB_DIM_ROLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_FACT_PRESTECS_ANUALS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_PRESTECS_ANUALS",
								"type": "DatasetReference"
							},
							"name": "ODSConsulta2"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "Bibliotecas"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DimIndicadors"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_PRESTECS_ANUALS",
								"type": "DatasetReference"
							},
							"name": "DMFactPrestecsAnuals"
						}
					],
					"transformations": [
						{
							"name": "Join"
						},
						{
							"name": "Select"
						},
						{
							"name": "NullsEnCero"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "join1"
						},
						{
							"name": "FiltroPrestecAnual"
						},
						{
							"name": "Datas"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Data_Carrega as string",
						"}",
						"source(output(",
						"          id_biblioteca as string,",
						"          codi_indicador as string,",
						"          valor as integer,",
						"          data_periode as date,",
						"          data_insercio as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSConsulta2",
						"source(output(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_AGENCY as string,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Bibliotecas",
						"source(output(",
						"          ID_INDICADOR as string,",
						"          CODI_INDICADOR as string,",
						"          DESC_INDICADOR as string,",
						"          DESC_COMO_CALCULAR as string,",
						"          FLAG_FITXER as string,",
						"          FLAG_PRESTECS as string,",
						"          FLAG_DATAENTRY as string,",
						"          FLAG_NO_PERIODICS as string,",
						"          FILA_LEVEL_1 as string,",
						"          FILA_LEVEL_2 as string,",
						"          FILA_LEVEL_3 as string,",
						"          FILA_LEVEL_4 as string,",
						"          FILA_LEVEL_5 as string,",
						"          COLUMNA_LEVEL_1 as string,",
						"          COLUMNA_LEVEL_2 as string,",
						"          ID_SECCIO as string,",
						"          IND_ORDRE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimIndicadors",
						"ODSConsulta2, join1 join(ODSConsulta2@id_biblioteca == ID_AGENCY",
						"     && ODSConsulta2@codi_indicador == DimIndicadors@CODI_INDICADOR,",
						"     joinType:'right',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Join",
						"Join select(mapColumn(",
						"          ID_AGENCY,",
						"          CODI_BIBLIOTECA,",
						"          CODI_INDICADOR = DimIndicadors@CODI_INDICADOR,",
						"          IND_VALOR = valor,",
						"          DATA_PERIODE = data_periode,",
						"          DATA_INSERCIO = data_insercio",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"Datas derive(IND_VALOR = iifNull(IND_VALOR,0)) ~> NullsEnCero",
						"NullsEnCero alterRow(upsertIf(true())) ~> AlterRow1",
						"Bibliotecas, FiltroPrestecAnual join(FLAG_PRESTECS == '1' && CODI_BIBLIOTECA == CODI_BIBLIOTECA,",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"DimIndicadors filter(in(['IND_7_21','IND_7_22','IND_7_23','IND_7_24','IND_7_25','IND_7_26'],CODI_INDICADOR)) ~> FiltroPrestecAnual",
						"Select derive(DATA_PERIODE = toDate(concat(toString(toInteger(substring($Data_Carrega,0,4))-1),'12','01'),'yyyyMMdd'),",
						"          DATA_INSERCIO = currentDate()) ~> Datas",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_PERIODE as date,",
						"          DATA_INSERCIO as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CODI_BIBLIOTECA','CODI_INDICADOR','DATA_PERIODE'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactPrestecsAnuals"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_PRESTECS_ANUALS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_PRESTECS_ANUALS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_NO_PERIODICS_A_DATA_ENTRY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMFactDataEntrySource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_DATA_ENTRY",
								"type": "DatasetReference"
							},
							"name": "DMFactDataEntrySink"
						}
					],
					"transformations": [
						{
							"name": "FiltrarMes"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Data_Carrega as string",
						"}",
						"source(output(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMFactDataEntrySource",
						"DMFactDataEntrySource filter(addMonths(toDate(concat($Data_Carrega,'01'),'yyyyMMdd'),-1) == DATA_PERIODE) ~> FiltrarMes",
						"FiltrarMes sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_BIBLIOTECA as string,",
						"          DATA_PERIODE as date,",
						"          IND_1_4 as double,",
						"          IND_2_1111 as double,",
						"          IND_2_1113 as double,",
						"          IND_2_1122 as double,",
						"          IND_2_113 as double,",
						"          IND_2_114 as double,",
						"          IND_2_115 as double,",
						"          IND_2_121 as double,",
						"          IND_2_122 as double,",
						"          IND_2_123 as double,",
						"          IND_2_2111 as double,",
						"          IND_2_2113 as double,",
						"          IND_2_2122 as double,",
						"          IND_2_213 as double,",
						"          IND_2_214 as double,",
						"          IND_2_215 as double,",
						"          IND_2_221 as double,",
						"          IND_2_222 as double,",
						"          IND_2_223 as double,",
						"          IND_2_4111 as double,",
						"          IND_2_4113 as double,",
						"          IND_2_4122 as double,",
						"          IND_2_413 as double,",
						"          IND_2_414 as double,",
						"          IND_2_415 as double,",
						"          IND_2_421 as double,",
						"          IND_2_422 as double,",
						"          IND_2_423 as double,",
						"          IND_2_5111 as double,",
						"          IND_2_5113 as double,",
						"          IND_2_5122 as double,",
						"          IND_2_513 as double,",
						"          IND_2_514 as double,",
						"          IND_2_515 as double,",
						"          IND_2_521 as double,",
						"          IND_2_522 as double,",
						"          IND_2_523 as double,",
						"          IND_2_71 as double,",
						"          IND_2_72 as double,",
						"          IND_2_73 as double,",
						"          IND_2_74 as double,",
						"          IND_4_111 as double,",
						"          IND_4_112 as double,",
						"          IND_4_122 as double,",
						"          IND_4_123 as double,",
						"          IND_4_21 as double,",
						"          IND_4_22 as double,",
						"          IND_4_31 as double,",
						"          IND_4_32 as double,",
						"          IND_5_1 as double,",
						"          IND_5_2 as double,",
						"          IND_5_3 as double,",
						"          IND_5_41 as double,",
						"          IND_5_42 as double,",
						"          IND_5_5 as double,",
						"          IND_5_6 as double,",
						"          IND_5_7 as double,",
						"          IND_5_8 as double,",
						"          IND_5_9 as double,",
						"          IND_6_4 as double,",
						"          IND_8_1311 as double,",
						"          IND_8_1312 as double,",
						"          IND_8_132 as double,",
						"          IND_8_1411 as double,",
						"          IND_8_1412 as double,",
						"          IND_8_142 as double,",
						"          IND_8_1511 as double,",
						"          IND_8_1512 as double,",
						"          IND_8_152 as double,",
						"          IND_8_2311 as double,",
						"          IND_8_2312 as double,",
						"          IND_8_232 as double,",
						"          IND_8_2411 as double,",
						"          IND_8_2412 as double,",
						"          IND_8_242 as double,",
						"          IND_8_2511 as double,",
						"          IND_8_2512 as double,",
						"          IND_8_252 as double,",
						"          IND_8_311 as double,",
						"          IND_8_312 as double,",
						"          IND_8_313 as double,",
						"          IND_8_321 as double,",
						"          IND_8_322 as double,",
						"          IND_8_323 as double,",
						"          IND_9_2 as double,",
						"          IND_9_011 as double,",
						"          IND_9_012 as double,",
						"          IND_9_013 as double,",
						"          IND_9_015 as double,",
						"          IND_9_016 as double,",
						"          IND_9_020 as double,",
						"          IND_9_0223 as double,",
						"          IND_9_0231 as double,",
						"          IND_9_0232 as double,",
						"          IND_9_0233 as double,",
						"          IND_9_02411 as double,",
						"          IND_9_02412 as double,",
						"          IND_9_02413 as double,",
						"          IND_9_02421 as double,",
						"          IND_9_02422 as double,",
						"          IND_9_02423 as double,",
						"          IND_9_025 as double,",
						"          IND_9_026 as double,",
						"          IND_10_11 as double,",
						"          IND_10_13 as double,",
						"          IND_10_14 as double,",
						"          IND_10_15 as double,",
						"          IND_10_1613 as double,",
						"          IND_10_1614 as double,",
						"          IND_10_1615 as double,",
						"          IND_10_162 as double,",
						"          IND_10_17 as double,",
						"          IND_10_18 as double,",
						"          IND_10_21 as double,",
						"          IND_10_24 as double,",
						"          IND_10_25 as double,",
						"          IND_10_2612 as double,",
						"          IND_10_2613 as double,",
						"          IND_10_2614 as double,",
						"          IND_10_2615 as double,",
						"          IND_10_262 as double,",
						"          IND_10_27 as double,",
						"          IND_10_28 as double,",
						"          IND_11_11 as double,",
						"          IND_11_12 as double,",
						"          IND_11_13 as double,",
						"          IND_11_14 as double,",
						"          IND_11_15 as double,",
						"          IND_11_51 as double,",
						"          IND_11_52 as double,",
						"          IND_11_53 as double,",
						"          IND_11_54 as double,",
						"          IND_11_55 as double,",
						"          IND_16_1 as double,",
						"          IND_16_2 as double,",
						"          IND_16_3 as double,",
						"          IND_16_51 as double,",
						"          IND_16_52 as double,",
						"          IND_16_53 as double,",
						"          IND_16_54 as double,",
						"          IND_16_61 as double,",
						"          IND_16_62 as double,",
						"          IND_16_63 as double,",
						"          IND_16_64 as double,",
						"          IND_16_7 as double,",
						"          IND_16_8 as double,",
						"          IND_17_1 as double,",
						"          IND_17_2 as double,",
						"          IND_17_3 as double,",
						"          IND_19_1 as double,",
						"          IND_19_2 as double,",
						"          IND_19_3 as double,",
						"          IND_19_4 as double,",
						"          IND_19_5 as double,",
						"          IND_20_1 as double,",
						"          IND_20_2 as double,",
						"          IND_20_3 as double,",
						"          IND_20_4 as double,",
						"          IND_20_5 as double,",
						"          IND_21_1 as double,",
						"          IND_21_2 as double,",
						"          IND_21_3 as double,",
						"          IND_21_4 as double,",
						"          IND_5_10 as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactDataEntrySink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_DATA_ENTRY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_ALTES_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_ALTES_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "STGFactAltesBibliografics"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "DimLocations"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMDimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesBibliografics"
						}
					],
					"transformations": [
						{
							"name": "CalcularIndicadores"
						},
						{
							"name": "CambiarNombre"
						},
						{
							"name": "EliminarColumnas"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "QuitarNulos"
						},
						{
							"name": "Join"
						},
						{
							"name": "SelectLocation"
						},
						{
							"name": "ConvierteNullEnCero"
						},
						{
							"name": "join1"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{a  Llibre} as string,\n\t\t{b  Revista} as string,\n\t\t{c  Partitura impr.} as string,\n\t\t{d  Partitura manus.} as string,\n\t\t{e  Mapa imprès} as string,\n\t\t{f  Mapa manuscrit} as string,\n\t\t{g  Vídeo DVD} as string,\n\t\t{i  Sonor no musical} as string,\n\t\t{j  Sonor musical} as string,\n\t\t{k  Gràfic} as string,\n\t\t{l  Article} as string,\n\t\t{m  Fitxer informàtic} as string,\n\t\t{n  Tesi} as string,\n\t\t{o  Equip} as string,\n\t\t{p  Material d'arxiu} as string,\n\t\t{r  Objecte} as string,\n\t\t{t  Manuscrit} as string,\n\t\t{u  Base de dades} as string,\n\t\t{v  Revista en línia} as string,\n\t\t{z  Llibre en línia} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactAltesBibliografics\nsource(output(\n\t\tID_LOCATION as string,\n\t\tID_TERMINAL as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimLocations\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimBiblioteques\nQuitarNulos derive(IND_3_91 = toInteger(toInteger(replace(trim({a  Llibre}),'.',''))+toInteger(replace(trim({z  Llibre en línia}),'.',''))),\n\t\tIND_3_92 = toInteger(toInteger(replace(trim({i  Sonor no musical}),'.',''))+toInteger(replace(trim({j  Sonor musical}),'.',''))),\n\t\tIND_3_93 = toInteger(replace(trim({g  Vídeo DVD}),'.','')),\n\t\tIND_3_94 = toInteger(replace(trim({m  Fitxer informàtic}),'.','')),\n\t\tIND_3_95 = toInteger(replace(trim({b  Revista}),'.',''))+toInteger(replace(trim({v  Revista en línia}),'.','')),\n\t\tIND_3_96 = toInteger(replace(trim({c  Partitura impr.}),'.',''))+toInteger(replace(trim({d  Partitura manus.}),'.','')),\n\t\tIND_3_97 = toInteger(replace(trim({e  Mapa imprès}),'.',''))+toInteger(replace(trim({f  Mapa manuscrit}),'.','')),\n\t\tIND_3_99 = toInteger(replace(trim({o  Equip}),'.','')),\n\t\tIND_3_910 = toInteger(replace(trim({p  Material darxiu}),'.','')),\n\t\tIND_3_9011 = toInteger(replace(trim({r  Objecte}),'.',''))+toInteger(replace(trim({k  Gràfic}),'.','')),\n\t\tIND_3_9012 = toInteger(replace(trim({t  Manuscrit}),'.','')),\n\t\tIND_3_9013 = toInteger(replace(trim({l  Article}),'.','')),\n\t\tIND_3_9014 = toInteger(replace(trim({n  Tesi}),'.','')),\n\t\tIND_3_9015 = toInteger(replace(trim({u  Base de dades}),'.',''))) ~> CalcularIndicadores\njoin1 select(mapColumn(\n\t\tSignificat,\n\t\t{a  Llibre},\n\t\t{b  Revista},\n\t\t{c  Partitura impr.},\n\t\t{d  Partitura manus.},\n\t\t{e  Mapa imprès},\n\t\t{f  Mapa manuscrit},\n\t\t{g  Vídeo DVD},\n\t\t{i  Sonor no musical},\n\t\t{j  Sonor musical},\n\t\t{k  Gràfic},\n\t\t{l  Article},\n\t\t{m  Fitxer informàtic},\n\t\t{n  Tesi},\n\t\t{o  Equip},\n\t\t{p  Material darxiu} = {p  Material d'arxiu},\n\t\t{r  Objecte},\n\t\t{t  Manuscrit},\n\t\t{u  Base de dades},\n\t\t{v  Revista en línia},\n\t\t{z  Llibre en línia},\n\t\tCODI_BIBLIOTECA = DMDimBiblioteques@CODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CambiarNombre\nCalcularIndicadores select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tIND_3_91,\n\t\tIND_3_92,\n\t\tIND_3_93,\n\t\tIND_3_94,\n\t\tIND_3_95,\n\t\tIND_3_96,\n\t\tIND_3_97,\n\t\tIND_3_99,\n\t\tIND_3_910,\n\t\tIND_3_9011,\n\t\tIND_3_9012,\n\t\tIND_3_9013,\n\t\tIND_3_9014,\n\t\tIND_3_9015\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EliminarColumnas\nEliminarColumnas unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nConvierteNullEnCero derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nCambiarNombre derive({a  Llibre} = iif(isNull({a  Llibre}), toString(0), {a  Llibre}),\n\t\t{b  Revista} = iif(isNull({b  Revista}), toString(0), {b  Revista}),\n\t\t{c  Partitura impr.} = iif(isNull({c  Partitura impr.}), toString(0), {c  Partitura impr.}),\n\t\t{d  Partitura manus.} = iif(isNull({d  Partitura manus.}), toString(0), {d  Partitura manus.}),\n\t\t{e  Mapa imprès} = iif(isNull({e  Mapa imprès}), toString(0), {e  Mapa imprès}),\n\t\t{f  Mapa manuscrit} = iif(isNull({f  Mapa manuscrit}), toString(0), {f  Mapa manuscrit}),\n\t\t{g  Vídeo, DVD} = iif(isNull({g  Vídeo DVD}), toString(0), {g  Vídeo DVD}),\n\t\t{i  Sonor no musical} = iif(isNull({i  Sonor no musical}), toString(0), {i  Sonor no musical}),\n\t\t{j  Sonor musical} = iif(isNull({j  Sonor musical}), toString(0), {j  Sonor musical}),\n\t\t{k  Gràfic} = iif(isNull({k  Gràfic}), toString(0), {k  Gràfic}),\n\t\t{l  Article} = iif(isNull({l  Article}), toString(0), {l  Article}),\n\t\t{m  Fitxer informàtic} = iif(isNull({m  Fitxer informàtic}), toString(0), {m  Fitxer informàtic}),\n\t\t{n  Tesi, TFC, etc.} = iif(isNull({n  Tesi}), toString(0), {n  Tesi}),\n\t\t{o  Equip} = iif(isNull({o  Equip}), toString(0), {o  Equip}),\n\t\t{p  Material darxiu} = iif(isNull({p  Material darxiu}), toString(0), {p  Material darxiu}),\n\t\t{r  Objecte} = iif(isNull({r  Objecte}), toString(0), {r  Objecte}),\n\t\t{t  Manuscrit} = iif(isNull({t  Manuscrit}), toString(0), {t  Manuscrit}),\n\t\t{u  Base de dades} = iif(isNull({u  Base de dades}), toString(0), {u  Base de dades}),\n\t\t{v  Revista en línia} = iif(isNull({v  Revista en línia}), toString(0), {v  Revista en línia}),\n\t\t{z  Llibre en línia} = iif(isNull({z  Llibre en línia}), toString(0), {z  Llibre en línia})) ~> QuitarNulos\nSTGFactAltesBibliografics, SelectLocation join(Codi == ID_LOCATION,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nDimLocations select(mapColumn(\n\t\tID_LOCATION,\n\t\tCODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLocation\nUnpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> ConvierteNullEnCero\nJoin, DMDimBiblioteques join(SelectLocation@CODI_BIBLIOTECA == DMDimBiblioteques@CODI_BIBLIOTECA,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS1FactAltesBibliografics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_LOCATIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_ALTES_BIBLIOGRAFICS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_ALTES_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_ALTES_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "STGFactAltesExemplars"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesExemplars"
						}
					],
					"transformations": [
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "Datas"
						},
						{
							"name": "EliminarColumnas"
						},
						{
							"name": "Join"
						},
						{
							"name": "SelectAgency"
						},
						{
							"name": "ConvierteNullEnCero"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{4  Llibre prestable } as string,\n\t\t{14  Revista prestable} as string,\n\t\t{24  Sonor prestable} as string,\n\t\t{34  Vídeo prestable} as string,\n\t\t{44  Electrònic prestable} as string,\n\t\t{54  Gràfic prestable} as string,\n\t\t{64  Mapa prestable} as string,\n\t\t{74  Partitura prestable} as string,\n\t\t{84  Altre material prestable} as string,\n\t\t{99  Temari oposicions} as string,\n\t\t{100  Llibre no prestable} as string,\n\t\t{110  Revista no prestable} as string,\n\t\t{120  Sonor no prestable} as string,\n\t\t{130  Vídeo no prestable} as string,\n\t\t{140  Electrònic no prestable} as string,\n\t\t{150  Gràfic no prestable} as string,\n\t\t{160  Mapa no prestable} as string,\n\t\t{170  Partitura no prestable} as string,\n\t\t{173  Manuscrit no prestable} as string,\n\t\t{175  Microforma no prestable} as string,\n\t\t{180  Altre material no prestable} as string,\n\t\t{190  Analítica no prestable} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactAltesExemplars\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as string,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimBiblioteques\nJoin derive(IND_12_222 = toInteger(replace(trim({110  Revista no prestable}),'.','')),\n\t\tIND_12_223 = toInteger(replace(trim({100  Llibre no prestable}),'.','')),\n\t\tIND_12_224 = toInteger(replace(trim({173  Manuscrit no prestable}),'.','')),\n\t\tIND_12_225 = toInteger(replace(trim({120  Sonor no prestable}),'.','')),\n\t\tIND_12_226 = toInteger(replace(trim({130  Vídeo no prestable}),'.','')),\n\t\tIND_12_227 = toInteger(replace(trim({140  Electrònic no prestable}),'.','')),\n\t\tIND_12_228 = toInteger(replace(trim({160  Mapa no prestable}),'.','')),\n\t\tIND_12_229 = toInteger(replace(trim({150  Gràfic no prestable}),'.','')),\n\t\tIND_12_2210 = toInteger(replace(trim({170  Partitura no prestable}),'.','')),\n\t\tIND_12_22011 = toInteger(replace(trim({175  Microforma no prestable}),'.','')),\n\t\tIND_12_22012 = toInteger(replace(trim({180  Altre material no prestable}),'.','')),\n\t\tIND_12_212 = toInteger(replace(trim({14  Revista prestable}),'.','')),\n\t\tIND_12_213 = toInteger(replace(trim({4  Llibre prestable }),'.','')),\n\t\tIND_12_215 = toInteger(replace(trim({24  Sonor prestable}),'.','')),\n\t\tIND_12_216 = toInteger(replace(trim({34  Vídeo prestable}),'.','')),\n\t\tIND_12_217 = toInteger(replace(trim({44  Electrònic prestable}),'.','')),\n\t\tIND_12_218 = toInteger(replace(trim({64  Mapa prestable}),'.','')),\n\t\tIND_12_219 = toInteger(replace(trim({54  Gràfic prestable}),'.','')),\n\t\tIND_12_2110 = toInteger(replace(trim({74  Partitura prestable}),'.','')),\n\t\tIND_12_21012 = toInteger(replace(trim({84  Altre material prestable}),'.','')) + toInteger(replace(trim({99  Temari oposicions}),'.',''))) ~> CrearIndicadores\nEliminarColumnas unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nConvierteNullEnCero derive(DATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd'),\n\t\tDATA_INSERCIO = currentDate()) ~> Datas\nCrearIndicadores select(mapColumn(\n\t\tIND_12_222,\n\t\tIND_12_223,\n\t\tIND_12_224,\n\t\tIND_12_225,\n\t\tIND_12_226,\n\t\tIND_12_227,\n\t\tIND_12_228,\n\t\tIND_12_229,\n\t\tIND_12_2210,\n\t\tIND_12_22011,\n\t\tIND_12_22012,\n\t\tIND_12_212,\n\t\tIND_12_213,\n\t\tIND_12_215,\n\t\tIND_12_216,\n\t\tIND_12_217,\n\t\tIND_12_218,\n\t\tIND_12_219,\n\t\tIND_12_2110,\n\t\tIND_12_21012,\n\t\tCODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EliminarColumnas\nSTGFactAltesExemplars, SelectAgency join(Codi == ID_AGENCY,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nDimBiblioteques select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tID_AGENCY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAgency\nUnpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> ConvierteNullEnCero\nDatas sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_PERIODE as date,\n\t\tDATA_INSERCIO as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS1FactAltesExemplars"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_ALTES_EXEMPLARS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_ALTES_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_ALTES_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "STGFactTotalHoldings"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "DMDimLocations"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMDimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "ODSFactTotalHoldings"
						}
					],
					"transformations": [
						{
							"name": "CalcularIndicadores"
						},
						{
							"name": "BorrarColumnas"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "join1"
						},
						{
							"name": "SumaIndicadoresMismaBiblio"
						},
						{
							"name": "ConvierteNullEnCero"
						},
						{
							"name": "join2"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{-  Sense informar} as string,\n\t\t{0  Desconegut} as string,\n\t\t{1  Altres} as string,\n\t\t{2  Cessada} as string,\n\t\t{4  Es rep} as string,\n\t\t{5  No es rep} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTotalHoldings\nsource(output(\n\t\tID_LOCATION as string,\n\t\tID_TERMINAL as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimLocations\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimBiblioteques\njoin2 derive(IND_14_21 = toInteger(replace(trim({-  Sense informar}),'.','')),\n\t\tIND_14_22 = toInteger(replace(trim({0  Desconegut}),'.','')),\n\t\tIND_14_23 = toInteger(replace(trim({1  Altres}),'.','')),\n\t\tIND_14_24 = toInteger(replace(trim({2  Cessada}),'.','')),\n\t\tIND_14_25 = toInteger(replace(trim({4  Es rep}),'.','')),\n\t\tIND_14_26 = toInteger(replace(trim({5  No es rep}),'.',''))) ~> CalcularIndicadores\nCalcularIndicadores select(mapColumn(\n\t\tCODI_BIBLIOTECA = DMDimBiblioteques@CODI_BIBLIOTECA,\n\t\tIND_14_21,\n\t\tIND_14_22,\n\t\tIND_14_23,\n\t\tIND_14_24,\n\t\tIND_14_25,\n\t\tIND_14_26\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BorrarColumnas\nSumaIndicadoresMismaBiblio unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nConvierteNullEnCero derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nSTGFactTotalHoldings, DMDimLocations join(Codi == ID_LOCATION,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\nBorrarColumnas aggregate(groupBy(CODI_BIBLIOTECA),\n\tIND_14_21 = toInteger(sum(IND_14_21)),\n\t\tIND_14_22 = toInteger(sum(IND_14_22)),\n\t\tIND_14_23 = toInteger(sum(IND_14_23)),\n\t\tIND_14_24 = toInteger(sum(IND_14_24)),\n\t\tIND_14_25 = toInteger(sum(IND_14_25)),\n\t\tIND_14_26 = toInteger(sum(IND_14_26))) ~> SumaIndicadoresMismaBiblio\nUnpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> ConvierteNullEnCero\njoin1, DMDimBiblioteques join(DMDimLocations@CODI_BIBLIOTECA == DMDimBiblioteques@CODI_BIBLIOTECA,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join2\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSFactTotalHoldings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_HOLDINGS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_LOCATIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_ALTES_HOLDINGS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_ALTES_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_ALTES_USUARIS",
								"type": "DatasetReference"
							},
							"name": "STGFactAltesUsuaris"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "DimLocations"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMDimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_USUARIS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesUsuaris"
						}
					],
					"transformations": [
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "EliminarColumnas"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "Join"
						},
						{
							"name": "ConvierteNullEnCero"
						},
						{
							"name": "join1"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{10  General intern} as string,\n\t\t{11  Bad Code} as string,\n\t\t{20  General extern} as string,\n\t\t{25  BEG} as string,\n\t\t{30  Personal de la biblioteca} as string,\n\t\t{110  Institució interna} as string,\n\t\t{120  Institució externa} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactAltesUsuaris\nsource(output(\n\t\tID_LOCATION as string,\n\t\tID_TERMINAL as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimLocations\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimBiblioteques\njoin1 derive(IND_6_21 = toInteger(replace(trim({10  General intern}),'.','')),\n\t\tIND_6_22 = toInteger(replace(trim({20  General extern}),'.','')),\n\t\tIND_6_23 = toInteger(replace(trim({25  BEG}),'.','')),\n\t\tIND_6_24 = toInteger(replace(trim({30  Personal de la biblioteca}),'.','')),\n\t\tIND_6_25 = toInteger(replace(trim({110  Institució interna}),'.','')),\n\t\tIND_6_26 = toInteger(replace(trim({120  Institució externa}),'.',''))) ~> CrearIndicadores\nCrearIndicadores select(mapColumn(\n\t\tIND_6_21,\n\t\tIND_6_22,\n\t\tIND_6_23,\n\t\tIND_6_24,\n\t\tIND_6_25,\n\t\tIND_6_26,\n\t\tCODI_BIBLIOTECA = DMDimBiblioteques@CODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EliminarColumnas\nEliminarColumnas unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nConvierteNullEnCero derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nSTGFactAltesUsuaris, DimLocations join(Codi == ID_LOCATION,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nUnpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> ConvierteNullEnCero\nJoin, DMDimBiblioteques join(DimLocations@CODI_BIBLIOTECA == DMDimBiblioteques@CODI_BIBLIOTECA,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS1FactAltesUsuaris"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_LOCATIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_ALTES_USUARIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_PROCEDENCIA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
								"type": "DatasetReference"
							},
							"name": "STGProcedencia"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "AInteger"
						},
						{
							"name": "CrearIndicadorAltres"
						},
						{
							"name": "Select"
						},
						{
							"name": "join1"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "NullCero"
						},
						{
							"name": "Datas"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Data_Carrega as string",
						"}",
						"source(output(",
						"          Codi as string,",
						"          Significat as string,",
						"          {0} as string,",
						"          {-1} as string,",
						"          {-2} as string,",
						"          {-3} as string,",
						"          {-4} as string,",
						"          {-5} as string,",
						"          {-6} as string,",
						"          {-7} as string,",
						"          {-8} as string,",
						"          {-9} as string,",
						"          {-10} as string,",
						"          {-11} as string,",
						"          {-12} as string,",
						"          {-13} as string,",
						"          {-14} as string,",
						"          {-15} as string,",
						"          {-16} as string,",
						"          {-17} as string,",
						"          {-18} as string,",
						"          {-19} as string,",
						"          {-20} as string,",
						"          {-21} as string,",
						"          {-22} as string,",
						"          {-23} as string,",
						"          {  Totals  } as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT TOP (1000) [Codi]\\n      ,[-1]\\n      ,[-3]\\n      ,[-4]\\n      ,[-6]\\n      ,[-8]\\n      ,[-13]\\n      ,[  Totals  ]\\n  FROM [BEG_STG].[STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA]',",
						"     format: 'query') ~> STGProcedencia",
						"source(output(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_AGENCY as string,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimBiblioteques",
						"AInteger derive(each(match(name=='-1'), 'IND_18_2' = $$),",
						"          each(match(name=='-3'), 'IND_18_3' = $$),",
						"          each(match(name=='-4'), 'IND_18_4' = $$),",
						"          each(match(name=='-6'), 'IND_18_5' = $$),",
						"          each(match(name=='-8'), 'IND_18_6' = $$),",
						"          each(match(name=='-13'), 'IND_18_7' = $$)) ~> CrearIndicadores",
						"join1 derive({-1} = toInteger({-1}),",
						"          {-3} = toInteger({-3}),",
						"          {-4} = toInteger({-4}),",
						"          {-6} = toInteger({-6}),",
						"          {-8} = toInteger({-8}),",
						"          {-13} = toInteger({-13}),",
						"          {  Totals  } = toInteger({  Totals  })) ~> AInteger",
						"CrearIndicadores derive(IND_18_011 = {  Totals  }-IND_18_2-IND_18_3-IND_18_4-IND_18_5-IND_18_6-IND_18_7) ~> CrearIndicadorAltres",
						"CrearIndicadorAltres select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          IND_18_2,",
						"          IND_18_3,",
						"          IND_18_4,",
						"          IND_18_5,",
						"          IND_18_6,",
						"          IND_18_7,",
						"          IND_18_011",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"STGProcedencia, DimBiblioteques join(Codi == ID_AGENCY,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"Select unpivot(output(",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer",
						"     ),",
						"     ungroupBy(CODI_BIBLIOTECA),",
						"     lateral: true,",
						"     ignoreNullPivots: false) ~> Unpivot",
						"Unpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> NullCero",
						"NullCero derive(DATA_INSERCIO = currentDate(),",
						"          DATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> Datas",
						"Datas sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_PROCEDENCIA1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
								"type": "DatasetReference"
							},
							"name": "STGFactProcedencia"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
								"type": "DatasetReference"
							},
							"name": "ODS1Procedencia"
						}
					],
					"transformations": [
						{
							"name": "Join"
						},
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "EliminarColumnas"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "Datas"
						},
						{
							"name": "NullCero"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Data_Carrega as string",
						"}",
						"source(output(",
						"          Codi as string,",
						"          Significat as string,",
						"          {0} as string,",
						"          {-1} as string,",
						"          {-2} as string,",
						"          {-3} as string,",
						"          {-4} as string,",
						"          {-5} as string,",
						"          {-6} as string,",
						"          {-7} as string,",
						"          {-8} as string,",
						"          {-9} as string,",
						"          {-10} as string,",
						"          {-11} as string,",
						"          {-12} as string,",
						"          {-13} as string,",
						"          {-14} as string,",
						"          {-15} as string,",
						"          {-16} as string,",
						"          {-17} as string,",
						"          {-18} as string,",
						"          {-19} as string,",
						"          {-20} as string,",
						"          {-21} as string,",
						"          {-22} as string,",
						"          {-23} as string,",
						"          {  Totals  } as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGFactProcedencia",
						"source(output(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_AGENCY as string,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimBiblioteques",
						"STGFactProcedencia, DimBiblioteques join(Codi == ID_AGENCY,",
						"     joinType:'right',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Join",
						"Join derive(IND_18_2 = toInteger(replace(trim({-1}),'.','')),",
						"          IND_18_3 = toInteger(replace(trim({-3}),'.','')),",
						"          IND_18_4 = toInteger(replace(trim({-4}),'.','')),",
						"          IND_18_5 = toInteger(replace(trim({-6}),'.','')),",
						"          IND_18_6 = toInteger(replace(trim({-8}),'.','')),",
						"          IND_18_7 = toInteger(replace(trim({-13}),'.','')),",
						"          IND_18_011 = toInteger(replace(trim({-2}),'.',''))+toInteger(replace(trim({-5}),'.',''))+toInteger(replace(trim({-7}),'.',''))+toInteger(replace(trim({-9}),'.',''))+toInteger(replace(trim({-10}),'.',''))+toInteger(replace(trim({-11}),'.',''))+toInteger(replace(trim({-12}),'.',''))+toInteger(replace(trim({-14}),'.',''))+toInteger(replace(trim({-15}),'.',''))+toInteger(replace(trim({-16}),'.',''))+toInteger(replace(trim({-17}),'.',''))+toInteger(replace(trim({-18}),'.',''))+toInteger(replace(trim({-22}),'.',''))+toInteger(replace(trim({-23}),'.',''))) ~> CrearIndicadores",
						"CrearIndicadores select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          IND_18_2,",
						"          IND_18_3,",
						"          IND_18_4,",
						"          IND_18_5,",
						"          IND_18_6,",
						"          IND_18_7,",
						"          IND_18_011",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> EliminarColumnas",
						"EliminarColumnas unpivot(output(",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer",
						"     ),",
						"     ungroupBy(CODI_BIBLIOTECA),",
						"     lateral: true,",
						"     ignoreNullPivots: false) ~> Unpivot",
						"NullCero derive(DATA_INSERCIO = currentDate(),",
						"          DATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> Datas",
						"Unpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> NullCero",
						"Datas sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODS1Procedencia"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_TOTAL_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "STGFactAltesBibliografics"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "DimLocations"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTotalBibliografics"
						}
					],
					"transformations": [
						{
							"name": "CalcularIndicadores"
						},
						{
							"name": "CambiarNombre"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "Select"
						},
						{
							"name": "QuitarNulos"
						},
						{
							"name": "Join"
						},
						{
							"name": "join1"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{-  Bad Code} as string,\n\t\t{a  Llibre} as string,\n\t\t{b  Revista} as string,\n\t\t{c  Partitura impr.} as string,\n\t\t{d  Partitura manus.} as string,\n\t\t{e  Mapa imprès} as string,\n\t\t{f  Mapa manuscrit} as string,\n\t\t{g  Vídeo DVD} as string,\n\t\t{i  Sonor no musical} as string,\n\t\t{j  Sonor musical} as string,\n\t\t{k  Gràfic} as string,\n\t\t{l  Article} as string,\n\t\t{m  Fitxer informàtic} as string,\n\t\t{n  Tesi} as string,\n\t\t{o  Equip} as string,\n\t\t{p  Material d'arxiu} as string,\n\t\t{r  Objecte} as string,\n\t\t{t  Manuscrit} as string,\n\t\t{u  Base de dades} as string,\n\t\t{v  Revista en línia} as string,\n\t\t{z  Llibre en línia} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactAltesBibliografics\nsource(output(\n\t\tID_LOCATION as string,\n\t\tID_TERMINAL as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimLocations\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimBiblioteques\nQuitarNulos derive(IND_3_81 = toInteger(toInteger(replace(trim({a  Llibre}),'.',''))+toInteger(replace(trim({z  Llibre en línia}),'.',''))),\n\t\tIND_3_82 = toInteger(toInteger(replace(trim({i  Sonor no musical}),'.',''))+toInteger(replace(trim({j  Sonor musical}),'.',''))),\n\t\tIND_3_83 = toInteger(replace(trim({g  Vídeo DVD}),'.','')),\n\t\tIND_3_84 = toInteger(replace(trim({m  Fitxer informàtic}),'.','')),\n\t\tIND_3_85 = toInteger(replace(trim({b  Revista}),'.',''))+toInteger(replace(trim({v  Revista en línia}),'.','')),\n\t\tIND_3_86 = toInteger(replace(trim({c  Partitura impr.}),'.',''))+toInteger(replace(trim({d  Partitura manus.}),'.','')),\n\t\tIND_3_87 = toInteger(replace(trim({e  Mapa imprès}),'.',''))+toInteger(replace(trim({f  Mapa manuscrit}),'.','')),\n\t\tIND_3_89 = toInteger(replace(trim({o  Equip}),'.','')),\n\t\tIND_3_810 = toInteger(replace(trim({p  Material darxiu}),'.','')),\n\t\tIND_3_8011 = toInteger(replace(trim({r  Objecte}),'.',''))+toInteger(replace(trim({k  Gràfic}),'.','')),\n\t\tIND_3_8012 = toInteger(replace(trim({t  Manuscrit}),'.','')),\n\t\tIND_3_8013 = toInteger(replace(trim({l  Article}),'.','')),\n\t\tIND_3_8014 = toInteger(replace(trim({n  Tesi}),'.','')),\n\t\tIND_3_8015 = toInteger(replace(trim({u  Base de dades}),'.',''))) ~> CalcularIndicadores\njoin1 select(mapColumn(\n\t\tSignificat,\n\t\t{a  Llibre},\n\t\t{b  Revista},\n\t\t{c  Partitura impr.},\n\t\t{d  Partitura manus.},\n\t\t{e  Mapa imprès},\n\t\t{f  Mapa manuscrit},\n\t\t{g  Vídeo DVD},\n\t\t{i  Sonor no musical},\n\t\t{j  Sonor musical},\n\t\t{k  Gràfic},\n\t\t{l  Article},\n\t\t{m  Fitxer informàtic},\n\t\t{n  Tesi},\n\t\t{o  Equip},\n\t\t{p  Material darxiu} = {p  Material d'arxiu},\n\t\t{r  Objecte},\n\t\t{t  Manuscrit},\n\t\t{u  Base de dades},\n\t\t{v  Revista en línia},\n\t\t{z  Llibre en línia},\n\t\tCODI_BIBLIOTECA = DimBiblioteques@CODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CambiarNombre\nSelect unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nUnpivot derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nCalcularIndicadores select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tIND_3_81,\n\t\tIND_3_82,\n\t\tIND_3_83,\n\t\tIND_3_84,\n\t\tIND_3_85,\n\t\tIND_3_86,\n\t\tIND_3_87,\n\t\tIND_3_89,\n\t\tIND_3_810,\n\t\tIND_3_8011,\n\t\tIND_3_8012,\n\t\tIND_3_8013,\n\t\tIND_3_8014,\n\t\tIND_3_8015\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nCambiarNombre derive({a  Llibre} = iif(isNull({a  Llibre}), toString(0), {a  Llibre}),\n\t\t{b  Revista} = iif(isNull({b  Revista}), toString(0), {b  Revista}),\n\t\t{c  Partitura impr.} = iif(isNull({c  Partitura impr.}), toString(0), {c  Partitura impr.}),\n\t\t{d  Partitura manus.} = iif(isNull({d  Partitura manus.}), toString(0), {d  Partitura manus.}),\n\t\t{e  Mapa imprès} = iif(isNull({e  Mapa imprès}), toString(0), {e  Mapa imprès}),\n\t\t{f  Mapa manuscrit} = iif(isNull({f  Mapa manuscrit}), toString(0), {f  Mapa manuscrit}),\n\t\t{g  Vídeo, DVD} = iif(isNull({g  Vídeo DVD}), toString(0), {g  Vídeo DVD}),\n\t\t{i  Sonor no musical} = iif(isNull({i  Sonor no musical}), toString(0), {i  Sonor no musical}),\n\t\t{j  Sonor musical} = iif(isNull({j  Sonor musical}), toString(0), {j  Sonor musical}),\n\t\t{k  Gràfic} = iif(isNull({k  Gràfic}), toString(0), {k  Gràfic}),\n\t\t{l  Article} = iif(isNull({l  Article}), toString(0), {l  Article}),\n\t\t{m  Fitxer informàtic} = iif(isNull({m  Fitxer informàtic}), toString(0), {m  Fitxer informàtic}),\n\t\t{n  Tesi, TFC, etc.} = iif(isNull({n  Tesi}), toString(0), {n  Tesi}),\n\t\t{o  Equip} = iif(isNull({o  Equip}), toString(0), {o  Equip}),\n\t\t{p  Material darxiu} = iif(isNull({p  Material darxiu}), toString(0), {p  Material darxiu}),\n\t\t{r  Objecte} = iif(isNull({r  Objecte}), toString(0), {r  Objecte}),\n\t\t{t  Manuscrit} = iif(isNull({t  Manuscrit}), toString(0), {t  Manuscrit}),\n\t\t{u  Base de dades} = iif(isNull({u  Base de dades}), toString(0), {u  Base de dades}),\n\t\t{v  Revista en línia} = iif(isNull({v  Revista en línia}), toString(0), {v  Revista en línia}),\n\t\t{z  Llibre en línia} = iif(isNull({z  Llibre en línia}), toString(0), {z  Llibre en línia})) ~> QuitarNulos\nSTGFactAltesBibliografics, DimLocations join(Codi == ID_LOCATION,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nJoin, DimBiblioteques join(DimLocations@CODI_BIBLIOTECA == DimBiblioteques@CODI_BIBLIOTECA,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS1FactTotalBibliografics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_LOCATIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TOTAL_BIBLIOGRAFICS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_TOTAL_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "STGFactTotalExemplars"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTotalExemplars"
						}
					],
					"transformations": [
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "EliminarColumnas"
						},
						{
							"name": "SelectAgency"
						},
						{
							"name": "Join"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{4  Llibre prestable } as string,\n\t\t{14  Revista prestable} as string,\n\t\t{24  Sonor prestable} as string,\n\t\t{34  Vídeo prestable} as string,\n\t\t{44  Electrònic prestable} as string,\n\t\t{54  Gràfic prestable} as string,\n\t\t{64  Mapa prestable} as string,\n\t\t{74  Partitura prestable} as string,\n\t\t{84  Altre material prestable} as string,\n\t\t{99  Temari oposicions} as string,\n\t\t{100  Llibre no prestable} as string,\n\t\t{110  Revista no prestable} as string,\n\t\t{120  Sonor no prestable} as string,\n\t\t{130  Vídeo no prestable} as string,\n\t\t{140  Electrònic no prestable} as string,\n\t\t{150  Gràfic no prestable} as string,\n\t\t{160  Mapa no prestable} as string,\n\t\t{170  Partitura no prestable} as string,\n\t\t{173  Manuscrit no prestable} as string,\n\t\t{175  Microforma no prestable} as string,\n\t\t{180  Altre material no prestable} as string,\n\t\t{190  Analítica no prestable} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTotalExemplars\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as string,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimBiblioteques\nJoin derive(IND_12_122 = toInteger(replace(trim({110  Revista no prestable}),'.','')),\n\t\tIND_12_123 = toInteger(replace(trim({100  Llibre no prestable}),'.','')),\n\t\tIND_12_124 = toInteger(replace(trim({173  Manuscrit no prestable}),'.','')),\n\t\tIND_12_125 = toInteger(replace(trim({120  Sonor no prestable}),'.','')),\n\t\tIND_12_126 = toInteger(replace(trim({130  Vídeo no prestable}),'.','')),\n\t\tIND_12_127 = toInteger(replace(trim({140  Electrònic no prestable}),'.','')),\n\t\tIND_12_128 = toInteger(replace(trim({160  Mapa no prestable}),'.','')),\n\t\tIND_12_129 = toInteger(replace(trim({150  Gràfic no prestable}),'.','')),\n\t\tIND_12_1210 = toInteger(replace(trim({170  Partitura no prestable}),'.','')),\n\t\tIND_12_12011 = toInteger(replace(trim({175  Microforma no prestable}),'.','')),\n\t\tIND_12_12012 = toInteger(replace(trim({180  Altre material no prestable}),'.','')),\n\t\tIND_12_112 = toInteger(replace(trim({14  Revista prestable}),'.','')),\n\t\tIND_12_113 = toInteger(replace(trim({4  Llibre prestable }),'.','')),\n\t\tIND_12_115 = toInteger(replace(trim({24  Sonor prestable}),'.','')),\n\t\tIND_12_116 = toInteger(replace(trim({34  Vídeo prestable}),'.','')),\n\t\tIND_12_117 = toInteger(replace(trim({44  Electrònic prestable}),'.','')),\n\t\tIND_12_118 = toInteger(replace(trim({64  Mapa prestable}),'.','')),\n\t\tIND_12_119 = toInteger(replace(trim({54  Gràfic prestable}),'.','')),\n\t\tIND_12_1110 = toInteger(replace(trim({74  Partitura prestable}),'.','')),\n\t\tIND_12_11012 = toInteger(replace(trim({84  Altre material prestable}),'.','')) + toInteger(replace(trim({99  Temari oposicions}),'.',''))) ~> CrearIndicadores\nEliminarColumnas unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nUnpivot derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nCrearIndicadores select(mapColumn(\n\t\tIND_12_122,\n\t\tIND_12_123,\n\t\tIND_12_124,\n\t\tIND_12_125,\n\t\tIND_12_126,\n\t\tIND_12_127,\n\t\tIND_12_128,\n\t\tIND_12_129,\n\t\tIND_12_1210,\n\t\tIND_12_12011,\n\t\tIND_12_12012,\n\t\tIND_12_112,\n\t\tIND_12_113,\n\t\tIND_12_115,\n\t\tIND_12_116,\n\t\tIND_12_117,\n\t\tIND_12_118,\n\t\tIND_12_119,\n\t\tIND_12_1110,\n\t\tIND_12_11012,\n\t\tCODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EliminarColumnas\nDimBiblioteques select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tID_AGENCY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAgency\nSTGFactTotalExemplars, SelectAgency join(Codi == ID_AGENCY,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS1FactTotalExemplars"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TOTAL_EXEMPLARS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_TOTAL_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "STGFactTotalHoldings"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "DMDimLocations"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "ODSFactTotalHoldings"
						}
					],
					"transformations": [
						{
							"name": "CalcularIndicadores"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "Join"
						},
						{
							"name": "Select"
						},
						{
							"name": "BorrarColumnas"
						},
						{
							"name": "SumaIndicadoresMismaBiblio"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{-  Sense informar} as string,\n\t\t{0  Desconegut} as string,\n\t\t{1  Altres} as string,\n\t\t{2  Cessada} as string,\n\t\t{4  Es rep} as string,\n\t\t{5  No es rep} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTotalHoldings\nsource(output(\n\t\tID_LOCATION as string,\n\t\tID_TERMINAL as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimLocations\nJoin derive(IND_14_11 = toInteger(replace(trim({-  Sense informar}),'.','')),\n\t\tIND_14_12 = toInteger(replace(trim({0  Desconegut}),'.','')),\n\t\tIND_14_13 = toInteger(replace(trim({1  Altres}),'.','')),\n\t\tIND_14_14 = toInteger(replace(trim({2  Cessada}),'.','')),\n\t\tIND_14_15 = toInteger(replace(trim({4  Es rep}),'.','')),\n\t\tIND_14_16 = toInteger(replace(trim({5  No es rep}),'.',''))) ~> CalcularIndicadores\nSumaIndicadoresMismaBiblio unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tVALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nUnpivot derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nSTGFactTotalHoldings, DMDimLocations join(Codi == ID_LOCATION,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nDataInsercio select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tCODI_INDICADOR,\n\t\tIND_VALOR = VALOR,\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nCalcularIndicadores select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tIND_14_11,\n\t\tIND_14_12,\n\t\tIND_14_13,\n\t\tIND_14_14,\n\t\tIND_14_15,\n\t\tIND_14_16\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BorrarColumnas\nBorrarColumnas aggregate(groupBy(CODI_BIBLIOTECA),\n\tIND_14_11 = toInteger(sum(IND_14_11)),\n\t\tIND_14_12 = toInteger(sum(IND_14_12)),\n\t\tIND_14_13 = toInteger(sum(IND_14_13)),\n\t\tIND_14_14 = toInteger(sum(IND_14_14)),\n\t\tIND_14_15 = toInteger(sum(IND_14_15)),\n\t\tIND_14_16 = toInteger(sum(IND_14_16))) ~> SumaIndicadoresMismaBiblio\nSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSFactTotalHoldings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_HOLDINGS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_LOCATIONS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TOTAL_HOLDINGS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_TOTAL_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_USUARIS",
								"type": "DatasetReference"
							},
							"name": "STGFactTotalUsuaris"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "DimLocations"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_USUARIS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTotalUsuaris"
						}
					],
					"transformations": [
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "EliminarColumnas"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "Join"
						},
						{
							"name": "join1"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{10  General intern} as string,\n\t\t{11  Bad Code} as string,\n\t\t{20  General extern} as string,\n\t\t{25  BEG} as string,\n\t\t{30  Personal de la biblioteca} as string,\n\t\t{110  Institució interna} as string,\n\t\t{120  Institució externa} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTotalUsuaris\nsource(output(\n\t\tID_LOCATION as string,\n\t\tID_TERMINAL as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimLocations\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimBiblioteques\njoin1 derive(IND_6_11 = toInteger(replace(trim({10  General intern}),'.','')),\n\t\tIND_6_12 = toInteger(replace(trim({20  General extern}),'.','')),\n\t\tIND_6_13 = toInteger(replace(trim({25  BEG}),'.','')),\n\t\tIND_6_14 = toInteger(replace(trim({30  Personal de la biblioteca}),'.','')),\n\t\tIND_6_15 = toInteger(replace(trim({110  Institució interna}),'.','')),\n\t\tIND_6_16 = toInteger(replace(trim({120  Institució externa}),'.',''))) ~> CrearIndicadores\nCrearIndicadores select(mapColumn(\n\t\tIND_6_11,\n\t\tIND_6_12,\n\t\tIND_6_13,\n\t\tIND_6_14,\n\t\tIND_6_15,\n\t\tIND_6_16,\n\t\tCODI_BIBLIOTECA = DimBiblioteques@CODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EliminarColumnas\nEliminarColumnas unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nUnpivot derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nSTGFactTotalUsuaris, DimLocations join(Codi == ID_LOCATION,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nJoin, DimBiblioteques join(DimLocations@CODI_BIBLIOTECA == DimBiblioteques@CODI_BIBLIOTECA,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS1FactTotalUsuaris"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_LOCATIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TOTAL_USUARIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_TRANSACCIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TRANSACCIONS",
								"type": "DatasetReference"
							},
							"name": "STGFactTransaccions"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERMINALS",
								"type": "DatasetReference"
							},
							"name": "DimTerminals"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMDimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TRANSACCIONS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTransaccions"
						}
					],
					"transformations": [
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "EliminarColumnas"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "Join"
						},
						{
							"name": "join1"
						},
						{
							"name": "ConvierteNullEnCero"
						},
						{
							"name": "Sumar"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\t{Grup estadístic} as string,\n\t\t{préstecs} as string,\n\t\tretorns as string,\n\t\trenovacions as string,\n\t\treserves as string,\n\t\t{Hl/RECLL} as string,\n\t\t{TOTAL #} as string,\n\t\tPERCENT as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTransaccions\nsource(output(\n\t\tID_TERMINAL as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimTerminals\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimBiblioteques\njoin1 derive(IND_13_1 = toInteger(replace(trim({préstecs}),'.','')),\n\t\tIND_13_2 = toInteger(replace(trim(retorns),'.','')),\n\t\tIND_13_3 = toInteger(replace(trim(renovacions),'.',''))) ~> CrearIndicadores\nCrearIndicadores select(mapColumn(\n\t\tIND_13_1,\n\t\tIND_13_2,\n\t\tIND_13_3,\n\t\tCODI_BIBLIOTECA = DMDimBiblioteques@CODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EliminarColumnas\nSumar unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nConvierteNullEnCero derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nSTGFactTransaccions, DimTerminals join({Grup estadístic} == ID_TERMINAL,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nJoin, DMDimBiblioteques join(DimTerminals@CODI_BIBLIOTECA == DMDimBiblioteques@CODI_BIBLIOTECA,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\nUnpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> ConvierteNullEnCero\nEliminarColumnas aggregate(groupBy(CODI_BIBLIOTECA),\n\tIND_13_1 = toInteger(sum(IND_13_1)),\n\t\tIND_13_2 = toInteger(sum(IND_13_2)),\n\t\tIND_13_3 = toInteger(sum(IND_13_3))) ~> Sumar\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS1FactTransaccions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TRANSACCIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_TERMINALS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TRANSACCIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS2_BEG_BAIXES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTotalBibliografics"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_USUARIS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTotalUsuaris"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTotalExemplars"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesBibliografics"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_USUARIS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesUsuaris"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesExemplars"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS2_BEG_FACT_INDICADORS_BASE",
								"type": "DatasetReference"
							},
							"name": "ODS2FactIndicadorsBase"
						}
					],
					"transformations": [
						{
							"name": "Union"
						}
					],
					"script": "source(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactTotalBibliografics\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactTotalUsuaris\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactTotalExemplars\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactAltesBibliografics\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactAltesUsuaris\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_PERIODE as date,\n\t\tDATA_INSERCIO as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactAltesExemplars\nODS1FactTotalBibliografics, ODS1FactTotalUsuaris, ODS1FactTotalExemplars, ODS1FactAltesBibliografics, ODS1FactAltesUsuaris, ODS1FactAltesExemplars union(byName: true)~> Union\nUnion sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS2FactIndicadorsBase"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TOTAL_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TOTAL_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TOTAL_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_ALTES_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_ALTES_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_ALTES_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/ODS2_BEG_FACT_INDICADORS_BASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS2_BEG_FACT_INDICADORS_BASE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesBibliografics"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_USUARIS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesUsuaris"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesExemplars"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTotalBibliografics"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_USUARIS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTotalUsuaris"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTotalExemplars"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTotalHoldings"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesHoldings"
						},
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_PRESTECS_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactPrestecs"
						},
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TRANSACCIONS",
								"type": "DatasetReference"
							},
							"name": "ODS1Transaccions"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMDimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS2_BEG_FACT_INDICADORS_BASE",
								"type": "DatasetReference"
							},
							"name": "ODS2FactIndicadorsBase"
						}
					],
					"transformations": [
						{
							"name": "Union"
						}
					],
					"script": "source(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactAltesBibliografics\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactAltesUsuaris\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_PERIODE as date,\n\t\tDATA_INSERCIO as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactAltesExemplars\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactTotalBibliografics\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactTotalUsuaris\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactTotalExemplars\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactTotalHoldings\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactAltesHoldings\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1FactPrestecs\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS1Transaccions\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimBiblioteques\nODS1FactAltesBibliografics, ODS1FactAltesUsuaris, ODS1FactAltesExemplars, ODS1FactTotalBibliografics, ODS1FactTotalUsuaris, ODS1FactTotalExemplars, ODS1FactTotalHoldings, ODS1FactAltesHoldings, ODS1Transaccions, ODS1FactPrestecs union(byName: true)~> Union\nUnion sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS2FactIndicadorsBase"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_ALTES_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_ALTES_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_ALTES_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TOTAL_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TOTAL_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TOTAL_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TOTAL_HOLDINGS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_ALTES_HOLDINGS')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTECS_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/ODS1_BEG_FACT_INDICADORS_TRANSACCIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS2_BEG_FACT_INDICADORS_BASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS3_BEG_BAIXES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS2_BEG_FACT_INDICADORS_BASE",
								"type": "DatasetReference"
							},
							"name": "ODS2FactIndicadorsBase"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "FactIndicadors"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS3_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODS3FactIndicadors"
						}
					],
					"transformations": [
						{
							"name": "Pivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "ColumnasIndBase",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "IndNuevos"
						},
						{
							"name": "IndNuevos2"
						},
						{
							"name": "FiltarFecha"
						},
						{
							"name": "FiltrarIndicadores"
						},
						{
							"name": "IndMesAnterior"
						},
						{
							"name": "Union"
						},
						{
							"name": "IndNuevos3"
						},
						{
							"name": "QuitarIndAnt"
						},
						{
							"name": "FiltroNULLs"
						},
						{
							"name": "FiltroNoNULLs"
						},
						{
							"name": "FiltroNoNULLsANT"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS2FactIndicadorsBase\nsource(output(\n\t\tID_AGENCY as string,\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> FactIndicadors\nUnion pivot(groupBy(CODI_BIBLIOTECA),\n\tpivotBy(CODI_INDICADOR),\n\t{} = sum(IND_VALOR),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> Pivot\nUnpivot derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nPivot derive(IND_12_11012 = toInteger(byName('IND_12_11012')),\n\t\tIND_12_11013 = toInteger(byName('IND_12_11013')),\n\t\tIND_12_1110 = toInteger(byName('IND_12_1110')),\n\t\tIND_12_112 = toInteger(byName('IND_12_112')),\n\t\tIND_12_113 = toInteger(byName('IND_12_113')),\n\t\tIND_12_115 = toInteger(byName('IND_12_115')),\n\t\tIND_12_116 = toInteger(byName('IND_12_116')),\n\t\tIND_12_117 = toInteger(byName('IND_12_117')),\n\t\tIND_12_118 = toInteger(byName('IND_12_118')),\n\t\tIND_12_119 = toInteger(byName('IND_12_119')),\n\t\tIND_12_12011 = toInteger(byName('IND_12_12011')),\n\t\tIND_12_12012 = toInteger(byName('IND_12_12012')),\n\t\tIND_12_121 = toInteger(byName('IND_12_121')),\n\t\tIND_12_1210 = toInteger(byName('IND_12_1210')),\n\t\tIND_12_122 = toInteger(byName('IND_12_122')),\n\t\tIND_12_123 = toInteger(byName('IND_12_123')),\n\t\tIND_12_124 = toInteger(byName('IND_12_124')),\n\t\tIND_12_125 = toInteger(byName('IND_12_125')),\n\t\tIND_12_126 = toInteger(byName('IND_12_126')),\n\t\tIND_12_127 = toInteger(byName('IND_12_127')),\n\t\tIND_12_128 = toInteger(byName('IND_12_128')),\n\t\tIND_12_129 = toInteger(byName('IND_12_129')),\n\t\tIND_12_21013 = toInteger(byName('IND_12_21013')),\n\t\tIND_12_212 = toInteger(byName('IND_12_212')),\n\t\tIND_12_213 = toInteger(byName('IND_12_213')),\n\t\tIND_12_215 = toInteger(byName('IND_12_215')),\n\t\tIND_12_216 = toInteger(byName('IND_12_216')),\n\t\tIND_12_217 = toInteger(byName('IND_12_217')),\n\t\tIND_12_218 = toInteger(byName('IND_12_218')),\n\t\tIND_12_219 = toInteger(byName('IND_12_219')),\n\t\tIND_12_2110 = toInteger(byName('IND_12_2110')),\n\t\tIND_12_21012 = toInteger(byName('IND_12_21012')),\n\t\tIND_12_22012 = toInteger(byName('IND_12_22012')),\n\t\tIND_12_221 = toInteger(byName('IND_12_221')),\n\t\tIND_12_222 = toInteger(byName('IND_12_222')),\n\t\tIND_12_223 = toInteger(byName('IND_12_223')),\n\t\tIND_12_224 = toInteger(byName('IND_12_224')),\n\t\tIND_12_225 = toInteger(byName('IND_12_225')),\n\t\tIND_12_226 = toInteger(byName('IND_12_226')),\n\t\tIND_12_227 = toInteger(byName('IND_12_227')),\n\t\tIND_12_228 = toInteger(byName('IND_12_228')),\n\t\tIND_12_229 = toInteger(byName('IND_12_229')),\n\t\tIND_12_2210 = toInteger(byName('IND_12_2210')),\n\t\tIND_12_22011 = toInteger(byName('IND_12_22011')),\n\t\tIND_3_81 = toInteger(byName('IND_3_81')),\n\t\tIND_3_82 = toInteger(byName('IND_3_82')),\n\t\tIND_3_83 = toInteger(byName('IND_3_83')),\n\t\tIND_3_84 = toInteger(byName('IND_3_84')),\n\t\tIND_3_85 = toInteger(byName('IND_3_85')),\n\t\tIND_3_86 = toInteger(byName('IND_3_86')),\n\t\tIND_3_87 = toInteger(byName('IND_3_87')),\n\t\tIND_3_88 = toInteger(byName('IND_3_88')),\n\t\tIND_3_89 = toInteger(byName('IND_3_89')),\n\t\tIND_3_810 = toInteger(byName('IND_3_810')),\n\t\tIND_3_8011 = toInteger(byName('IND_3_8011')),\n\t\tIND_3_8012 = toInteger(byName('IND_3_8012')),\n\t\tIND_3_8013 = toInteger(byName('IND_3_8013')),\n\t\tIND_3_8014 = toInteger(byName('IND_3_8014')),\n\t\tIND_3_8015 = toInteger(byName('IND_3_8015')),\n\t\tIND_3_91 = toInteger(byName('IND_3_91')),\n\t\tIND_3_92 = toInteger(byName('IND_3_92')),\n\t\tIND_3_93 = toInteger(byName('IND_3_93')),\n\t\tIND_3_94 = toInteger(byName('IND_3_94')),\n\t\tIND_3_95 = toInteger(byName('IND_3_95')),\n\t\tIND_3_96 = toInteger(byName('IND_3_96')),\n\t\tIND_3_97 = toInteger(byName('IND_3_97')),\n\t\tIND_3_98 = toInteger(byName('IND_3_98')),\n\t\tIND_3_99 = toInteger(byName('IND_3_99')),\n\t\tIND_3_910 = toInteger(byName('IND_3_910')),\n\t\tIND_3_9011 = toInteger(byName('IND_3_9011')),\n\t\tIND_3_9012 = toInteger(byName('IND_3_9012')),\n\t\tIND_3_9013 = toInteger(byName('IND_3_9013')),\n\t\tIND_3_9014 = toInteger(byName('IND_3_9014')),\n\t\tIND_3_9015 = toInteger(byName('IND_3_9015')),\n\t\tIND_6_11 = toInteger(byName('IND_6_11')),\n\t\tIND_6_12 = toInteger(byName('IND_6_12')),\n\t\tIND_6_13 = toInteger(byName('IND_6_13')),\n\t\tIND_6_14 = toInteger(byName('IND_6_14')),\n\t\tIND_6_15 = toInteger(byName('IND_6_15')),\n\t\tIND_6_16 = toInteger(byName('IND_6_16')),\n\t\tIND_6_21 = toInteger(byName('IND_6_21')),\n\t\tIND_6_22 = toInteger(byName('IND_6_22')),\n\t\tIND_6_23 = toInteger(byName('IND_6_23')),\n\t\tIND_6_24 = toInteger(byName('IND_6_24')),\n\t\tIND_6_25 = toInteger(byName('IND_6_25')),\n\t\tIND_6_26 = toInteger(byName('IND_6_26')),\n\t\tIND_13_1 = toInteger(byName('IND_13_1')),\n\t\tIND_13_2 = toInteger(byName('IND_13_2')),\n\t\tIND_13_3 = toInteger(byName('IND_13_3')),\n\t\tIND_14_11 = toInteger(byName('IND_14_11')),\n\t\tIND_14_12 = toInteger(byName('IND_14_12')),\n\t\tIND_14_13 = toInteger(byName('IND_14_13')),\n\t\tIND_14_14 = toInteger(byName('IND_14_14')),\n\t\tIND_14_15 = toInteger(byName('IND_14_15')),\n\t\tIND_14_16 = toInteger(byName('IND_14_16')),\n\t\tIND_14_21 = toInteger(byName('IND_14_21')),\n\t\tIND_14_22 = toInteger(byName('IND_14_22')),\n\t\tIND_14_23 = toInteger(byName('IND_14_23')),\n\t\tIND_14_24 = toInteger(byName('IND_14_24')),\n\t\tIND_14_25 = toInteger(byName('IND_14_25')),\n\t\tIND_14_26 = toInteger(byName('IND_14_26')),\n\t\tIND_7_11 = toInteger(byName('IND_7_11')),\n\t\tIND_7_12 = toInteger(byName('IND_7_12')),\n\t\tIND_7_13 = toInteger(byName('IND_7_13')),\n\t\tIND_7_14 = toInteger(byName('IND_7_14')),\n\t\tIND_7_15 = toInteger(byName('IND_7_15')),\n\t\tIND_7_16 = toInteger(byName('IND_7_16')),\n\t\tIND_7_31 = toInteger(byName('IND_7_31')),\n\t\tIND_7_32 = toInteger(byName('IND_7_32')),\n\t\tIND_7_33 = toInteger(byName('IND_7_33')),\n\t\tIND_7_34 = toInteger(byName('IND_7_34')),\n\t\tIND_7_35 = toInteger(byName('IND_7_35')),\n\t\tIND_7_36 = toInteger(byName('IND_7_36')),\n\t\tIND_7_41 = toInteger(byName('IND_7_41')),\n\t\tIND_7_42 = toInteger(byName('IND_7_42')),\n\t\tIND_7_43 = toInteger(byName('IND_7_43')),\n\t\tIND_7_44 = toInteger(byName('IND_7_44')),\n\t\tIND_7_45 = toInteger(byName('IND_7_45')),\n\t\tIND_7_46 = toInteger(byName('IND_7_46')),\n\t\tIND_7_51 = toInteger(byName('IND_7_51')),\n\t\tIND_7_52 = toInteger(byName('IND_7_52')),\n\t\tIND_7_53 = toInteger(byName('IND_7_53')),\n\t\tIND_7_54 = toInteger(byName('IND_7_54')),\n\t\tIND_7_55 = toInteger(byName('IND_7_55')),\n\t\tIND_7_56 = toInteger(byName('IND_7_56')),\n\t\tIND_7_61 = toInteger(byName('IND_7_61')),\n\t\tIND_7_62 = toInteger(byName('IND_7_62')),\n\t\tIND_7_63 = toInteger(byName('IND_7_63')),\n\t\tIND_7_64 = toInteger(byName('IND_7_64')),\n\t\tIND_7_65 = toInteger(byName('IND_7_65')),\n\t\tIND_7_66 = toInteger(byName('IND_7_66')),\n\t\tIND_8_1311 = toInteger(byName('IND_8_1311')),\n\t\tIND_8_1312 = toInteger(byName('IND_8_1312')),\n\t\tIND_8_2311 = toInteger(byName('IND_8_2311')),\n\t\tIND_8_2312 = toInteger(byName('IND_8_2312')),\n\t\tIND_3_81_ANT = toInteger(byName('IND_3_81_ANT')),\n\t\tIND_3_82_ANT = toInteger(byName('IND_3_82_ANT')),\n\t\tIND_3_83_ANT = toInteger(byName('IND_3_83_ANT')),\n\t\tIND_3_84_ANT = toInteger(byName('IND_3_84_ANT')),\n\t\tIND_3_85_ANT = toInteger(byName('IND_3_85_ANT')),\n\t\tIND_3_86_ANT = toInteger(byName('IND_3_86_ANT')),\n\t\tIND_3_87_ANT = toInteger(byName('IND_3_87_ANT')),\n\t\tIND_3_88_ANT = toInteger(byName('IND_3_88_ANT')),\n\t\tIND_3_89_ANT = toInteger(byName('IND_3_89_ANT')),\n\t\tIND_3_810_ANT = toInteger(byName('IND_3_810_ANT')),\n\t\tIND_3_8011_ANT = toInteger(byName('IND_3_8011_ANT')),\n\t\tIND_3_8012_ANT = toInteger(byName('IND_3_8012_ANT')),\n\t\tIND_3_8013_ANT = toInteger(byName('IND_3_8013_ANT')),\n\t\tIND_3_8014_ANT = toInteger(byName('IND_3_8014_ANT')),\n\t\tIND_3_8015_ANT = toInteger(byName('IND_3_8015_ANT')),\n\t\tIND_6_11_ANT = toInteger(byName('IND_6_11_ANT')),\n\t\tIND_6_12_ANT = toInteger(byName('IND_6_12_ANT')),\n\t\tIND_6_13_ANT = toInteger(byName('IND_6_13_ANT')),\n\t\tIND_6_14_ANT = toInteger(byName('IND_6_14_ANT')),\n\t\tIND_6_15_ANT = toInteger(byName('IND_6_15_ANT')),\n\t\tIND_6_16_ANT = toInteger(byName('IND_6_16_ANT')),\n\t\tIND_14_11_ANT = toInteger(byName('IND_14_11_ANT')),\n\t\tIND_14_12_ANT = toInteger(byName('IND_14_12_ANT')),\n\t\tIND_14_13_ANT = toInteger(byName('IND_14_13_ANT')),\n\t\tIND_14_14_ANT = toInteger(byName('IND_14_14_ANT')),\n\t\tIND_14_15_ANT = toInteger(byName('IND_14_15_ANT')),\n\t\tIND_14_16_ANT = toInteger(byName('IND_14_16_ANT')),\n\t\tIND_12_112_ANT = toInteger(byName('IND_12_112_ANT')),\n\t\tIND_12_113_ANT = toInteger(byName('IND_12_113_ANT')),\n\t\tIND_12_115_ANT = toInteger(byName('IND_12_115_ANT')),\n\t\tIND_12_117_ANT = toInteger(byName('IND_12_117_ANT')),\n\t\tIND_12_118_ANT = toInteger(byName('IND_12_118_ANT')),\n\t\tIND_12_119_ANT = toInteger(byName('IND_12_119_ANT')),\n\t\tIND_12_1110_ANT = toInteger(byName('IND_12_1110_ANT')),\n\t\tIND_12_116_ANT = toInteger(byName('IND_12_116_ANT')),\n\t\tIND_12_11012_ANT = toInteger(byName('IND_12_11012_ANT')),\n\t\tIND_12_11013_ANT = toInteger(byName('IND_12_11013_ANT')),\n\t\tIND_12_121_ANT = toInteger(byName('IND_12_121_ANT')),\n\t\tIND_12_122_ANT = toInteger(byName('IND_12_122_ANT')),\n\t\tIND_12_123_ANT = toInteger(byName('IND_12_123_ANT')),\n\t\tIND_12_124_ANT = toInteger(byName('IND_12_124_ANT')),\n\t\tIND_12_125_ANT = toInteger(byName('IND_12_125_ANT')),\n\t\tIND_12_126_ANT = toInteger(byName('IND_12_126_ANT')),\n\t\tIND_12_127_ANT = toInteger(byName('IND_12_127_ANT')),\n\t\tIND_12_128_ANT = toInteger(byName('IND_12_128_ANT')),\n\t\tIND_12_129_ANT = toInteger(byName('IND_12_129_ANT')),\n\t\tIND_12_1210_ANT = toInteger(byName('IND_12_1210_ANT')),\n\t\tIND_12_12011_ANT = toInteger(byName('IND_12_12011_ANT')),\n\t\tIND_12_12012_ANT = toInteger(byName('IND_12_12012_ANT')),\n\t\tIND_18_1 = toInteger(byName('IND_18_1')),\n\t\tIND_18_2 = toInteger(byName('IND_18_2')),\n\t\tIND_18_3 = toInteger(byName('IND_18_3')),\n\t\tIND_18_4 = toInteger(byName('IND_18_4')),\n\t\tIND_18_5 = toInteger(byName('IND_18_5')),\n\t\tIND_18_6 = toInteger(byName('IND_18_6')),\n\t\tIND_18_7 = toInteger(byName('IND_18_7')),\n\t\tIND_18_8 = toInteger(byName('IND_18_8')),\n\t\tIND_18_9 = toInteger(byName('IND_18_9')),\n\t\tIND_18_10 = toInteger(byName('IND_18_10'))) ~> ColumnasIndBase\nQuitarIndAnt unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nColumnasIndBase derive(IND_3_8 = IND_3_81+IND_3_82+IND_3_83+IND_3_84+IND_3_85+IND_3_86+IND_3_87+IND_3_88+IND_3_89+IND_3_810+IND_3_8011+IND_3_8012+IND_3_8013+IND_3_8014+IND_3_8015,\n\t\tIND_3_9 = IND_3_91+IND_3_92+IND_3_93+IND_3_94+IND_3_95+IND_3_96+IND_3_97+IND_3_98+IND_3_99+IND_3_910+IND_3_9011+IND_3_9012+IND_3_9013+IND_3_9014+IND_3_9015,\n\t\tIND_3_101 = IND_3_81_ANT - IND_3_81 + IND_3_91,\n\t\tIND_3_102 = IND_3_82_ANT - IND_3_82 + IND_3_92,\n\t\tIND_3_103 = IND_3_83_ANT - IND_3_83 + IND_3_93,\n\t\tIND_3_104 = IND_3_84_ANT - IND_3_84 + IND_3_94,\n\t\tIND_3_105 = IND_3_85_ANT - IND_3_85 + IND_3_95,\n\t\tIND_3_106 = IND_3_86_ANT - IND_3_86 + IND_3_96,\n\t\tIND_3_107 = IND_3_87_ANT - IND_3_87 + IND_3_97,\n\t\tIND_3_108 = IND_3_88_ANT - IND_3_88 + IND_3_98,\n\t\tIND_3_109 = IND_3_89_ANT - IND_3_89 + IND_3_99,\n\t\tIND_3_1010 = IND_3_810_ANT - IND_3_810 + IND_3_910,\n\t\tIND_3_10011 = IND_3_8011_ANT - IND_3_8011 + IND_3_9011,\n\t\tIND_3_10012 = IND_3_8012_ANT - IND_3_8012 + IND_3_9012,\n\t\tIND_3_10013 = IND_3_8013_ANT - IND_3_8013 + IND_3_9013,\n\t\tIND_3_10014 = IND_3_8014_ANT - IND_3_8014 + IND_3_9014,\n\t\tIND_3_10015 = IND_3_8015_ANT - IND_3_8015 + IND_3_9015,\n\t\tIND_6_1 = IND_6_11+IND_6_12+IND_6_13+IND_6_14+IND_6_15+IND_6_16,\n\t\tIND_6_2 = IND_6_21+IND_6_22+IND_6_23+IND_6_24+IND_6_25+IND_6_26,\n\t\tIND_6_31 = IND_6_11_ANT - IND_6_11 + IND_6_21,\n\t\tIND_6_32 = IND_6_12_ANT - IND_6_12 + IND_6_22,\n\t\tIND_6_33 = IND_6_13_ANT - IND_6_13 + IND_6_23,\n\t\tIND_6_34 = IND_6_14_ANT - IND_6_14 + IND_6_24,\n\t\tIND_6_35 = IND_6_15_ANT - IND_6_15 + IND_6_25,\n\t\tIND_6_36 = IND_6_16_ANT - IND_6_16 + IND_6_26,\n\t\tIND_12_11 = IND_12_112+IND_12_113+IND_12_115+IND_12_116+IND_12_117+IND_12_118+IND_12_119+IND_12_1110+IND_12_11012+IND_12_11013,\n\t\tIND_12_12 = IND_12_121+IND_12_122+IND_12_123+IND_12_124+IND_12_125+IND_12_126+IND_12_127+IND_12_128+IND_12_129+IND_12_1210+IND_12_12011+IND_12_12012,\n\t\tIND_12_21 = IND_12_212+IND_12_213+IND_12_215+IND_12_216+IND_12_217+IND_12_218+IND_12_219+IND_12_2110+IND_12_21012+IND_12_21013,\n\t\tIND_12_22 = IND_12_221+IND_12_222+IND_12_223+IND_12_224+IND_12_225+IND_12_226+IND_12_227+IND_12_228+IND_12_229+IND_12_2210+IND_12_22011+IND_12_22012,\n\t\tIND_12_312 = IND_12_112_ANT -  IND_12_112 + IND_12_212,\n\t\tIND_12_313 = IND_12_113_ANT -  IND_12_113 + IND_12_213,\n\t\tIND_12_315 = IND_12_115_ANT -  IND_12_115 + IND_12_215,\n\t\tIND_12_316 = IND_12_116_ANT -  IND_12_116 + IND_12_216,\n\t\tIND_12_317 = IND_12_117_ANT -  IND_12_117 + IND_12_217,\n\t\tIND_12_318 = IND_12_118_ANT -  IND_12_118 + IND_12_218,\n\t\tIND_12_319 = IND_12_119_ANT -  IND_12_119 + IND_12_219,\n\t\tIND_12_3110 = IND_12_1110_ANT -  IND_12_1110 + IND_12_2110,\n\t\tIND_12_31012 = IND_12_11012_ANT -  IND_12_11012 + IND_12_21012,\n\t\tIND_12_31013 = IND_12_11013_ANT -  IND_12_11013 + IND_12_21013,\n\t\tIND_12_322 = IND_12_122_ANT - IND_12_122 + IND_12_222,\n\t\tIND_12_323 = IND_12_123_ANT - IND_12_123 + IND_12_223,\n\t\tIND_12_324 = IND_12_124_ANT - IND_12_124 + IND_12_224,\n\t\tIND_12_325 = IND_12_125_ANT - IND_12_125 + IND_12_225,\n\t\tIND_12_326 = IND_12_126_ANT - IND_12_126 + IND_12_226,\n\t\tIND_12_327 = IND_12_127_ANT - IND_12_127 + IND_12_227,\n\t\tIND_12_328 = IND_12_128_ANT - IND_12_128 + IND_12_228,\n\t\tIND_12_329 = IND_12_129_ANT - IND_12_129 + IND_12_229,\n\t\tIND_12_3210 = IND_12_1210_ANT - IND_12_1210 + IND_12_2210,\n\t\tIND_12_32011 = IND_12_12011_ANT - IND_12_12011 + IND_12_22011,\n\t\tIND_12_32012 = IND_12_12012_ANT - IND_12_12012 + IND_12_22012) ~> IndNuevos\nIndNuevos derive(IND_12_1 = IND_12_11+IND_12_12,\n\t\tIND_12_2 = IND_12_21+IND_12_22,\n\t\tIND_12_31 = IND_12_312+IND_12_313+IND_12_315+IND_12_316+IND_12_317+IND_12_318+IND_12_319+IND_12_3110+IND_12_31012+IND_12_31013,\n\t\tIND_12_32 = IND_12_322+IND_12_323+IND_12_324+IND_12_325+IND_12_326+IND_12_327+IND_12_328+IND_12_329+IND_12_3210+IND_12_32011+IND_12_32012,\n\t\tIND_3_10 = IND_3_101+IND_3_102+IND_3_103+IND_3_104+IND_3_105,\n\t\tIND_6_3 = IND_6_31+IND_6_32+IND_6_33+IND_6_34+IND_6_35+IND_6_36) ~> IndNuevos2\nFactIndicadors filter(addMonths(toDate(concat($Data_Carrega,'01'),'yyyyMMdd'),-1) == DATA_PERIODE) ~> FiltarFecha\nFiltarFecha filter(CODI_INDICADOR  == 'IND_3_81' || CODI_INDICADOR  == 'IND_3_82' || CODI_INDICADOR  == 'IND_3_83' || CODI_INDICADOR  == 'IND_3_84' || CODI_INDICADOR  == 'IND_3_85' || \nCODI_INDICADOR  == 'IND_3_86' || CODI_INDICADOR  == 'IND_3_87' || CODI_INDICADOR  == 'IND_3_88' || CODI_INDICADOR  == 'IND_3_89' || CODI_INDICADOR  == 'IND_3_810' || \nCODI_INDICADOR  == 'IND_3_8011' || CODI_INDICADOR  == 'IND_3_8012' || CODI_INDICADOR  == 'IND_3_8013' || CODI_INDICADOR  == 'IND_3_8014' || CODI_INDICADOR  == 'IND_3_8015' || \nCODI_INDICADOR  == 'IND_6_11' || CODI_INDICADOR  == 'IND_6_12' || CODI_INDICADOR  == 'IND_6_13' || CODI_INDICADOR  == 'IND_6_14' || CODI_INDICADOR  == 'IND_6_15' || \nCODI_INDICADOR  == 'IND_6_16' || CODI_INDICADOR  == 'IND_12_112' || CODI_INDICADOR  == 'IND_12_113' || CODI_INDICADOR  == 'IND_12_115' || CODI_INDICADOR  == 'IND_12_116' || \nCODI_INDICADOR  == 'IND_12_117' || CODI_INDICADOR  == 'IND_12_118' || CODI_INDICADOR  == 'IND_12_119' || CODI_INDICADOR  == 'IND_12_1110' || CODI_INDICADOR  == 'IND_12_11012' || \nCODI_INDICADOR  == 'IND_12_11013' || CODI_INDICADOR  == 'IND_12_121' || CODI_INDICADOR  == 'IND_12_122' || CODI_INDICADOR  == 'IND_12_123' || CODI_INDICADOR  == 'IND_12_124' || \nCODI_INDICADOR  == 'IND_12_125' || CODI_INDICADOR  == 'IND_12_126' || CODI_INDICADOR  == 'IND_12_127' || CODI_INDICADOR  == 'IND_12_128' || CODI_INDICADOR  == 'IND_12_129' || \nCODI_INDICADOR  == 'IND_12_1210' || CODI_INDICADOR  == 'IND_12_12011' || CODI_INDICADOR  == 'IND_12_12012' || CODI_INDICADOR  == 'IND_14_11' || CODI_INDICADOR  == 'IND_14_12' || \nCODI_INDICADOR  == 'IND_14_13' || CODI_INDICADOR  == 'IND_14_14' || CODI_INDICADOR  == 'IND_14_15' || CODI_INDICADOR  == 'IND_14_16') ~> FiltrarIndicadores\nFiltroNoNULLsANT derive(CODI_INDICADOR = CODI_INDICADOR+\"_ANT\") ~> IndMesAnterior\nFiltroNoNULLs, IndMesAnterior union(byName: true)~> Union\nIndNuevos2 derive(IND_12_3 = IND_12_31 + IND_12_32) ~> IndNuevos3\nIndNuevos3 select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tIND_12_11012,\n\t\tIND_12_11013,\n\t\tIND_12_1110,\n\t\tIND_12_112,\n\t\tIND_12_113,\n\t\tIND_12_115,\n\t\tIND_12_116,\n\t\tIND_12_117,\n\t\tIND_12_118,\n\t\tIND_12_119,\n\t\tIND_12_12011,\n\t\tIND_12_12012,\n\t\tIND_12_121,\n\t\tIND_12_1210,\n\t\tIND_12_122,\n\t\tIND_12_123,\n\t\tIND_12_124,\n\t\tIND_12_125,\n\t\tIND_12_126,\n\t\tIND_12_127,\n\t\tIND_12_128,\n\t\tIND_12_129,\n\t\tIND_12_21013,\n\t\tIND_12_212,\n\t\tIND_12_213,\n\t\tIND_12_215,\n\t\tIND_12_216,\n\t\tIND_12_217,\n\t\tIND_12_218,\n\t\tIND_12_219,\n\t\tIND_12_2110,\n\t\tIND_12_21012,\n\t\tIND_12_22012,\n\t\tIND_12_221,\n\t\tIND_12_222,\n\t\tIND_12_223,\n\t\tIND_12_224,\n\t\tIND_12_225,\n\t\tIND_12_226,\n\t\tIND_12_227,\n\t\tIND_12_228,\n\t\tIND_12_229,\n\t\tIND_12_2210,\n\t\tIND_12_22011,\n\t\tIND_3_81,\n\t\tIND_3_82,\n\t\tIND_3_83,\n\t\tIND_3_84,\n\t\tIND_3_85,\n\t\tIND_3_86,\n\t\tIND_3_87,\n\t\tIND_3_88,\n\t\tIND_3_89,\n\t\tIND_3_810,\n\t\tIND_3_8011,\n\t\tIND_3_8012,\n\t\tIND_3_8013,\n\t\tIND_3_8014,\n\t\tIND_3_8015,\n\t\tIND_3_91,\n\t\tIND_3_92,\n\t\tIND_3_93,\n\t\tIND_3_94,\n\t\tIND_3_95,\n\t\tIND_3_96,\n\t\tIND_3_97,\n\t\tIND_3_98,\n\t\tIND_3_99,\n\t\tIND_3_910,\n\t\tIND_3_9011,\n\t\tIND_3_9012,\n\t\tIND_3_9013,\n\t\tIND_3_9014,\n\t\tIND_3_9015,\n\t\tIND_6_11,\n\t\tIND_6_12,\n\t\tIND_6_13,\n\t\tIND_6_14,\n\t\tIND_6_15,\n\t\tIND_6_16,\n\t\tIND_6_21,\n\t\tIND_6_22,\n\t\tIND_6_23,\n\t\tIND_6_24,\n\t\tIND_6_25,\n\t\tIND_6_26,\n\t\tIND_3_8,\n\t\tIND_3_9,\n\t\tIND_3_101,\n\t\tIND_3_102,\n\t\tIND_3_103,\n\t\tIND_3_104,\n\t\tIND_3_105,\n\t\tIND_3_106,\n\t\tIND_3_107,\n\t\tIND_3_108,\n\t\tIND_3_109,\n\t\tIND_3_1010,\n\t\tIND_3_10011,\n\t\tIND_3_10012,\n\t\tIND_3_10013,\n\t\tIND_3_10014,\n\t\tIND_3_10015,\n\t\tIND_6_1,\n\t\tIND_6_2,\n\t\tIND_6_31,\n\t\tIND_6_32,\n\t\tIND_6_33,\n\t\tIND_6_34,\n\t\tIND_6_35,\n\t\tIND_6_36,\n\t\tIND_12_11,\n\t\tIND_12_12,\n\t\tIND_12_21,\n\t\tIND_12_22,\n\t\tIND_12_312,\n\t\tIND_12_313,\n\t\tIND_12_315,\n\t\tIND_12_316,\n\t\tIND_12_317,\n\t\tIND_12_318,\n\t\tIND_12_319,\n\t\tIND_12_3110,\n\t\tIND_12_31012,\n\t\tIND_12_31013,\n\t\tIND_12_322,\n\t\tIND_12_323,\n\t\tIND_12_324,\n\t\tIND_12_325,\n\t\tIND_12_326,\n\t\tIND_12_327,\n\t\tIND_12_328,\n\t\tIND_12_329,\n\t\tIND_12_3210,\n\t\tIND_12_32011,\n\t\tIND_12_32012,\n\t\tIND_12_1,\n\t\tIND_12_2,\n\t\tIND_12_31,\n\t\tIND_12_32,\n\t\tIND_3_10,\n\t\tIND_6_3,\n\t\tIND_12_3\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> QuitarIndAnt\nODS2FactIndicadorsBase filter(isNull(IND_VALOR)) ~> FiltroNULLs\nODS2FactIndicadorsBase filter(!isNull(IND_VALOR)) ~> FiltroNoNULLs\nFiltrarIndicadores filter(!isNull(IND_VALOR)) ~> FiltroNoNULLsANT\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS3FactIndicadors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS2_BEG_FACT_INDICADORS_BASE')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/ODS3_BEG_FACT_INDICADORS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS3_BEG_FACT_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS2_BEG_FACT_INDICADORS_BASE",
								"type": "DatasetReference"
							},
							"name": "ODS2FactIndicadors"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMDimIndicadors"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS3_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODS3FactIndicadors"
						}
					],
					"transformations": [
						{
							"name": "SelectInd"
						},
						{
							"name": "CrossJoin"
						},
						{
							"name": "SoloCodiBiblioteca"
						},
						{
							"name": "Join"
						},
						{
							"name": "Datas"
						},
						{
							"name": "Select"
						},
						{
							"name": "FilterIndFitxer"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS2FactIndicadors\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimBiblioteques\nsource(output(\n\t\tID_INDICADOR as string,\n\t\tCODI_INDICADOR as string,\n\t\tDESC_INDICADOR as string,\n\t\tDESC_COMO_CALCULAR as string,\n\t\tFLAG_FITXER as string,\n\t\tFLAG_PRESTECS as string,\n\t\tFLAG_DATAENTRY as string,\n\t\tFLAG_NO_PERIODICS as string,\n\t\tFILA_LEVEL_1 as string,\n\t\tFILA_LEVEL_2 as string,\n\t\tFILA_LEVEL_3 as string,\n\t\tFILA_LEVEL_4 as string,\n\t\tFILA_LEVEL_5 as string,\n\t\tCOLUMNA_LEVEL_1 as string,\n\t\tCOLUMNA_LEVEL_2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimIndicadors\nDMDimIndicadors select(mapColumn(\n\t\tCODI_INDICADOR,\n\t\tFLAG_FITXER\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInd\nFilterIndFitxer, SoloCodiBiblioteca join(FLAG_FITXER == '1' && CODI_BIBLIOTECA == CODI_BIBLIOTECA,\n\tjoinType:'cross',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CrossJoin\nDimBiblioteques select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tID_AGENCY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SoloCodiBiblioteca\nODS2FactIndicadors, CrossJoin join(ODS2FactIndicadors@CODI_BIBLIOTECA == SoloCodiBiblioteca@CODI_BIBLIOTECA\n\t&& ODS2FactIndicadors@CODI_INDICADOR == SelectInd@CODI_INDICADOR,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nJoin derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> Datas\nDatas select(mapColumn(\n\t\tCODI_BIBLIOTECA = SoloCodiBiblioteca@CODI_BIBLIOTECA,\n\t\tCODI_INDICADOR = SelectInd@CODI_INDICADOR,\n\t\tIND_VALOR,\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nSelectInd filter(FLAG_FITXER == '1') ~> FilterIndFitxer\nSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS3FactIndicadors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS2_BEG_FACT_INDICADORS_BASE')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/ODS3_BEG_FACT_INDICADORS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS3_BEG_PRESTECS_ANUALS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMFactIndicadors"
						},
						{
							"dataset": {
								"referenceName": "ODS3_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODS3FactIndicadors"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_PRESTECS_ANUAL",
								"type": "DatasetReference"
							},
							"name": "PrestecsAnual"
						}
					],
					"transformations": [
						{
							"name": "FiltrarFechaAny"
						},
						{
							"name": "FiltrarIndicadors"
						},
						{
							"name": "Suma"
						},
						{
							"name": "Select"
						},
						{
							"name": "Pivot"
						},
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "IndTotal"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "Datas"
						},
						{
							"name": "SelectIndicadores"
						},
						{
							"name": "FiltrarIndicadorsODS3"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Union"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tID_AGENCY as string,\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMFactIndicadors\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS3FactIndicadors\nDMFactIndicadors filter(year(toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) == year(DATA_PERIODE)) ~> FiltrarFechaAny\nFiltrarFechaAny filter(CODI_INDICADOR == 'IND_7_11' || CODI_INDICADOR == 'IND_7_12' || CODI_INDICADOR == 'IND_7_13' || CODI_INDICADOR == 'IND_7_14' || CODI_INDICADOR == 'IND_7_15' || CODI_INDICADOR == 'IND_7_16') ~> FiltrarIndicadors\nUnion aggregate(groupBy(CODI_BIBLIOTECA,\n\t\tCODI_INDICADOR),\n\tIND_VALOR = sum(IND_VALOR)) ~> Suma\nFiltrarIndicadors select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tCODI_INDICADOR,\n\t\tIND_VALOR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nSuma pivot(groupBy(CODI_BIBLIOTECA),\n\tpivotBy(CODI_INDICADOR),\n\t{} = sum(IND_VALOR),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> Pivot\nPivot derive(IND_7_21 = iif(isNull(toInteger(byName('IND_7_11'))), 0, toInteger(byName('IND_7_11'))),\n\t\tIND_7_22 = iif(isNull(toInteger(byName('IND_7_12'))), 0, toInteger(byName('IND_7_12'))),\n\t\tIND_7_23 = iif(isNull(toInteger(byName('IND_7_13'))), 0, toInteger(byName('IND_7_13'))),\n\t\tIND_7_24 = iif(isNull(toInteger(byName('IND_7_14'))), 0, toInteger(byName('IND_7_14'))),\n\t\tIND_7_25 = iif(isNull(toInteger(byName('IND_7_15'))), 0, toInteger(byName('IND_7_15'))),\n\t\tIND_7_26 = iif(isNull(toInteger(byName('IND_7_16'))), 0, toInteger(byName('IND_7_16')))) ~> CrearIndicadores\nSelectIndicadores derive(IND_7_2 = IND_7_21+IND_7_22+IND_7_23+IND_7_24+IND_7_25+IND_7_26) ~> IndTotal\nIndTotal unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nUnpivot derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat(concat(substring($Data_Carrega,0,4),'12'),'01'),'yyyyMMdd')) ~> Datas\nCrearIndicadores select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tIND_7_21,\n\t\tIND_7_22,\n\t\tIND_7_23,\n\t\tIND_7_24,\n\t\tIND_7_25,\n\t\tIND_7_26\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectIndicadores\nODS3FactIndicadors filter(CODI_INDICADOR == 'IND_7_11' || CODI_INDICADOR == 'IND_7_12' || CODI_INDICADOR == 'IND_7_13' || CODI_INDICADOR == 'IND_7_14' || CODI_INDICADOR == 'IND_7_15' || CODI_INDICADOR == 'IND_7_16') ~> FiltrarIndicadorsODS3\nFiltrarIndicadorsODS3 select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tCODI_INDICADOR,\n\t\tIND_VALOR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect, Select2 union(byName: true)~> Union\nDatas sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> PrestecsAnual"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/ODS3_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_PRESTECS_ANUAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS3_BEG_PRESTECS_ANUALS_HIST')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "FactIndicadors"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_PRESTECS_ANUAL",
								"type": "DatasetReference"
							},
							"name": "PrestecsAnual"
						}
					],
					"transformations": [
						{
							"name": "FiltrarFechaAny"
						},
						{
							"name": "FiltrarIndicadors"
						},
						{
							"name": "Suma"
						},
						{
							"name": "Select"
						},
						{
							"name": "Pivot"
						},
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "IndTotal"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "Datas"
						},
						{
							"name": "SelectIndicadores"
						},
						{
							"name": "AlterRow"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tID_AGENCY as string,\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> FactIndicadors\nFactIndicadors filter(year(toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) == year(DATA_PERIODE)) ~> FiltrarFechaAny\nFiltrarFechaAny filter(CODI_INDICADOR == 'IND_7_11' || CODI_INDICADOR == 'IND_7_12' || CODI_INDICADOR == 'IND_7_13' || CODI_INDICADOR == 'IND_7_14' || CODI_INDICADOR == 'IND_7_15' || CODI_INDICADOR == 'IND_7_16') ~> FiltrarIndicadors\nSelect aggregate(groupBy(CODI_BIBLIOTECA,\n\t\tCODI_INDICADOR),\n\tIND_VALOR = sum(IND_VALOR)) ~> Suma\nFiltrarIndicadors select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tCODI_INDICADOR,\n\t\tIND_VALOR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nSuma pivot(groupBy(CODI_BIBLIOTECA),\n\tpivotBy(CODI_INDICADOR),\n\t{} = sum(IND_VALOR),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> Pivot\nPivot derive(IND_7_21 = iif(isNull(toInteger(byName('IND_7_11'))), 0, toInteger(byName('IND_7_11'))),\n\t\tIND_7_22 = iif(isNull(toInteger(byName('IND_7_12'))), 0, toInteger(byName('IND_7_12'))),\n\t\tIND_7_23 = iif(isNull(toInteger(byName('IND_7_13'))), 0, toInteger(byName('IND_7_13'))),\n\t\tIND_7_24 = iif(isNull(toInteger(byName('IND_7_14'))), 0, toInteger(byName('IND_7_14'))),\n\t\tIND_7_25 = iif(isNull(toInteger(byName('IND_7_15'))), 0, toInteger(byName('IND_7_15'))),\n\t\tIND_7_26 = iif(isNull(toInteger(byName('IND_7_16'))), 0, toInteger(byName('IND_7_16')))) ~> CrearIndicadores\nSelectIndicadores derive(IND_7_2 = IND_7_21+IND_7_22+IND_7_23+IND_7_24+IND_7_25+IND_7_26) ~> IndTotal\nIndTotal unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tVALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nUnpivot derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = addMonths(toDate(concat(concat(substring($Data_Carrega,0,4),'12'),'01'),'yyyyMMdd'),-12)) ~> Datas\nCrearIndicadores select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tIND_7_21,\n\t\tIND_7_22,\n\t\tIND_7_23,\n\t\tIND_7_24,\n\t\tIND_7_25,\n\t\tIND_7_26\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectIndicadores\nDatas alterRow(updateIf(1==1)) ~> AlterRow\nAlterRow sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['CODI_BIBLIOTECA','CODI_INDICADOR','DATA_PERIODE'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> PrestecsAnual"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_PRESTECS_ANUAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS4_BEG_FACT_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS3_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODS3FactIndicadorsBase"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "FactIndicadors"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS4_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODS4FactIndicadors"
						}
					],
					"transformations": [
						{
							"name": "Pivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "ColumnasIndBase",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "IndNuevos"
						},
						{
							"name": "IndNuevos2"
						},
						{
							"name": "FiltarFecha"
						},
						{
							"name": "FiltrarIndicadores"
						},
						{
							"name": "IndMesAnterior"
						},
						{
							"name": "Union"
						},
						{
							"name": "FiltroIndProcedenciaDiciembre"
						},
						{
							"name": "QuitarIndAnt"
						},
						{
							"name": "FiltroNulls"
						},
						{
							"name": "FiltroNoNulls"
						},
						{
							"name": "UnionNULLs"
						},
						{
							"name": "FiltroNoNULLsANT"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS3FactIndicadorsBase\nsource(output(\n\t\tID_AGENCY as string,\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> FactIndicadors\nUnion pivot(groupBy(CODI_BIBLIOTECA),\n\tpivotBy(CODI_INDICADOR),\n\t{} = sum(IND_VALOR),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> Pivot\nFiltroIndProcedenciaDiciembre derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nPivot derive(IND_12_11012 = toInteger(byName('IND_12_11012')),\n\t\tIND_12_11013 = toInteger(byName('IND_12_11013')),\n\t\tIND_12_1110 = toInteger(byName('IND_12_1110')),\n\t\tIND_12_112 = toInteger(byName('IND_12_112')),\n\t\tIND_12_113 = toInteger(byName('IND_12_113')),\n\t\tIND_12_115 = toInteger(byName('IND_12_115')),\n\t\tIND_12_116 = toInteger(byName('IND_12_116')),\n\t\tIND_12_117 = toInteger(byName('IND_12_117')),\n\t\tIND_12_118 = toInteger(byName('IND_12_118')),\n\t\tIND_12_119 = toInteger(byName('IND_12_119')),\n\t\tIND_12_12011 = toInteger(byName('IND_12_12011')),\n\t\tIND_12_12012 = toInteger(byName('IND_12_12012')),\n\t\tIND_12_121 = toInteger(byName('IND_12_121')),\n\t\tIND_12_1210 = toInteger(byName('IND_12_1210')),\n\t\tIND_12_122 = toInteger(byName('IND_12_122')),\n\t\tIND_12_123 = toInteger(byName('IND_12_123')),\n\t\tIND_12_124 = toInteger(byName('IND_12_124')),\n\t\tIND_12_125 = toInteger(byName('IND_12_125')),\n\t\tIND_12_126 = toInteger(byName('IND_12_126')),\n\t\tIND_12_127 = toInteger(byName('IND_12_127')),\n\t\tIND_12_128 = toInteger(byName('IND_12_128')),\n\t\tIND_12_129 = toInteger(byName('IND_12_129')),\n\t\tIND_12_21013 = toInteger(byName('IND_12_21013')),\n\t\tIND_12_212 = toInteger(byName('IND_12_212')),\n\t\tIND_12_213 = toInteger(byName('IND_12_213')),\n\t\tIND_12_215 = toInteger(byName('IND_12_215')),\n\t\tIND_12_216 = toInteger(byName('IND_12_216')),\n\t\tIND_12_217 = toInteger(byName('IND_12_217')),\n\t\tIND_12_218 = toInteger(byName('IND_12_218')),\n\t\tIND_12_219 = toInteger(byName('IND_12_219')),\n\t\tIND_12_2110 = toInteger(byName('IND_12_2110')),\n\t\tIND_12_21012 = toInteger(byName('IND_12_21012')),\n\t\tIND_12_22012 = toInteger(byName('IND_12_22012')),\n\t\tIND_12_221 = toInteger(byName('IND_12_221')),\n\t\tIND_12_222 = toInteger(byName('IND_12_222')),\n\t\tIND_12_223 = toInteger(byName('IND_12_223')),\n\t\tIND_12_224 = toInteger(byName('IND_12_224')),\n\t\tIND_12_225 = toInteger(byName('IND_12_225')),\n\t\tIND_12_226 = toInteger(byName('IND_12_226')),\n\t\tIND_12_227 = toInteger(byName('IND_12_227')),\n\t\tIND_12_228 = toInteger(byName('IND_12_228')),\n\t\tIND_12_229 = toInteger(byName('IND_12_229')),\n\t\tIND_12_2210 = toInteger(byName('IND_12_2210')),\n\t\tIND_12_22011 = toInteger(byName('IND_12_22011')),\n\t\tIND_3_81 = toInteger(byName('IND_3_81')),\n\t\tIND_3_82 = toInteger(byName('IND_3_82')),\n\t\tIND_3_83 = toInteger(byName('IND_3_83')),\n\t\tIND_3_84 = toInteger(byName('IND_3_84')),\n\t\tIND_3_85 = toInteger(byName('IND_3_85')),\n\t\tIND_3_86 = toInteger(byName('IND_3_86')),\n\t\tIND_3_87 = toInteger(byName('IND_3_87')),\n\t\tIND_3_88 = toInteger(byName('IND_3_88')),\n\t\tIND_3_89 = toInteger(byName('IND_3_89')),\n\t\tIND_3_810 = toInteger(byName('IND_3_810')),\n\t\tIND_3_8011 = toInteger(byName('IND_3_8011')),\n\t\tIND_3_8012 = toInteger(byName('IND_3_8012')),\n\t\tIND_3_8013 = toInteger(byName('IND_3_8013')),\n\t\tIND_3_8014 = toInteger(byName('IND_3_8014')),\n\t\tIND_3_8015 = toInteger(byName('IND_3_8015')),\n\t\tIND_3_91 = toInteger(byName('IND_3_91')),\n\t\tIND_3_92 = toInteger(byName('IND_3_92')),\n\t\tIND_3_93 = toInteger(byName('IND_3_93')),\n\t\tIND_3_94 = toInteger(byName('IND_3_94')),\n\t\tIND_3_95 = toInteger(byName('IND_3_95')),\n\t\tIND_3_96 = toInteger(byName('IND_3_96')),\n\t\tIND_3_97 = toInteger(byName('IND_3_97')),\n\t\tIND_3_98 = toInteger(byName('IND_3_98')),\n\t\tIND_3_99 = toInteger(byName('IND_3_99')),\n\t\tIND_3_910 = toInteger(byName('IND_3_910')),\n\t\tIND_3_9011 = toInteger(byName('IND_3_9011')),\n\t\tIND_3_9012 = toInteger(byName('IND_3_9012')),\n\t\tIND_3_9013 = toInteger(byName('IND_3_9013')),\n\t\tIND_3_9014 = toInteger(byName('IND_3_9014')),\n\t\tIND_3_9015 = toInteger(byName('IND_3_9015')),\n\t\tIND_6_11 = toInteger(byName('IND_6_11')),\n\t\tIND_6_12 = toInteger(byName('IND_6_12')),\n\t\tIND_6_13 = toInteger(byName('IND_6_13')),\n\t\tIND_6_14 = toInteger(byName('IND_6_14')),\n\t\tIND_6_15 = toInteger(byName('IND_6_15')),\n\t\tIND_6_16 = toInteger(byName('IND_6_16')),\n\t\tIND_6_21 = toInteger(byName('IND_6_21')),\n\t\tIND_6_22 = toInteger(byName('IND_6_22')),\n\t\tIND_6_23 = toInteger(byName('IND_6_23')),\n\t\tIND_6_24 = toInteger(byName('IND_6_24')),\n\t\tIND_6_25 = toInteger(byName('IND_6_25')),\n\t\tIND_6_26 = toInteger(byName('IND_6_26')),\n\t\tIND_13_1 = toInteger(byName('IND_13_1')),\n\t\tIND_13_2 = toInteger(byName('IND_13_2')),\n\t\tIND_13_3 = toInteger(byName('IND_13_3')),\n\t\tIND_14_11 = toInteger(byName('IND_14_11')),\n\t\tIND_14_12 = toInteger(byName('IND_14_12')),\n\t\tIND_14_13 = toInteger(byName('IND_14_13')),\n\t\tIND_14_14 = toInteger(byName('IND_14_14')),\n\t\tIND_14_15 = toInteger(byName('IND_14_15')),\n\t\tIND_14_16 = toInteger(byName('IND_14_16')),\n\t\tIND_14_21 = toInteger(byName('IND_14_21')),\n\t\tIND_14_22 = toInteger(byName('IND_14_22')),\n\t\tIND_14_23 = toInteger(byName('IND_14_23')),\n\t\tIND_14_24 = toInteger(byName('IND_14_24')),\n\t\tIND_14_25 = toInteger(byName('IND_14_25')),\n\t\tIND_14_26 = toInteger(byName('IND_14_26')),\n\t\tIND_7_11 = toInteger(byName('IND_7_11')),\n\t\tIND_7_12 = toInteger(byName('IND_7_12')),\n\t\tIND_7_13 = toInteger(byName('IND_7_13')),\n\t\tIND_7_14 = toInteger(byName('IND_7_14')),\n\t\tIND_7_15 = toInteger(byName('IND_7_15')),\n\t\tIND_7_16 = toInteger(byName('IND_7_16')),\n\t\tIND_7_31 = toInteger(byName('IND_7_31')),\n\t\tIND_7_32 = toInteger(byName('IND_7_32')),\n\t\tIND_7_33 = toInteger(byName('IND_7_33')),\n\t\tIND_7_34 = toInteger(byName('IND_7_34')),\n\t\tIND_7_35 = toInteger(byName('IND_7_35')),\n\t\tIND_7_36 = toInteger(byName('IND_7_36')),\n\t\tIND_7_41 = toInteger(byName('IND_7_41')),\n\t\tIND_7_42 = toInteger(byName('IND_7_42')),\n\t\tIND_7_43 = toInteger(byName('IND_7_43')),\n\t\tIND_7_44 = toInteger(byName('IND_7_44')),\n\t\tIND_7_45 = toInteger(byName('IND_7_45')),\n\t\tIND_7_46 = toInteger(byName('IND_7_46')),\n\t\tIND_7_51 = toInteger(byName('IND_7_51')),\n\t\tIND_7_52 = toInteger(byName('IND_7_52')),\n\t\tIND_7_53 = toInteger(byName('IND_7_53')),\n\t\tIND_7_54 = toInteger(byName('IND_7_54')),\n\t\tIND_7_55 = toInteger(byName('IND_7_55')),\n\t\tIND_7_56 = toInteger(byName('IND_7_56')),\n\t\tIND_7_61 = toInteger(byName('IND_7_61')),\n\t\tIND_7_62 = toInteger(byName('IND_7_62')),\n\t\tIND_7_63 = toInteger(byName('IND_7_63')),\n\t\tIND_7_64 = toInteger(byName('IND_7_64')),\n\t\tIND_7_65 = toInteger(byName('IND_7_65')),\n\t\tIND_7_66 = toInteger(byName('IND_7_66')),\n\t\tIND_8_1311 = toInteger(byName('IND_8_1311')),\n\t\tIND_8_1312 = toInteger(byName('IND_8_1312')),\n\t\tIND_8_2311 = toInteger(byName('IND_8_2311')),\n\t\tIND_8_2312 = toInteger(byName('IND_8_2312')),\n\t\tIND_3_81_ANT = toInteger(byName('IND_3_81_ANT')),\n\t\tIND_3_82_ANT = toInteger(byName('IND_3_82_ANT')),\n\t\tIND_3_83_ANT = toInteger(byName('IND_3_83_ANT')),\n\t\tIND_3_84_ANT = toInteger(byName('IND_3_84_ANT')),\n\t\tIND_3_85_ANT = toInteger(byName('IND_3_85_ANT')),\n\t\tIND_3_86_ANT = toInteger(byName('IND_3_86_ANT')),\n\t\tIND_3_87_ANT = toInteger(byName('IND_3_87_ANT')),\n\t\tIND_3_88_ANT = toInteger(byName('IND_3_88_ANT')),\n\t\tIND_3_89_ANT = toInteger(byName('IND_3_89_ANT')),\n\t\tIND_3_810_ANT = toInteger(byName('IND_3_810_ANT')),\n\t\tIND_3_8011_ANT = toInteger(byName('IND_3_8011_ANT')),\n\t\tIND_3_8012_ANT = toInteger(byName('IND_3_8012_ANT')),\n\t\tIND_3_8013_ANT = toInteger(byName('IND_3_8013_ANT')),\n\t\tIND_3_8014_ANT = toInteger(byName('IND_3_8014_ANT')),\n\t\tIND_3_8015_ANT = toInteger(byName('IND_3_8015_ANT')),\n\t\tIND_6_11_ANT = toInteger(byName('IND_6_11_ANT')),\n\t\tIND_6_12_ANT = toInteger(byName('IND_6_12_ANT')),\n\t\tIND_6_13_ANT = toInteger(byName('IND_6_13_ANT')),\n\t\tIND_6_14_ANT = toInteger(byName('IND_6_14_ANT')),\n\t\tIND_6_15_ANT = toInteger(byName('IND_6_15_ANT')),\n\t\tIND_6_16_ANT = toInteger(byName('IND_6_16_ANT')),\n\t\tIND_14_11_ANT = toInteger(byName('IND_14_11_ANT')),\n\t\tIND_14_12_ANT = toInteger(byName('IND_14_12_ANT')),\n\t\tIND_14_13_ANT = toInteger(byName('IND_14_13_ANT')),\n\t\tIND_14_14_ANT = toInteger(byName('IND_14_14_ANT')),\n\t\tIND_14_15_ANT = toInteger(byName('IND_14_15_ANT')),\n\t\tIND_14_16_ANT = toInteger(byName('IND_14_16_ANT')),\n\t\tIND_12_112_ANT = toInteger(byName('IND_12_112_ANT')),\n\t\tIND_12_113_ANT = toInteger(byName('IND_12_113_ANT')),\n\t\tIND_12_115_ANT = toInteger(byName('IND_12_115_ANT')),\n\t\tIND_12_117_ANT = toInteger(byName('IND_12_117_ANT')),\n\t\tIND_12_118_ANT = toInteger(byName('IND_12_118_ANT')),\n\t\tIND_12_119_ANT = toInteger(byName('IND_12_119_ANT')),\n\t\tIND_12_1110_ANT = toInteger(byName('IND_14_16_ANT')),\n\t\tIND_12_116_ANT = toInteger(byName('IND_12_116_ANT')),\n\t\tIND_12_11012_ANT = toInteger(byName('IND_12_11012_ANT')),\n\t\tIND_12_11013_ANT = toInteger(byName('IND_12_11013_ANT')),\n\t\tIND_12_121_ANT = toInteger(byName('IND_12_121_ANT')),\n\t\tIND_12_122_ANT = toInteger(byName('IND_12_122_ANT')),\n\t\tIND_12_123_ANT = toInteger(byName('IND_12_123_ANT')),\n\t\tIND_12_124_ANT = toInteger(byName('IND_12_124_ANT')),\n\t\tIND_12_125_ANT = toInteger(byName('IND_12_125_ANT')),\n\t\tIND_12_126_ANT = toInteger(byName('IND_12_126_ANT')),\n\t\tIND_12_127_ANT = toInteger(byName('IND_12_127_ANT')),\n\t\tIND_12_128_ANT = toInteger(byName('IND_12_128_ANT')),\n\t\tIND_12_129_ANT = toInteger(byName('IND_12_129_ANT')),\n\t\tIND_12_1210_ANT = toInteger(byName('IND_12_1210_ANT')),\n\t\tIND_12_12011_ANT = toInteger(byName('IND_12_12011_ANT')),\n\t\tIND_12_12012_ANT = toInteger(byName('IND_12_12012_ANT')),\n\t\tIND_18_1 = toInteger(byName('IND_18_1')),\n\t\tIND_18_2 = toInteger(byName('IND_18_2')),\n\t\tIND_18_3 = toInteger(byName('IND_18_3')),\n\t\tIND_18_4 = toInteger(byName('IND_18_4')),\n\t\tIND_18_5 = toInteger(byName('IND_18_5')),\n\t\tIND_18_6 = toInteger(byName('IND_18_6')),\n\t\tIND_18_7 = toInteger(byName('IND_18_7')),\n\t\tIND_18_8 = toInteger(byName('IND_18_8')),\n\t\tIND_18_9 = toInteger(byName('IND_18_9')),\n\t\tIND_18_10 = toInteger(byName('IND_18_10'))) ~> ColumnasIndBase\nQuitarIndAnt unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: true) ~> Unpivot\nColumnasIndBase derive(IND_3_8 = IND_3_81+IND_3_82+IND_3_83+IND_3_84+IND_3_85+IND_3_86+IND_3_87+IND_3_88+IND_3_89+IND_3_810+IND_3_8011+IND_3_8012+IND_3_8013+IND_3_8014+IND_3_8015,\n\t\tIND_3_9 = IND_3_91+IND_3_92+IND_3_93+IND_3_94+IND_3_95+IND_3_96+IND_3_97+IND_3_98+IND_3_99+IND_3_910+IND_3_9011+IND_3_9012+IND_3_9013+IND_3_9014+IND_3_9015,\n\t\tIND_6_1 = IND_6_11+IND_6_12+IND_6_13+IND_6_14+IND_6_15+IND_6_16,\n\t\tIND_6_2 = IND_6_21+IND_6_22+IND_6_23+IND_6_24+IND_6_25+IND_6_26,\n\t\tIND_7_1 = IND_7_11+IND_7_12+IND_7_13+IND_7_14+IND_7_15+IND_7_16,\n\t\tIND_7_3 = IND_7_31+IND_7_32+IND_7_33+IND_7_34+IND_7_35+IND_7_36,\n\t\tIND_7_4 = IND_7_41+IND_7_42+IND_7_43+IND_7_44+IND_7_45+IND_7_46,\n\t\tIND_7_5 = IND_7_51+IND_7_52+IND_7_53+IND_7_54+IND_7_55+IND_7_56,\n\t\tIND_7_6 = IND_7_61+IND_7_62+IND_7_63+IND_7_64+IND_7_65+IND_7_66,\n\t\tIND_12_11 = IND_12_112+IND_12_113+IND_12_115+IND_12_116+IND_12_117+IND_12_118+IND_12_119+IND_12_1110+IND_12_11012+IND_12_11013,\n\t\tIND_12_12 = IND_12_121+IND_12_122+IND_12_123+IND_12_124+IND_12_125+IND_12_126+IND_12_127+IND_12_128+IND_12_129+IND_12_1210+IND_12_12011+IND_12_12012,\n\t\tIND_12_21 = IND_12_212+IND_12_213+IND_12_215+IND_12_216+IND_12_217+IND_12_218+IND_12_219+IND_12_2110+IND_12_21012+IND_12_21013,\n\t\tIND_12_22 = IND_12_221+IND_12_222+IND_12_223+IND_12_224+IND_12_225+IND_12_226+IND_12_227+IND_12_228+IND_12_229+IND_12_2210+IND_12_22011+IND_12_22012,\n\t\tIND_14_1 = IND_14_11+IND_14_12+IND_14_13+IND_14_14+IND_14_15+IND_14_16,\n\t\tIND_14_2 = IND_14_21+IND_14_22+IND_14_23+IND_14_24+IND_14_25+IND_14_26,\n\t\tIND_14_31 = IND_14_11_ANT - IND_14_11 + IND_14_21,\n\t\tIND_14_32 = IND_14_12_ANT - IND_14_12 + IND_14_22,\n\t\tIND_14_33 = IND_14_13_ANT - IND_14_13 + IND_14_23,\n\t\tIND_14_34 = IND_14_14_ANT - IND_14_14 + IND_14_24,\n\t\tIND_14_35 = IND_14_15_ANT - IND_14_15 + IND_14_25,\n\t\tIND_14_36 = IND_14_16_ANT - IND_14_16 + IND_14_26,\n\t\tIND_18 = IND_18_1+IND_18_2+IND_18_3+IND_18_4+IND_18_5+IND_18_6+IND_18_7+IND_18_8+IND_18_9+IND_18_10) ~> IndNuevos\nIndNuevos derive(IND_12_1 = IND_12_11+IND_12_12,\n\t\tIND_12_2 = IND_12_21+IND_12_22,\n\t\tIND_14_3 = IND_14_31+IND_14_32+IND_14_33+IND_14_34+IND_14_35+IND_14_36) ~> IndNuevos2\nFactIndicadors filter(addMonths(toDate(concat($Data_Carrega,'01'),'yyyyMMdd'),-1) == DATA_PERIODE) ~> FiltarFecha\nFiltarFecha filter(CODI_INDICADOR  == 'IND_14_11' || CODI_INDICADOR  == 'IND_14_12' || CODI_INDICADOR  == 'IND_14_13' || CODI_INDICADOR  == 'IND_14_14' || CODI_INDICADOR  == 'IND_14_15' || CODI_INDICADOR  == 'IND_14_16') ~> FiltrarIndicadores\nFiltroNoNULLsANT derive(CODI_INDICADOR = CODI_INDICADOR+\"_ANT\") ~> IndMesAnterior\nFiltroNoNulls, IndMesAnterior union(byName: true)~> Union\nUnpivot filter(not(substring($Data_Carrega,4,2) != '12' && CODI_INDICADOR == 'IND_18')) ~> FiltroIndProcedenciaDiciembre\nIndNuevos2 select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tIND_12_11012,\n\t\tIND_12_11013,\n\t\tIND_12_1110,\n\t\tIND_12_112,\n\t\tIND_12_113,\n\t\tIND_12_115,\n\t\tIND_12_116,\n\t\tIND_12_117,\n\t\tIND_12_118,\n\t\tIND_12_119,\n\t\tIND_12_12011,\n\t\tIND_12_12012,\n\t\tIND_12_121,\n\t\tIND_12_1210,\n\t\tIND_12_122,\n\t\tIND_12_123,\n\t\tIND_12_124,\n\t\tIND_12_125,\n\t\tIND_12_126,\n\t\tIND_12_127,\n\t\tIND_12_128,\n\t\tIND_12_129,\n\t\tIND_12_21013,\n\t\tIND_12_212,\n\t\tIND_12_213,\n\t\tIND_12_215,\n\t\tIND_12_216,\n\t\tIND_12_217,\n\t\tIND_12_218,\n\t\tIND_12_219,\n\t\tIND_12_2110,\n\t\tIND_12_21012,\n\t\tIND_12_22012,\n\t\tIND_12_221,\n\t\tIND_12_222,\n\t\tIND_12_223,\n\t\tIND_12_224,\n\t\tIND_12_225,\n\t\tIND_12_226,\n\t\tIND_12_227,\n\t\tIND_12_228,\n\t\tIND_12_229,\n\t\tIND_12_2210,\n\t\tIND_12_22011,\n\t\tIND_3_81,\n\t\tIND_3_82,\n\t\tIND_3_83,\n\t\tIND_3_84,\n\t\tIND_3_85,\n\t\tIND_3_86,\n\t\tIND_3_87,\n\t\tIND_3_88,\n\t\tIND_3_89,\n\t\tIND_3_810,\n\t\tIND_3_8011,\n\t\tIND_3_8012,\n\t\tIND_3_8013,\n\t\tIND_3_8014,\n\t\tIND_3_8015,\n\t\tIND_3_91,\n\t\tIND_3_92,\n\t\tIND_3_93,\n\t\tIND_3_94,\n\t\tIND_3_95,\n\t\tIND_3_96,\n\t\tIND_3_97,\n\t\tIND_3_98,\n\t\tIND_3_99,\n\t\tIND_3_910,\n\t\tIND_3_9011,\n\t\tIND_3_9012,\n\t\tIND_3_9013,\n\t\tIND_3_9014,\n\t\tIND_3_9015,\n\t\tIND_6_11,\n\t\tIND_6_12,\n\t\tIND_6_13,\n\t\tIND_6_14,\n\t\tIND_6_15,\n\t\tIND_6_16,\n\t\tIND_6_21,\n\t\tIND_6_22,\n\t\tIND_6_23,\n\t\tIND_6_24,\n\t\tIND_6_25,\n\t\tIND_6_26,\n\t\tIND_13_1,\n\t\tIND_13_2,\n\t\tIND_13_3,\n\t\tIND_14_11,\n\t\tIND_14_12,\n\t\tIND_14_13,\n\t\tIND_14_14,\n\t\tIND_14_15,\n\t\tIND_14_16,\n\t\tIND_14_21,\n\t\tIND_14_22,\n\t\tIND_14_23,\n\t\tIND_14_24,\n\t\tIND_14_25,\n\t\tIND_14_26,\n\t\tIND_7_11,\n\t\tIND_7_12,\n\t\tIND_7_13,\n\t\tIND_7_14,\n\t\tIND_7_15,\n\t\tIND_7_16,\n\t\tIND_7_31,\n\t\tIND_7_32,\n\t\tIND_7_33,\n\t\tIND_7_34,\n\t\tIND_7_35,\n\t\tIND_7_36,\n\t\tIND_7_41,\n\t\tIND_7_42,\n\t\tIND_7_43,\n\t\tIND_7_44,\n\t\tIND_7_45,\n\t\tIND_7_46,\n\t\tIND_7_51,\n\t\tIND_7_52,\n\t\tIND_7_53,\n\t\tIND_7_54,\n\t\tIND_7_55,\n\t\tIND_7_56,\n\t\tIND_7_61,\n\t\tIND_7_62,\n\t\tIND_7_63,\n\t\tIND_7_64,\n\t\tIND_7_65,\n\t\tIND_7_66,\n\t\tIND_8_1311,\n\t\tIND_8_1312,\n\t\tIND_8_2311,\n\t\tIND_8_2312,\n\t\tIND_18_1,\n\t\tIND_18_2,\n\t\tIND_18_3,\n\t\tIND_18_4,\n\t\tIND_18_5,\n\t\tIND_18_6,\n\t\tIND_18_7,\n\t\tIND_18_8,\n\t\tIND_18_9,\n\t\tIND_18_10,\n\t\tIND_3_8,\n\t\tIND_3_9,\n\t\tIND_6_1,\n\t\tIND_6_2,\n\t\tIND_7_1,\n\t\tIND_7_3,\n\t\tIND_7_4,\n\t\tIND_7_5,\n\t\tIND_7_6,\n\t\tIND_12_11,\n\t\tIND_12_12,\n\t\tIND_12_21,\n\t\tIND_12_22,\n\t\tIND_14_1,\n\t\tIND_14_2,\n\t\tIND_14_31,\n\t\tIND_14_32,\n\t\tIND_14_33,\n\t\tIND_14_34,\n\t\tIND_14_35,\n\t\tIND_14_36,\n\t\tIND_18,\n\t\tIND_12_1,\n\t\tIND_12_2,\n\t\tIND_14_3\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> QuitarIndAnt\nODS3FactIndicadorsBase filter(isNull(IND_VALOR)) ~> FiltroNulls\nODS3FactIndicadorsBase filter(!isNull(IND_VALOR)) ~> FiltroNoNulls\nDataInsercio, FiltroNulls union(byName: true)~> UnionNULLs\nFiltrarIndicadores filter(!isNull(IND_VALOR)) ~> FiltroNoNULLsANT\nUnionNULLs sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS4FactIndicadors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS3_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/ODS4_BEG_FACT_INDICADORS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS_BEG_FACT_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS4_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODS4FactIndicadors"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						},
						{
							"dataset": {
								"referenceName": "ODS_BEG_HORES_DOBERTURA",
								"type": "DatasetReference"
							},
							"name": "HoresDObertura"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODSFactIndicadors"
						}
					],
					"transformations": [
						{
							"name": "Union"
						},
						{
							"name": "Datas"
						},
						{
							"name": "Select"
						},
						{
							"name": "Join"
						},
						{
							"name": "ADouble"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODS4FactIndicadors\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimBiblioteques\nsource(output(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as decimal(17,6)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HoresDObertura\nODS4FactIndicadors, HoresDObertura union(byName: true)~> Union\nADouble derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> Datas\nDatas select(mapColumn(\n\t\tID_AGENCY,\n\t\tCODI_BIBLIOTECA = DimBiblioteques@CODI_BIBLIOTECA,\n\t\tCODI_INDICADOR,\n\t\tIND_VALOR,\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nUnion, DimBiblioteques join(Union@CODI_BIBLIOTECA == DimBiblioteques@CODI_BIBLIOTECA,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nJoin derive(IND_VALOR = toDouble(IND_VALOR)) ~> ADouble\nSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_AGENCY as string,\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as decimal(17,6),\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSFactIndicadors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS4_BEG_FACT_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_HORES_DOBERTURA')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_INDICADORS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS_BEG_FACT_INDICADORS_PRESTECS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA1",
								"type": "DatasetReference"
							},
							"name": "ODSFactConsulta1"
						},
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA3",
								"type": "DatasetReference"
							},
							"name": "ODSFactConsulta3"
						},
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA4",
								"type": "DatasetReference"
							},
							"name": "ODSFactConsulta4"
						},
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA5",
								"type": "DatasetReference"
							},
							"name": "ODSFactConsulta5"
						},
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA7",
								"type": "DatasetReference"
							},
							"name": "ODSFactConsulta7"
						},
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA8",
								"type": "DatasetReference"
							},
							"name": "ODSFactConsulta8"
						},
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA9",
								"type": "DatasetReference"
							},
							"name": "ODSFactConsulta9"
						},
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_PRESTEC_CONSULTA10",
								"type": "DatasetReference"
							},
							"name": "ODSFactConsulta10"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DIMBiblio"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DimIndicador"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_PRESTECS_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODSFactIndicadorsPrestecs"
						}
					],
					"transformations": [
						{
							"name": "Union"
						},
						{
							"name": "Fechas"
						},
						{
							"name": "Join"
						},
						{
							"name": "Select"
						},
						{
							"name": "NullsCero"
						},
						{
							"name": "CrossJoin"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tid_biblioteca as string,\n\t\tcodi_indicador as string,\n\t\tvalor as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSFactConsulta1\nsource(output(\n\t\tid_biblioteca as string,\n\t\tcodi_indicador as string,\n\t\tvalor as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSFactConsulta3\nsource(output(\n\t\tid_biblioteca as string,\n\t\tcodi_indicador as string,\n\t\tvalor as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSFactConsulta4\nsource(output(\n\t\tid_biblioteca as string,\n\t\tcodi_indicador as string,\n\t\tvalor as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSFactConsulta5\nsource(output(\n\t\tid_biblioteca as string,\n\t\tcodi_indicador as string,\n\t\tvalor as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSFactConsulta7\nsource(output(\n\t\tid_biblioteca as string,\n\t\tcodi_indicador as string,\n\t\tvalor as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSFactConsulta8\nsource(output(\n\t\tid_biblioteca as string,\n\t\tcodi_indicador as string,\n\t\tvalor as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSFactConsulta9\nsource(output(\n\t\tid_biblioteca as string,\n\t\tcodi_indicador as string,\n\t\tvalor as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSFactConsulta10\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as string,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMBiblio\nsource(output(\n\t\tID_INDICADOR as string,\n\t\tCODI_INDICADOR as string,\n\t\tDESC_INDICADOR as string,\n\t\tDESC_COMO_CALCULAR as string,\n\t\tFLAG_FITXER as string,\n\t\tFLAG_PRESTECS as string,\n\t\tFLAG_DATAENTRY as string,\n\t\tFLAG_NO_PERIODICS as string,\n\t\tFILA_LEVEL_1 as string,\n\t\tFILA_LEVEL_2 as string,\n\t\tFILA_LEVEL_3 as string,\n\t\tFILA_LEVEL_4 as string,\n\t\tFILA_LEVEL_5 as string,\n\t\tCOLUMNA_LEVEL_1 as string,\n\t\tCOLUMNA_LEVEL_2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimIndicador\nODSFactConsulta1, ODSFactConsulta3, ODSFactConsulta4, ODSFactConsulta5, ODSFactConsulta7, ODSFactConsulta8, ODSFactConsulta9, ODSFactConsulta10 union(byName: true)~> Union\nSelect derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> Fechas\nUnion, CrossJoin join(Union@id_biblioteca == ID_AGENCY\n\t&& Union@codi_indicador == DimIndicador@CODI_INDICADOR,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nNullsCero select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tCODI_INDICADOR = DimIndicador@CODI_INDICADOR,\n\t\tIND_VALOR = valor\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nJoin derive(valor = iifNull(valor, 0)) ~> NullsCero\nDIMBiblio, DimIndicador join(FLAG_PRESTECS == '1' && CODI_BIBLIOTECA == CODI_BIBLIOTECA,\n\tjoinType:'cross',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CrossJoin\nFechas sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSFactIndicadorsPrestecs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA1')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA3')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA4')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA5')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA7')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA8')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA9')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTEC_CONSULTA10')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_BIBLIOTEQUES')]",
				"[concat(variables('factoryId'), '/datasets/DM_BEG_DIM_INDICADORS')]",
				"[concat(variables('factoryId'), '/datasets/ODS_BEG_FACT_PRESTECS_INDICADORS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_STG_BEG_FACT_HIST_TOTAL_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "STGFactTotalExemplars"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_HIST_TOTAL_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "HistFactTotalExemplars"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "CambiarNombres"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{4  Llibre prestable } as string,\n\t\t{14  Revista prestable} as string,\n\t\t{24  Sonor prestable} as string,\n\t\t{34  Vídeo prestable} as string,\n\t\t{44  Electrònic prestable} as string,\n\t\t{54  Gràfic prestable} as string,\n\t\t{64  Mapa prestable} as string,\n\t\t{74  Partitura prestable} as string,\n\t\t{84  Altre material prestable} as string,\n\t\t{99  Temari oposicions} as string,\n\t\t{100  Llibre no prestable} as string,\n\t\t{110  Revista no prestable} as string,\n\t\t{120  Sonor no prestable} as string,\n\t\t{130  Vídeo no prestable} as string,\n\t\t{140  Electrònic no prestable} as string,\n\t\t{150  Gràfic no prestable} as string,\n\t\t{160  Mapa no prestable} as string,\n\t\t{170  Partitura no prestable} as string,\n\t\t{173  Manuscrit no prestable} as string,\n\t\t{175  Microforma no prestable} as string,\n\t\t{180  Altre material no prestable} as string,\n\t\t{190  Analítica no prestable} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTotalExemplars\nSTGFactTotalExemplars derive(DATA_INSERCIO = currentDate(),\n\t\tPERIODE = toDate(concat($Data_Carrega, '01'),'yyyyMMdd')) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tID_AGENCY = Codi,\n\t\tDESC_BIBLIOTECA = Significat,\n\t\tNUM_LLIBRE_PRESTABLE = {4  Llibre prestable },\n\t\tNUM_REVISTA_PRESTABLE = {14  Revista prestable},\n\t\tNUM_SONOR_PRESTABLE = {24  Sonor prestable},\n\t\tNUM_VIDEO_PRESTABLE = {34  Vídeo prestable},\n\t\tNUM_ELECTRONIC_PRESTABLE = {44  Electrònic prestable},\n\t\tNUM_GRAFIC_PRESTABLE = {54  Gràfic prestable},\n\t\tNUM_MAPA_PRESTABLE = {64  Mapa prestable},\n\t\tNUM_PARTITURA_PRESTABLE = {74  Partitura prestable},\n\t\tNUM_ALTRE_MATERIAL_PRESTABLE = {84  Altre material prestable},\n\t\tNUM_TEMARI_OPOSICIONS = {99  Temari oposicions},\n\t\tNUM_LLIBRE_NO_PRESTABLE = {100  Llibre no prestable},\n\t\tNUM_REVISTA_NO_PRESTABLE = {110  Revista no prestable},\n\t\tNUM_SONOR_NO_PRESTABLE = {120  Sonor no prestable},\n\t\tNUM_VIDEO_NO_PRESTABLE = {130  Vídeo no prestable},\n\t\tNUM_ELECTRONIC_NO_PRESTABLE = {140  Electrònic no prestable},\n\t\tNUM_GRAFIC_NO_PRESTABLE = {150  Gràfic no prestable},\n\t\tNUM_MAPA_NO_PRESTABLE = {160  Mapa no prestable},\n\t\tNUM_PARTITURA_NO_PRESTABLE = {170  Partitura no prestable},\n\t\tNUM_MANUSCRIT_NO_PRESTABLE = {173  Manuscrit no prestable},\n\t\tNUM_MICROFORMA_NO_PRESTABLE = {175  Microforma no prestable},\n\t\tNUM_ALTRE_MATERIAL_NO_PRESTABLE = {180  Altre material no prestable},\n\t\tNUM_ANALITICA_NO_PRESTABLE = {190  Analítica no prestable},\n\t\tNUM_TOTAL = {  Totals  },\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE = PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CambiarNombres\nCambiarNombres sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> HistFactTotalExemplars"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_HIST_TOTAL_EXEMPLARS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_STG_BEG_HIST_FACT_ALTES_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_ALTES_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "STGFactAltesBibliografics"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "STG_BEG_HIST_FACT_ALTES_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "HistFactAltesBibliografics"
						}
					],
					"transformations": [
						{
							"name": "Datas"
						},
						{
							"name": "RenombraCampos"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{a  Llibre} as string,\n\t\t{b  Revista} as string,\n\t\t{c  Partitura impr.} as string,\n\t\t{d  Partitura manus.} as string,\n\t\t{e  Mapa imprès} as string,\n\t\t{f  Mapa manuscrit} as string,\n\t\t{g  Vídeo DVD} as string,\n\t\t{i  Sonor no musical} as string,\n\t\t{j  Sonor musical} as string,\n\t\t{k  Gràfic} as string,\n\t\t{l  Article} as string,\n\t\t{m  Fitxer informàtic} as string,\n\t\t{n  Tesi} as string,\n\t\t{o  Equip} as string,\n\t\t{p  Material d'arxiu} as string,\n\t\t{r  Objecte} as string,\n\t\t{t  Manuscrit} as string,\n\t\t{u  Base de dades} as string,\n\t\t{v  Revista en línia} as string,\n\t\t{z  Llibre en línia} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactAltesBibliografics\nSTGFactAltesBibliografics derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega, '01'),'yyyyMMdd')) ~> Datas\nDatas select(mapColumn(\n\t\tID_LOCATION = Codi,\n\t\tDESC_BIBLIOTECA = Significat,\n\t\tNUM_LLIBRE = {a  Llibre},\n\t\tNUM_REVISTA = {b  Revista},\n\t\tNUM_PARTITURA_IMPR = {c  Partitura impr.},\n\t\tNUM_PARTITURA_MANUS = {d  Partitura manus.},\n\t\tNUM_MAPA_IMPRES = {e  Mapa imprès},\n\t\tNUM_MAPA_MANUS = {f  Mapa manuscrit},\n\t\tNUM_VIDEO_DVD = {g  Vídeo DVD},\n\t\tNUM_SONOR_NO_MUSICAL = {i  Sonor no musical},\n\t\tNUM_SONOR_MUSICAL = {j  Sonor musical},\n\t\tNUM_GRAFIC = {k  Gràfic},\n\t\tNUM_ARTICLE = {l  Article},\n\t\tNUM_FITXER_INFORMATIC = {m  Fitxer informàtic},\n\t\tNUM_TESI = {n  Tesi},\n\t\tNUM_EQUIP = {o  Equip},\n\t\tNUM_MATERIAL_DARXIU = {p  Material d'arxiu},\n\t\tNUM_OBJECTE = {r  Objecte},\n\t\tNUM_MANUSCRIT = {t  Manuscrit},\n\t\tNUM_BASE_DE_DADES = {u  Base de dades},\n\t\tNUM_REVISTA_EN_LINEA = {v  Revista en línia},\n\t\tNUM_LLIBRE_EN_LINEA = {z  Llibre en línia},\n\t\tNUM_TOTAL = {  Totals  },\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenombraCampos\nRenombraCampos sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> HistFactAltesBibliografics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_HIST_FACT_ALTES_BIBLIOGRAFICS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_STG_BEG_HIST_FACT_ALTES_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_ALTES_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "STGFactAltesExemplars"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "STG_BEG_HIST_FACT_ALTES_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "HISTAltesExemplars"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "RenombrarCampos"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{4  Llibre prestable } as string,\n\t\t{14  Revista prestable} as string,\n\t\t{24  Sonor prestable} as string,\n\t\t{34  Vídeo prestable} as string,\n\t\t{44  Electrònic prestable} as string,\n\t\t{54  Gràfic prestable} as string,\n\t\t{64  Mapa prestable} as string,\n\t\t{74  Partitura prestable} as string,\n\t\t{84  Altre material prestable} as string,\n\t\t{99  Temari oposicions} as string,\n\t\t{100  Llibre no prestable} as string,\n\t\t{110  Revista no prestable} as string,\n\t\t{120  Sonor no prestable} as string,\n\t\t{130  Vídeo no prestable} as string,\n\t\t{140  Electrònic no prestable} as string,\n\t\t{150  Gràfic no prestable} as string,\n\t\t{160  Mapa no prestable} as string,\n\t\t{170  Partitura no prestable} as string,\n\t\t{173  Manuscrit no prestable} as string,\n\t\t{175  Microforma no prestable} as string,\n\t\t{180  Altre material no prestable} as string,\n\t\t{190  Analítica no prestable} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactAltesExemplars\nSTGFactAltesExemplars derive(DATA_INSERCIO = currentDate(),\n\t\tPERIODE = toDate(concat($Data_Carrega, '01'),'yyyyMMdd')) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tID_AGENCY = Codi,\n\t\tDESC_BIBLIOTECA = Significat,\n\t\tNUM_LLIBRE_PRESTABLE = {4  Llibre prestable },\n\t\tNUM_REVISTA_PRESTABLE = {14  Revista prestable},\n\t\tNUM_SONOR_PRESTABLE = {24  Sonor prestable},\n\t\tNUM_VIDEO_PRESTABLE = {34  Vídeo prestable},\n\t\tNUM_ELECTRONIC_PRESTABLE = {44  Electrònic prestable},\n\t\tNUM_GRAFIC_PRESTABLE = {54  Gràfic prestable},\n\t\tNUM_MAPA_PRESTABLE = {64  Mapa prestable},\n\t\tNUM_PARTITURA_PRESTABLE = {74  Partitura prestable},\n\t\tNUM_ALTRE_MATERIAL_PRESTABLE = {84  Altre material prestable},\n\t\tNUM_TEMARI_OPOSICIONS = {99  Temari oposicions},\n\t\tNUM_LLIBRE_NO_PRESTALBE = {100  Llibre no prestable},\n\t\tNUM_REVISTA_NO_PRESTABLE = {110  Revista no prestable},\n\t\tNUM_SONOR_NO_PRESTABLE = {120  Sonor no prestable},\n\t\tNUM_VIDEO_NO_PRESTABLE = {130  Vídeo no prestable},\n\t\tNUM_ELECTRONIC_NO_PRESTABLE = {140  Electrònic no prestable},\n\t\tNUM_GRAFIC_NO_PRESTABLE = {150  Gràfic no prestable},\n\t\tNUM_MAPA_NO_PRESTABLE = {160  Mapa no prestable},\n\t\tNUM_PARTITURA_NO_PRESTABLE = {170  Partitura no prestable},\n\t\tNUM_MANUSCRIT_NO_PRESTABLE = {173  Manuscrit no prestable},\n\t\tNUM_MICROFORMA_NO_PRESTABLE = {175  Microforma no prestable},\n\t\tNUM_ALTRE_MATERIAL_NO_PRESTABLE = {180  Altre material no prestable},\n\t\tNUM_ANALITICA_NO_PRESTABLE = {190  Analítica no prestable},\n\t\tNUM_TOTAL = {  Totals  },\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE = PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenombrarCampos\nRenombrarCampos sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> HISTAltesExemplars"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_EXEMPLARS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_HIST_FACT_ALTES_EXEMPLARS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_STG_BEG_HIST_FACT_ALTES_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_ALTES_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "STGFactAltesHoldings"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "STG_BEG_HIST_FACT_ALTES_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "HistFactAltesHoldings"
						}
					],
					"transformations": [
						{
							"name": "Datas"
						},
						{
							"name": "RenombrarCampos"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{-  Sense informar} as string,\n\t\t{0  Desconegut} as string,\n\t\t{1  Altres} as string,\n\t\t{2  Cessada} as string,\n\t\t{4  Es rep} as string,\n\t\t{5  No es rep} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactAltesHoldings\nSTGFactAltesHoldings derive(DATA_INSERCIO = currentDate(),\n\t\tPERIODE = toDate(concat($Data_Carrega, '01'),'yyyyMMdd')) ~> Datas\nDatas select(mapColumn(\n\t\tID_LOCATION = Codi,\n\t\tDESC_BIBLIOTECA = Significat,\n\t\tNUM_SENSE_INFORMAR = {-  Sense informar},\n\t\tNUM_DESCONEGUT = {0  Desconegut},\n\t\tNUM_ALTRES = {1  Altres},\n\t\tNUM_CESSADA = {2  Cessada},\n\t\tNUM_ES_REP = {4  Es rep},\n\t\tNUM_NO_ES_REP = {5  No es rep},\n\t\tNUM_TOTAL = {  Totals  },\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE = PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenombrarCampos\nRenombrarCampos sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> HistFactAltesHoldings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_HOLDINGS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_HIST_FACT_ALTES_HOLDINGS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_STG_BEG_HIST_FACT_ALTES_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_ALTES_USUARIS",
								"type": "DatasetReference"
							},
							"name": "STGFactAltesUsuaris"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "STG_BEG_HIST_FACT_ALTES_USUARIS",
								"type": "DatasetReference"
							},
							"name": "HistFactAltesUsuaris"
						}
					],
					"transformations": [
						{
							"name": "Datas"
						},
						{
							"name": "RenombrarCampos"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{10  General intern} as string,\n\t\t{11  Bad Code} as string,\n\t\t{20  General extern} as string,\n\t\t{25  BEG} as string,\n\t\t{30  Personal de la biblioteca} as string,\n\t\t{110  Institució interna} as string,\n\t\t{120  Institució externa} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactAltesUsuaris\nSTGFactAltesUsuaris derive(DATA_INSERCIO = currentDate(),\n\t\tPERIODE = toDate(concat($Data_Carrega, '01'),'yyyyMMdd')) ~> Datas\nDatas select(mapColumn(\n\t\tID_LOCATION = Codi,\n\t\tDESC_BIBLIOTECA = Significat,\n\t\tNUM_GENERAL_INTERN = {10  General intern},\n\t\tNUM_BAD_CODE = {11  Bad Code},\n\t\tNUM_GENERAL_EXTERN = {20  General extern},\n\t\tNUM_BEG = {25  BEG},\n\t\tNUM_PERSONAL_DE_LA_BIBLIOTECA = {30  Personal de la biblioteca},\n\t\tNUM_INSTITUCIO_INTERNA = {110  Institució interna},\n\t\tNUM_INSTITUCIO_EXTERNA = {120  Institució externa},\n\t\tNUM_TOTAL = {  Totals  },\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE = PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenombrarCampos\nRenombrarCampos sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> HistFactAltesUsuaris"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_ALTES_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_HIST_FACT_ALTES_USUARIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_STG_BEG_HIST_FACT_PRESTECS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_PRESTECS",
								"type": "DatasetReference"
							},
							"name": "STGPrestecs"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "STG_BEG_HIST_FACT_PRESTECS",
								"type": "DatasetReference"
							},
							"name": "STGHistFactPrestecs"
						}
					],
					"transformations": [
						{
							"name": "Datas"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Data_Carrega as string",
						"}",
						"source(output(",
						"          AGENCY as string,",
						"          LOCATION as string,",
						"          {I TYPE} as string,",
						"          {OUT DATE} as string,",
						"          {OUT LOC} as string,",
						"          {PAT AGENCY} as string,",
						"          {HOME LIBR} as string,",
						"          {P TYPE} as string,",
						"          {RECORD #(Patron)} as string,",
						"          {RECORD #(Item)} as string,",
						"          { DE BARRES} as string,",
						"          {CALL #} as string,",
						"          {RECORD #(BIBLIO)} as string,",
						"          LANG as string,",
						"          {MAT TYPE} as string,",
						"          {BIB LVL} as string,",
						"          COUNTRY as string,",
						"          {008 Data 1} as string,",
						"          {020} as string,",
						"          {022} as string,",
						"          {CLASIF CDU} as string,",
						"          AUTHOR as string,",
						"          TITLE as string,",
						"          {PUB INFO} as string,",
						"          IUSE3 as string,",
						"          {INTL USE} as string,",
						"          {IN LOC} as string,",
						"          PCODE1 as string,",
						"          PCODE3 as string,",
						"          PCODE2 as string,",
						"          {ADREÇA} as string,",
						"          PCODE4 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGPrestecs",
						"STGPrestecs derive(DATA_INSERCIO = currentDate(),",
						"          DATA_PERIODE = toDate(concat($Data_Carrega, '01'),'yyyyMMdd')) ~> Datas",
						"Datas sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_AGENCY as string,",
						"          ID_LOCATION as string,",
						"          CODI_I_TYPE as string,",
						"          DATA_OUT_DATE as string,",
						"          ID_OUT_LOC as string,",
						"          NUM_PAT_AGENCY as string,",
						"          NUM_HOME_LIBR as string,",
						"          NUM_P_TYPE as string,",
						"          CODI_RECORD_PATRON as string,",
						"          CODI_RECORD_ITEM as string,",
						"          NUM_DE_BARRES as string,",
						"          NUM_CALL as string,",
						"          DESC_RECORD_BIBLIO as string,",
						"          CODI_LANG as string,",
						"          CODI_MAT_TYPE as string,",
						"          CODI_BIB_LVL as string,",
						"          CODI_COUNTRY as string,",
						"          CODI_008 as string,",
						"          CODI_020 as string,",
						"          CODI_022 as string,",
						"          CODI_CLASIF_CDU as string,",
						"          DESC_AUTHOR as string,",
						"          DESC_TITLE as string,",
						"          DESC_PUB_INFO as string,",
						"          CODI_IUSE3 as string,",
						"          CODI_INTL_USE as string,",
						"          CODI_IN_LOC as string,",
						"          CODI_PCODE1 as string,",
						"          CODI_PCODE3 as string,",
						"          CODI_PCODE2 as string,",
						"          {DESC_ADREÇA} as string,",
						"          CODI_PCODE4 as string,",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_AGENCY = AGENCY,",
						"          ID_LOCATION = LOCATION,",
						"          CODI_I_TYPE = {I TYPE},",
						"          DATA_OUT_DATE = {OUT DATE},",
						"          ID_OUT_LOC = {OUT LOC},",
						"          NUM_PAT_AGENCY = {PAT AGENCY},",
						"          NUM_HOME_LIBR = {HOME LIBR},",
						"          NUM_P_TYPE = {P TYPE},",
						"          CODI_RECORD_PATRON = {RECORD #(Patron)},",
						"          CODI_RECORD_ITEM = {RECORD #(Item)},",
						"          NUM_DE_BARRES = { DE BARRES},",
						"          NUM_CALL = {CALL #},",
						"          DESC_RECORD_BIBLIO = {RECORD #(BIBLIO)},",
						"          CODI_LANG = LANG,",
						"          CODI_MAT_TYPE = {MAT TYPE},",
						"          CODI_BIB_LVL = {BIB LVL},",
						"          CODI_COUNTRY = COUNTRY,",
						"          CODI_008 = {008 Data 1},",
						"          CODI_020 = {020},",
						"          CODI_022 = {022},",
						"          CODI_CLASIF_CDU = {CLASIF CDU},",
						"          DESC_AUTHOR = AUTHOR,",
						"          DESC_TITLE = TITLE,",
						"          DESC_PUB_INFO = {PUB INFO},",
						"          CODI_IUSE3 = IUSE3,",
						"          CODI_INTL_USE = {INTL USE},",
						"          CODI_IN_LOC = {IN LOC},",
						"          CODI_PCODE1 = PCODE1,",
						"          CODI_PCODE3 = PCODE3,",
						"          CODI_PCODE2 = PCODE2,",
						"          {DESC_ADREÇA} = {ADREÇA},",
						"          CODI_PCODE4 = PCODE4,",
						"          DATA_INSERCIO,",
						"          DATA_PERIODE",
						"     )) ~> STGHistFactPrestecs"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_PRESTECS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_HIST_FACT_PRESTECS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_STG_BEG_HIST_FACT_PROCEDENCIA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
								"type": "DatasetReference"
							},
							"name": "STGProcedencia"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "STG_BEG_HIST_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
								"type": "DatasetReference"
							},
							"name": "STGHistProcedencia"
						}
					],
					"transformations": [
						{
							"name": "Datas"
						},
						{
							"name": "CambiaNombres"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Data_Carrega as string",
						"}",
						"source(output(",
						"          Codi as string,",
						"          Significat as string,",
						"          {0} as string,",
						"          {-1} as string,",
						"          {-2} as string,",
						"          {-3} as string,",
						"          {-4} as string,",
						"          {-5} as string,",
						"          {-6} as string,",
						"          {-7} as string,",
						"          {-8} as string,",
						"          {-9} as string,",
						"          {-10} as string,",
						"          {-11} as string,",
						"          {-12} as string,",
						"          {-13} as string,",
						"          {-14} as string,",
						"          {-15} as string,",
						"          {-16} as string,",
						"          {-17} as string,",
						"          {-18} as string,",
						"          {-19} as string,",
						"          {-20} as string,",
						"          {-21} as string,",
						"          {-22} as string,",
						"          {-23} as string,",
						"          {  Totals  } as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGProcedencia",
						"STGProcedencia derive(DATA_INSERCIO = currentDate(),",
						"          DATA_PERIODE = toDate(concat($Data_Carrega, '01'),'yyyyMMdd')) ~> Datas",
						"Datas select(mapColumn(",
						"          ID_AGENCY = Codi,",
						"          DESC_BIBLIOTECA = Significat,",
						"          NUM_0 = {0},",
						"          NUM_1 = {-1},",
						"          NUM_2 = {-2},",
						"          NUM_3 = {-3},",
						"          NUM_4 = {-4},",
						"          NUM_5 = {-5},",
						"          NUM_6 = {-6},",
						"          NUM_7 = {-7},",
						"          NUM_8 = {-8},",
						"          NUM_9 = {-9},",
						"          NUM_10 = {-10},",
						"          NUM_11 = {-11},",
						"          NUM_12 = {-12},",
						"          NUM_13 = {-13},",
						"          NUM_14 = {-14},",
						"          NUM_15 = {-15},",
						"          NUM_16 = {-16},",
						"          NUM_17 = {-17},",
						"          NUM_18 = {-18},",
						"          NUM_19 = {-19},",
						"          NUM_20 = {-20},",
						"          NUM_21 = {-21},",
						"          NUM_22 = {-22},",
						"          NUM_23 = {-23},",
						"          NUM_TOTAL = {  Totals  },",
						"          DATA_INSERCIO,",
						"          DATA_PERIODE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> CambiaNombres",
						"CambiaNombres sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Codi as string,",
						"          Significat as string,",
						"          {0  -} as string,",
						"          {1  -} as string,",
						"          {2  -} as string,",
						"          {3  -} as string,",
						"          {4  -} as string,",
						"          {5  -} as string,",
						"          {6  -} as string,",
						"          {7  -} as string,",
						"          {8  -} as string,",
						"          {9  -} as string,",
						"          {10  -} as string,",
						"          {11  -} as string,",
						"          {12  -} as string,",
						"          {13  -} as string,",
						"          {14  -} as string,",
						"          {15  -} as string,",
						"          {16  -} as string,",
						"          {17  -} as string,",
						"          {18  -} as string,",
						"          {19  -} as string,",
						"          {20  -} as string,",
						"          {21  -} as string,",
						"          {22  -} as string,",
						"          {23  -} as string,",
						"          totals as string,",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> STGHistProcedencia"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_HIST_FACT_TOTAL_EXEMPLARS_PROCEDENCIA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "STGFactTotalBibliografics"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "HistFactTotalBibliografics"
						}
					],
					"transformations": [
						{
							"name": "Datas"
						},
						{
							"name": "RenombraCampos"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{-  Bad Code} as string,\n\t\t{a  Llibre} as string,\n\t\t{b  Revista} as string,\n\t\t{c  Partitura impr.} as string,\n\t\t{d  Partitura manus.} as string,\n\t\t{e  Mapa imprès} as string,\n\t\t{f  Mapa manuscrit} as string,\n\t\t{g  Vídeo DVD} as string,\n\t\t{i  Sonor no musical} as string,\n\t\t{j  Sonor musical} as string,\n\t\t{k  Gràfic} as string,\n\t\t{l  Article} as string,\n\t\t{m  Fitxer informàtic} as string,\n\t\t{n  Tesi} as string,\n\t\t{o  Equip} as string,\n\t\t{p  Material d'arxiu} as string,\n\t\t{r  Objecte} as string,\n\t\t{t  Manuscrit} as string,\n\t\t{u  Base de dades} as string,\n\t\t{v  Revista en línia} as string,\n\t\t{z  Llibre en línia} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTotalBibliografics\nSTGFactTotalBibliografics derive(DATA_INSERCIO = currentDate(),\n\t\tPERIODE = toDate(concat($Data_Carrega, '01'),'yyyyMMdd')) ~> Datas\nDatas select(mapColumn(\n\t\tID_LOCATION = Codi,\n\t\tDESC_BIBLIOTECA = Significat,\n\t\tNUM_BAD_CODE = {-  Bad Code},\n\t\tNUM_LLIBRE = {a  Llibre},\n\t\tNUM_REVISTA = {b  Revista},\n\t\tNUM_PARTITURA_IMPR = {c  Partitura impr.},\n\t\tNUM_PARTITURA_MANUS = {d  Partitura manus.},\n\t\tNUM_MAPA_IMPRES = {e  Mapa imprès},\n\t\tNUM_MAPA_MANUSCRIT = {f  Mapa manuscrit},\n\t\tNUM_VIDEO_DVD = {g  Vídeo DVD},\n\t\tNUM_SONOR_NO_MUSICAL = {i  Sonor no musical},\n\t\tNUM_SONOR_MUSICAL = {j  Sonor musical},\n\t\tNUM_GRAFIC = {k  Gràfic},\n\t\tNUM_ARTICLE = {l  Article},\n\t\tNUM_FITXER_INFORMATIC = {m  Fitxer informàtic},\n\t\tNUM_TESI = {n  Tesi},\n\t\tNUM_EQUIP = {o  Equip},\n\t\tNUM_MATERIAL_DARXIU = {p  Material d'arxiu},\n\t\tNUM_OBJECTE = {r  Objecte},\n\t\tNUM_MANUSCRIT = {t  Manuscrit},\n\t\tNUM_BASE_DE_DADES = {u  Base de dades},\n\t\tNUM_REVISTA_EN_LINEA = {v  Revista en línia},\n\t\tNUM_LLIBRE_EN_LINEA = {z  Llibre en línia},\n\t\tNUM_TOTAL = {  Totals  },\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE = PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenombraCampos\nRenombraCampos sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> HistFactTotalBibliografics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_BIBLIOGRAFICS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_HIST_FACT_TOTAL_BIBLIOGRAFICS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_STG_BEG_HIST_FACT_TOTAL_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "STGFactTotalHoldings"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "STG_BEG_HIST_FACT_TOTAL_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "HISTFactTotalHoldings"
						}
					],
					"transformations": [
						{
							"name": "Datas"
						},
						{
							"name": "RenombraCampos"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{-  Sense informar} as string,\n\t\t{0  Desconegut} as string,\n\t\t{1  Altres} as string,\n\t\t{2  Cessada} as string,\n\t\t{4  Es rep} as string,\n\t\t{5  No es rep} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTotalHoldings\nSTGFactTotalHoldings derive(DATA_INSERCIO = currentDate(),\n\t\tPERIODE = toDate(concat($Data_Carrega, '01'),'yyyyMMdd')) ~> Datas\nDatas select(mapColumn(\n\t\tID_LOCATION = Codi,\n\t\tDESC_BIBLIOTECA = Significat,\n\t\tNUM_SENSE_INFORMAR = {-  Sense informar},\n\t\tNUM_DESCONEGUT = {0  Desconegut},\n\t\tNUM_ALTRES = {1  Altres},\n\t\tNUM_CESSADA = {2  Cessada},\n\t\tNUM_ES_REP = {4  Es rep},\n\t\tNUM_NO_ES_REP = {5  No es rep},\n\t\tNUM_TOTAL = {  Totals  },\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE = PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenombraCampos\nRenombraCampos sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> HISTFactTotalHoldings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_HOLDINGS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_HIST_FACT_TOTAL_HOLDINGS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_STG_BEG_HIST_FACT_TOTAL_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_USUARIS",
								"type": "DatasetReference"
							},
							"name": "STGFactTotalUsuaris"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "STG_BEG_HIST_FACT_TOTAL_USUARIS",
								"type": "DatasetReference"
							},
							"name": "HistFactTotalUsuaris"
						}
					],
					"transformations": [
						{
							"name": "Datas"
						},
						{
							"name": "RenombrarCampos"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{10  General intern} as string,\n\t\t{11  Bad Code} as string,\n\t\t{20  General extern} as string,\n\t\t{25  BEG} as string,\n\t\t{30  Personal de la biblioteca} as string,\n\t\t{110  Institució interna} as string,\n\t\t{120  Institució externa} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTotalUsuaris\nSTGFactTotalUsuaris derive(DATA_INSERCIO = currentDate(),\n\t\tPERIODE = toDate(concat($Data_Carrega, '01'),'yyyyMMdd')) ~> Datas\nDatas select(mapColumn(\n\t\tID_LOCATION = Codi,\n\t\tDESC_BIBLIOTECA = Significat,\n\t\tNUM_GENERAL_INTERN = {10  General intern},\n\t\tNUM_BAD_CODE = {11  Bad Code},\n\t\tNUM_GENERAL_EXTERN = {20  General extern},\n\t\tNUM_BEG = {25  BEG},\n\t\tNUM_PERSONAL_DE_LA_BIBLIOTECA = {30  Personal de la biblioteca},\n\t\tNUM_INSTITUCIO_INTERNA = {110  Institució interna},\n\t\tNUM_INSTITUCIO_EXTERNA = {120  Institució externa},\n\t\tNUM_TOTALS = {  Totals  },\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE = PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenombrarCampos\nRenombrarCampos sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> HistFactTotalUsuaris"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TOTAL_USUARIS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_HIST_FACT_TOTAL_USUARIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_STG_BEG_HIST_FACT_TRANSACCIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TRANSACCIONS",
								"type": "DatasetReference"
							},
							"name": "STGFactTransaccions"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "STG_BEG_HIST_FACT_TRANSACCIONS",
								"type": "DatasetReference"
							},
							"name": "STGHistTransaccions"
						}
					],
					"transformations": [
						{
							"name": "Datas"
						},
						{
							"name": "RenombraCampos"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\t{Grup estadístic} as string,\n\t\t{préstecs} as string,\n\t\tretorns as string,\n\t\trenovacions as string,\n\t\treserves as string,\n\t\t{Hl/RECLL} as string,\n\t\t{TOTAL #} as string,\n\t\tPERCENT as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTransaccions\nSTGFactTransaccions derive(DATA_INSERCIO = currentDate(),\n\t\tPERIODE = toDate(concat($Data_Carrega, '01'),'yyyyMMdd')) ~> Datas\nDatas select(mapColumn(\n\t\tID_TERMINAL = {Grup estadístic},\n\t\tNUM_PRESTECS = {préstecs},\n\t\tNUM_RETORNS = retorns,\n\t\tNUM_RENOVACIONS = renovacions,\n\t\tNUM_RESERVES = reserves,\n\t\tNUM_HI_RECLL = {Hl/RECLL},\n\t\tNUM_TOTAL = {TOTAL #},\n\t\tNUM_PERCENT = PERCENT,\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE = PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenombraCampos\nRenombraCampos sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> STGHistTransaccions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_BEG_FACT_TRANSACCIONS')]",
				"[concat(variables('factoryId'), '/datasets/STG_BEG_HIST_FACT_TRANSACCIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureSqlDatabase55')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureSqlDatabase55_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureSqlDatabase55_properties_groupId')]",
				"fqdns": "[parameters('AzureSqlDatabase55_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}
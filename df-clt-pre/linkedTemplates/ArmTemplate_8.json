{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "df-clt-pre"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_FACT_INDICADORS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "ODSFactIndicadors"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMFactIndicadors"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tID_AGENCY as string,\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tVALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tPERIODE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSFactIndicadors\nODSFactIndicadors sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_AGENCY as string,\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as double,\n\t\tDATA_PERIODE as date,\n\t\tDATA_INSERCIO as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DMFactIndicadors"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_MUNICIPI')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_TERRITORIAL_MUNICIPI",
								"type": "DatasetReference"
							},
							"name": "STGMunicipi"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERRITORIAL_MUNICIPI",
								"type": "DatasetReference"
							},
							"name": "DMMunicipi"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          INE_Municipi as string,",
						"          INE_Comarca as string,",
						"          INE_Provincia as string,",
						"          Nom_Municipi as string,",
						"          Nom_Municipi_cat as string,",
						"          CP as string,",
						"          Altitud as integer,",
						"          Superficie as decimal(6,2),",
						"          Cap_Pais as boolean,",
						"          Cap_Comunitat_Autonoma as boolean,",
						"          Cap_Provincia as boolean,",
						"          Cap_Comarca as boolean,",
						"          IDAmbit as string,",
						"          cod_sstt as integer,",
						"          Data_baixa as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGMunicipi",
						"STGMunicipi sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          INE_MUNICIPI as string,",
						"          INE_COMARCA as string,",
						"          INE_PROVINCIA as string,",
						"          DESC_MUNICIPI as string,",
						"          DESC_MUNICIPI_CAT as string,",
						"          CP as string,",
						"          NUM_ALTITUD as integer,",
						"          NUM_SUPERFICIE as decimal(6,2),",
						"          FLAG_CAPITAL_PAIS as boolean,",
						"          FLAG_CAPITAL_COMUNIDAD_AUTONOMA as boolean,",
						"          FLAG_CAPITAL_PROVINCIA as boolean,",
						"          FLAG_CAPITAL_COMARCA as boolean,",
						"          ID_AMBIT_TERRITORIAL as string,",
						"          CODI_SSTT as integer,",
						"          DATA_BAIXA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          INE_MUNICIPI = INE_Municipi,",
						"          INE_COMARCA = INE_Comarca,",
						"          INE_PROVINCIA = INE_Provincia,",
						"          DESC_MUNICIPI = Nom_Municipi,",
						"          DESC_MUNICIPI_CAT = Nom_Municipi_cat,",
						"          CP,",
						"          NUM_ALTITUD = Altitud,",
						"          NUM_SUPERFICIE = Superficie,",
						"          FLAG_CAPITAL_PAIS = Cap_Pais,",
						"          FLAG_CAPITAL_COMUNIDAD_AUTONOMA = Cap_Comunitat_Autonoma,",
						"          FLAG_CAPITAL_PROVINCIA = Cap_Provincia,",
						"          FLAG_CAPITAL_COMARCA = Cap_Comarca,",
						"          ID_AMBIT_TERRITORIAL = IDAmbit,",
						"          CODI_SSTT = cod_sstt,",
						"          DATA_BAIXA = Data_baixa",
						"     )) ~> DMMunicipi"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BEG_PROVINCIA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_TERRITORIAL_PROVINCIA",
								"type": "DatasetReference"
							},
							"name": "STGProvincia"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_TERRITORIAL_PROVINCIA",
								"type": "DatasetReference"
							},
							"name": "DMProvincia"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          INE_Provincia as string,",
						"          INE_Comunitat_Autonoma as string,",
						"          Nom_Provincia as string,",
						"          Nom_Provincia_cat as string,",
						"          Data_baixa as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGProvincia",
						"STGProvincia sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          INE_PROVINCIA as string,",
						"          INE_COMUNITAT_AUTONOMA as string,",
						"          DESC_PROVINCIA as string,",
						"          DESC_PROVINCIA_CAT as string,",
						"          DATA_BAIXA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          INE_PROVINCIA = INE_Provincia,",
						"          INE_COMUNITAT_AUTONOMA = INE_Comunitat_Autonoma,",
						"          DESC_PROVINCIA = Nom_Provincia,",
						"          DESC_PROVINCIA_CAT = Nom_Provincia_cat,",
						"          DATA_BAIXA = Data_baixa",
						"     )) ~> DMProvincia"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_BIBLIOTEQUES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_BIBLIOTEQUES_DIBICA",
								"type": "DatasetReference"
							},
							"name": "STGBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_DIBICA_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMBiblioteques"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          id_biblioteca as integer,",
						"          id_usuari as integer,",
						"          codi as string,",
						"          id_tipus as integer,",
						"          id_modul as integer,",
						"          niden as string,",
						"          id_estat as integer,",
						"          denominacio as string,",
						"          data_alta_biblio as timestamp,",
						"          data_baixa_biblio as timestamp,",
						"          id_tipus_via as integer,",
						"          nom_via as string,",
						"          numero_via as string,",
						"          ine_municipi as string,",
						"          id_districte as integer,",
						"          cp as string,",
						"          utmx as double,",
						"          utmy as double,",
						"          longitud as double,",
						"          latitud as double,",
						"          telefon as string,",
						"          extensio as string,",
						"          fax as string,",
						"          email as string,",
						"          web as string,",
						"          beg as boolean,",
						"          slpc as boolean,",
						"          id_mapa as integer,",
						"          id_categoria as integer,",
						"          id_titularitat as integer,",
						"          finan_adm_central as decimal(18,2),",
						"          finan_generalitat as decimal(18,2),",
						"          finan_diputacio as decimal(18,2),",
						"          finan_con_comarcal as decimal(18,2),",
						"          finan_ajuntament as decimal(18,2),",
						"          finan_universitat as decimal(18,2),",
						"          finan_privada as decimal(18,2),",
						"          finan_altres as decimal(18,2),",
						"          id_forma_acces as integer,",
						"          es_cataleg_colectiu_cclp as boolean,",
						"          web_cataleg_colectiu_cclp as string,",
						"          es_cataleg_colectiu_dip_bcn as boolean,",
						"          web_cataleg_colectiu_dip_bcn as string,",
						"          es_cataleg_colectiu_ccuc as boolean,",
						"          web_cataleg_colectiu_ccuc as string,",
						"          es_cataleg_colectiu_beg as boolean,",
						"          web_cataleg_colectiu_beg as string,",
						"          es_cataleg_colectiu_altres as boolean,",
						"          web_cataleg_colectiu_altres as string,",
						"          id_director_tractament as integer,",
						"          director_nom as string,",
						"          director_primer_cognom as string,",
						"          director_segon_cognom as string,",
						"          adaptada as boolean,",
						"          observacions as string,",
						"          obs_itineraris as string,",
						"          data_alta as timestamp,",
						"          id_usuari_alta as integer,",
						"          data_modif as timestamp,",
						"          id_usuari_modif as integer,",
						"          data_baixa as timestamp,",
						"          id_usuari_baixa as integer,",
						"          id_adscripcio as integer,",
						"          id_categoria_esp as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGBiblioteques",
						"STGBiblioteques sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_BIBLIOTECA = id_biblioteca,",
						"          ID_USUARI = id_usuari,",
						"          CODI_BIBLIOTECA = codi,",
						"          ID_TIPUS = id_tipus,",
						"          ID_MODUL = id_modul,",
						"          CODI_NIDEN = niden,",
						"          ID_ESTAT = id_estat,",
						"          DESC_BIBLIOTECA = denominacio,",
						"          DATA_ALTA_BIBLIO = data_alta_biblio,",
						"          DATA_BAIXA_BIBLIO = data_baixa_biblio,",
						"          ID_TIPUS_VIA = id_tipus_via,",
						"          DESC_VIA = nom_via,",
						"          NUM_VIA = numero_via,",
						"          INE_MUNICIPI = ine_municipi,",
						"          ID_DISTRICTE = id_districte,",
						"          CP = cp,",
						"          UTMX = utmx,",
						"          UTMY = utmy,",
						"          NUM_LONGITUD = longitud,",
						"          NUM_LATITUD = latitud,",
						"          NUM_TELEFON = telefon,",
						"          NUM_EXTENSIO = extensio,",
						"          NUM_FAX = fax,",
						"          DESC_EMAIL = email,",
						"          DESC_WEB = web,",
						"          FLAG_BEG = beg,",
						"          FLAG_SLPC = slpc,",
						"          ID_MAPA = id_mapa,",
						"          ID_CATEGORIA = id_categoria,",
						"          ID_TITULARITAT = id_titularitat,",
						"          ID_FORMA_ACCES = id_forma_acces,",
						"          ES_CATALEG_COLECTIU_CCLP = es_cataleg_colectiu_cclp,",
						"          WEB_CATALEG_COLECTIU_CCLP = web_cataleg_colectiu_cclp,",
						"          ES_CATALEG_COLECTIU_DIP_BCN = es_cataleg_colectiu_dip_bcn,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN = web_cataleg_colectiu_dip_bcn,",
						"          ES_CATALEG_COLECTIU_CCUC = es_cataleg_colectiu_ccuc,",
						"          WEB_CATALEG_COLECTIU_CCUC = web_cataleg_colectiu_ccuc,",
						"          ES_CATALEG_COLECTIU_BEG = es_cataleg_colectiu_beg,",
						"          WEB_CATALEG_COLECTIU_BEG = web_cataleg_colectiu_beg,",
						"          ES_CATALEG_COLECTIU_ALTRES = es_cataleg_colectiu_altres,",
						"          WEB_CATALEG_COLECTIU_ALTRES = web_cataleg_colectiu_altres,",
						"          ID_DIRECTOR_TRACTAMENT = id_director_tractament,",
						"          DESC_DIRECTOR_NOMB = director_nom,",
						"          DESC_DIRECTOR_PRIMER_COGNOM = director_primer_cognom,",
						"          DESC_DIRECTOR_SEGON_COGNOM = director_segon_cognom,",
						"          FLAG_ADAPTADA = adaptada,",
						"          DESC_OBSERVACIONS = observacions,",
						"          OBS_ITINERARIS = obs_itineraris,",
						"          DATA_ALTA = data_alta,",
						"          ID_USUARI_ALTA = id_usuari_alta,",
						"          DATA_MODIF = data_modif,",
						"          ID_USUARI_MODIF = id_usuari_modif,",
						"          DATA_BAIXA = data_baixa,",
						"          ID_USUARI_BAIXA = id_usuari_baixa,",
						"          ID_ADSCRIPCIO = id_adscripcio,",
						"          ID_CATEGORIA_ESP = id_categoria_esp",
						"     )) ~> DMBiblioteques"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_CATEGORIA_ESP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_DIB_DIM_CATEGORIA_ESP",
								"type": "DatasetReference"
							},
							"name": "STGDimCategoriaEsp"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_DIB_DIM_CATEGORIA_ESP",
								"type": "DatasetReference"
							},
							"name": "DMDimCategoriaEsp"
						}
					],
					"transformations": [
						{
							"name": "RenombrarCampos"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_categoria_esp as integer,",
						"          desc_categoria_esp as string,",
						"          data_alta as timestamp,",
						"          id_usuari_alta as integer,",
						"          data_modif as timestamp,",
						"          id_usuari_modif as integer,",
						"          data_baixa as timestamp,",
						"          id_usuari_baixa as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGDimCategoriaEsp",
						"STGDimCategoriaEsp select(mapColumn(",
						"          ID_CATEGORIA_ESP = id_categoria_esp,",
						"          DESC_CATEGORIA_ESP = desc_categoria_esp,",
						"          DATA_ALTA = data_alta,",
						"          ID_USUARI_ALTA = id_usuari_alta,",
						"          DATA_MODIF = data_modif,",
						"          ID_USUARI_MODIF = id_usuari_modif,",
						"          DATA_BAIXA = data_baixa,",
						"          ID_USUARI_BAIXA = id_usuari_baixa",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenombrarCampos",
						"RenombrarCampos sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMDimCategoriaEsp"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_DICC_LLOCS_TREBALL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_DIB_DICC_LLOCS_TREBALL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_DIB_DIM_DICC_LLOCS_TREBALL",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_DICC_TRACTAMENTS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_DIB_DIM_DICC_TRACTAMENTS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_DIB_DIM_DICC_TRACTAMENTS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_HORARIS_HIVERN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_DIM_HORARIS_HIVERN_DIBICA",
								"type": "DatasetReference"
							},
							"name": "STGHorarisHivern"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_DIBICA_HORARIS_HIVERN",
								"type": "DatasetReference"
							},
							"name": "DMHorarisHivern"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          id_horari_hivern as integer,",
						"          id_biblioteca as integer,",
						"          dl_mati_ini as string,",
						"          dl_mati_fi as string,",
						"          dl_tarda_ini as string,",
						"          dl_tarda_fi as string,",
						"          dt_mati_ini as string,",
						"          dt_mati_fi as string,",
						"          dt_tarda_ini as string,",
						"          dt_tarda_fi as string,",
						"          dc_mati_ini as string,",
						"          dc_mati_fi as string,",
						"          dc_tarda_ini as string,",
						"          dc_tarda_fi as string,",
						"          dj_mati_ini as string,",
						"          dj_mati_fi as string,",
						"          dj_tarda_ini as string,",
						"          dj_tarda_fi as string,",
						"          dv_mati_ini as string,",
						"          dv_mati_fi as string,",
						"          dv_tarda_ini as string,",
						"          dv_tarda_fi as string,",
						"          ds_mati_ini as string,",
						"          ds_mati_fi as string,",
						"          ds_tarda_ini as string,",
						"          ds_tarda_fi as string,",
						"          dg_mati_ini as string,",
						"          dg_mati_fi as string,",
						"          dg_tarda_ini as string,",
						"          dg_tarda_fi as string,",
						"          resum as string,",
						"          observacions as string,",
						"          data_alta as timestamp,",
						"          id_usuari_alta as integer,",
						"          data_modif as timestamp,",
						"          id_usuari_modif as integer,",
						"          data_baixa as timestamp,",
						"          id_usuari_baixa as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGHorarisHivern",
						"STGHorarisHivern sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_HORARI_HIVERN as integer,",
						"          ID_BIBLIOTECA as integer,",
						"          NUM_DL_MATI_INI as string,",
						"          NUM_DL_MATI_FI as string,",
						"          NUM_DL_TARDA_INI as string,",
						"          NUM_DL_TARDA_FI as string,",
						"          NUM_DT_MATI_INI as string,",
						"          NUM_DT_MATI_FI as string,",
						"          NUM_DT_TARDA_INI as string,",
						"          NUM_DT_TARDA_FI as string,",
						"          NUM_DC_MATI_INI as string,",
						"          NUM_DC_MATI_FI as string,",
						"          NUM_DC_TARDA_INI as string,",
						"          NUM_DC_TARDA_FI as string,",
						"          NUM_DJ_MATI_INI as string,",
						"          NUM_DJ_MATI_FI as string,",
						"          NUM_DJ_TARDA_INI as string,",
						"          NUM_DJ_TARDA_FI as string,",
						"          NUM_DV_MATI_INI as string,",
						"          NUM_DV_MATI_FI as string,",
						"          NUM_DV_TARDA_INI as string,",
						"          NUM_DV_TARDA_FI as string,",
						"          NUM_DS_MATI_INI as string,",
						"          NUM_DS_MATI_FI as string,",
						"          NUM_DS_TARDA_INI as string,",
						"          NUM_DS_TARDA_FI as string,",
						"          NUM_DG_MATI_INI as string,",
						"          NUM_DG_MATI_FI as string,",
						"          NUM_DG_TARDA_INI as string,",
						"          NUM_DG_TARDA_FI as string,",
						"          DESC_RESUM as string,",
						"          DESC_OBSERVACIONS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_HORARI_HIVERN = id_horari_hivern,",
						"          ID_BIBLIOTECA = id_biblioteca,",
						"          NUM_DL_MATI_INI = dl_mati_ini,",
						"          NUM_DL_MATI_FI = dl_mati_fi,",
						"          NUM_DL_TARDA_INI = dl_tarda_ini,",
						"          NUM_DL_TARDA_FI = dl_tarda_fi,",
						"          NUM_DT_MATI_INI = dt_mati_ini,",
						"          NUM_DT_MATI_FI = dt_mati_fi,",
						"          NUM_DT_TARDA_INI = dt_tarda_ini,",
						"          NUM_DT_TARDA_FI = dt_tarda_fi,",
						"          NUM_DC_MATI_INI = dc_mati_ini,",
						"          NUM_DC_MATI_FI = dc_mati_fi,",
						"          NUM_DC_TARDA_INI = dc_tarda_ini,",
						"          NUM_DC_TARDA_FI = dc_tarda_fi,",
						"          NUM_DJ_MATI_INI = dj_mati_ini,",
						"          NUM_DJ_MATI_FI = dj_mati_fi,",
						"          NUM_DJ_TARDA_INI = dj_tarda_ini,",
						"          NUM_DJ_TARDA_FI = dj_tarda_fi,",
						"          NUM_DV_MATI_INI = dv_mati_ini,",
						"          NUM_DV_MATI_FI = dv_mati_fi,",
						"          NUM_DV_TARDA_INI = dv_tarda_ini,",
						"          NUM_DV_TARDA_FI = dv_tarda_fi,",
						"          NUM_DS_MATI_INI = ds_mati_ini,",
						"          NUM_DS_MATI_FI = ds_mati_fi,",
						"          NUM_DS_TARDA_INI = ds_tarda_ini,",
						"          NUM_DS_TARDA_FI = ds_tarda_fi,",
						"          NUM_DG_MATI_INI = dg_mati_ini,",
						"          NUM_DG_MATI_FI = dg_mati_fi,",
						"          NUM_DG_TARDA_INI = dg_tarda_ini,",
						"          NUM_DG_TARDA_FI = dg_tarda_fi,",
						"          DESC_RESUM = resum,",
						"          DESC_OBSERVACIONS = observacions,",
						"          DATA_ALTA = data_alta,",
						"          ID_USUARI_ALTA = id_usuari_alta,",
						"          DATA_MODIF = data_modif,",
						"          ID_USUARI_MODIF = id_usuari_modif,",
						"          DATA_BAIXA = data_baixa,",
						"          ID_USUARI_BAIXA = id_usuari_baixa",
						"     )) ~> DMHorarisHivern"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_ROLS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_DIB_DIM_ROLS",
								"type": "DatasetReference"
							},
							"name": "STGRols"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_DIB_DIM_ROLS",
								"type": "DatasetReference"
							},
							"name": "DMRols"
						}
					],
					"transformations": [
						{
							"name": "FiltroRol"
						}
					],
					"scriptLines": [
						"source(output(",
						"          idRol as integer,",
						"          DESC_ROL as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGRols",
						"STGRols filter(in([1,4,5],idRol)) ~> FiltroRol",
						"FiltroRol sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMRols"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_FACT_PRESTECS_ANUALS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_BEG_PRESTECS_ANUALS",
								"type": "DatasetReference"
							},
							"name": "ODSConsulta2"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "Bibliotecas"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DimIndicadors"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_PRESTECS_ANUALS",
								"type": "DatasetReference"
							},
							"name": "DMFactPrestecsAnuals"
						}
					],
					"transformations": [
						{
							"name": "Join"
						},
						{
							"name": "Select"
						},
						{
							"name": "NullsEnCero"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "join1"
						},
						{
							"name": "FiltroPrestecAnual"
						},
						{
							"name": "Datas"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Data_Carrega as string",
						"}",
						"source(output(",
						"          id_biblioteca as string,",
						"          codi_indicador as string,",
						"          valor as integer,",
						"          data_periode as date,",
						"          data_insercio as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSConsulta2",
						"source(output(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_AGENCY as string,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Bibliotecas",
						"source(output(",
						"          ID_INDICADOR as string,",
						"          CODI_INDICADOR as string,",
						"          DESC_INDICADOR as string,",
						"          DESC_COMO_CALCULAR as string,",
						"          FLAG_FITXER as string,",
						"          FLAG_PRESTECS as string,",
						"          FLAG_DATAENTRY as string,",
						"          FLAG_NO_PERIODICS as string,",
						"          FILA_LEVEL_1 as string,",
						"          FILA_LEVEL_2 as string,",
						"          FILA_LEVEL_3 as string,",
						"          FILA_LEVEL_4 as string,",
						"          FILA_LEVEL_5 as string,",
						"          COLUMNA_LEVEL_1 as string,",
						"          COLUMNA_LEVEL_2 as string,",
						"          ID_SECCIO as string,",
						"          IND_ORDRE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimIndicadors",
						"ODSConsulta2, join1 join(ODSConsulta2@id_biblioteca == ID_AGENCY",
						"     && ODSConsulta2@codi_indicador == DimIndicadors@CODI_INDICADOR,",
						"     joinType:'right',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Join",
						"Join select(mapColumn(",
						"          ID_AGENCY,",
						"          CODI_BIBLIOTECA,",
						"          CODI_INDICADOR = DimIndicadors@CODI_INDICADOR,",
						"          IND_VALOR = valor,",
						"          DATA_PERIODE = data_periode,",
						"          DATA_INSERCIO = data_insercio",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"Datas derive(IND_VALOR = iifNull(IND_VALOR,0)) ~> NullsEnCero",
						"NullsEnCero alterRow(upsertIf(true())) ~> AlterRow1",
						"Bibliotecas, FiltroPrestecAnual join(FLAG_PRESTECS == '1' && CODI_BIBLIOTECA == CODI_BIBLIOTECA,",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"DimIndicadors filter(in(['IND_7_21','IND_7_22','IND_7_23','IND_7_24','IND_7_25','IND_7_26'],CODI_INDICADOR)) ~> FiltroPrestecAnual",
						"Select derive(DATA_PERIODE = toDate(concat(toString(toInteger(substring($Data_Carrega,0,4))-1),'12','01'),'yyyyMMdd'),",
						"          DATA_INSERCIO = currentDate()) ~> Datas",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_PERIODE as date,",
						"          DATA_INSERCIO as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CODI_BIBLIOTECA','CODI_INDICADOR','DATA_PERIODE'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactPrestecsAnuals"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_NO_PERIODICS_A_DATA_ENTRY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_INDICADORS",
								"type": "DatasetReference"
							},
							"name": "DMFactDataEntrySource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_BEG_FACT_DATA_ENTRY",
								"type": "DatasetReference"
							},
							"name": "DMFactDataEntrySink"
						}
					],
					"transformations": [
						{
							"name": "FiltrarMes"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Data_Carrega as string",
						"}",
						"source(output(",
						"          ID_AGENCY as string,",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMFactDataEntrySource",
						"DMFactDataEntrySource filter(addMonths(toDate(concat($Data_Carrega,'01'),'yyyyMMdd'),-1) == DATA_PERIODE) ~> FiltrarMes",
						"FiltrarMes sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_BIBLIOTECA as string,",
						"          DATA_PERIODE as date,",
						"          IND_1_4 as double,",
						"          IND_2_1111 as double,",
						"          IND_2_1113 as double,",
						"          IND_2_1122 as double,",
						"          IND_2_113 as double,",
						"          IND_2_114 as double,",
						"          IND_2_115 as double,",
						"          IND_2_121 as double,",
						"          IND_2_122 as double,",
						"          IND_2_123 as double,",
						"          IND_2_2111 as double,",
						"          IND_2_2113 as double,",
						"          IND_2_2122 as double,",
						"          IND_2_213 as double,",
						"          IND_2_214 as double,",
						"          IND_2_215 as double,",
						"          IND_2_221 as double,",
						"          IND_2_222 as double,",
						"          IND_2_223 as double,",
						"          IND_2_4111 as double,",
						"          IND_2_4113 as double,",
						"          IND_2_4122 as double,",
						"          IND_2_413 as double,",
						"          IND_2_414 as double,",
						"          IND_2_415 as double,",
						"          IND_2_421 as double,",
						"          IND_2_422 as double,",
						"          IND_2_423 as double,",
						"          IND_2_5111 as double,",
						"          IND_2_5113 as double,",
						"          IND_2_5122 as double,",
						"          IND_2_513 as double,",
						"          IND_2_514 as double,",
						"          IND_2_515 as double,",
						"          IND_2_521 as double,",
						"          IND_2_522 as double,",
						"          IND_2_523 as double,",
						"          IND_2_71 as double,",
						"          IND_2_72 as double,",
						"          IND_2_73 as double,",
						"          IND_2_74 as double,",
						"          IND_4_111 as double,",
						"          IND_4_112 as double,",
						"          IND_4_122 as double,",
						"          IND_4_123 as double,",
						"          IND_4_21 as double,",
						"          IND_4_22 as double,",
						"          IND_4_31 as double,",
						"          IND_4_32 as double,",
						"          IND_5_1 as double,",
						"          IND_5_2 as double,",
						"          IND_5_3 as double,",
						"          IND_5_41 as double,",
						"          IND_5_42 as double,",
						"          IND_5_5 as double,",
						"          IND_5_6 as double,",
						"          IND_5_7 as double,",
						"          IND_5_8 as double,",
						"          IND_5_9 as double,",
						"          IND_6_4 as double,",
						"          IND_8_1311 as double,",
						"          IND_8_1312 as double,",
						"          IND_8_132 as double,",
						"          IND_8_1411 as double,",
						"          IND_8_1412 as double,",
						"          IND_8_142 as double,",
						"          IND_8_1511 as double,",
						"          IND_8_1512 as double,",
						"          IND_8_152 as double,",
						"          IND_8_2311 as double,",
						"          IND_8_2312 as double,",
						"          IND_8_232 as double,",
						"          IND_8_2411 as double,",
						"          IND_8_2412 as double,",
						"          IND_8_242 as double,",
						"          IND_8_2511 as double,",
						"          IND_8_2512 as double,",
						"          IND_8_252 as double,",
						"          IND_8_311 as double,",
						"          IND_8_312 as double,",
						"          IND_8_313 as double,",
						"          IND_8_321 as double,",
						"          IND_8_322 as double,",
						"          IND_8_323 as double,",
						"          IND_9_2 as double,",
						"          IND_9_011 as double,",
						"          IND_9_012 as double,",
						"          IND_9_013 as double,",
						"          IND_9_015 as double,",
						"          IND_9_016 as double,",
						"          IND_9_020 as double,",
						"          IND_9_0223 as double,",
						"          IND_9_0231 as double,",
						"          IND_9_0232 as double,",
						"          IND_9_0233 as double,",
						"          IND_9_02411 as double,",
						"          IND_9_02412 as double,",
						"          IND_9_02413 as double,",
						"          IND_9_02421 as double,",
						"          IND_9_02422 as double,",
						"          IND_9_02423 as double,",
						"          IND_9_025 as double,",
						"          IND_9_026 as double,",
						"          IND_10_11 as double,",
						"          IND_10_13 as double,",
						"          IND_10_14 as double,",
						"          IND_10_15 as double,",
						"          IND_10_1613 as double,",
						"          IND_10_1614 as double,",
						"          IND_10_1615 as double,",
						"          IND_10_162 as double,",
						"          IND_10_17 as double,",
						"          IND_10_18 as double,",
						"          IND_10_21 as double,",
						"          IND_10_24 as double,",
						"          IND_10_25 as double,",
						"          IND_10_2612 as double,",
						"          IND_10_2613 as double,",
						"          IND_10_2614 as double,",
						"          IND_10_2615 as double,",
						"          IND_10_262 as double,",
						"          IND_10_27 as double,",
						"          IND_10_28 as double,",
						"          IND_11_11 as double,",
						"          IND_11_12 as double,",
						"          IND_11_13 as double,",
						"          IND_11_14 as double,",
						"          IND_11_15 as double,",
						"          IND_11_51 as double,",
						"          IND_11_52 as double,",
						"          IND_11_53 as double,",
						"          IND_11_54 as double,",
						"          IND_11_55 as double,",
						"          IND_16_1 as double,",
						"          IND_16_2 as double,",
						"          IND_16_3 as double,",
						"          IND_16_51 as double,",
						"          IND_16_52 as double,",
						"          IND_16_53 as double,",
						"          IND_16_54 as double,",
						"          IND_16_61 as double,",
						"          IND_16_62 as double,",
						"          IND_16_63 as double,",
						"          IND_16_64 as double,",
						"          IND_16_7 as double,",
						"          IND_16_8 as double,",
						"          IND_17_1 as double,",
						"          IND_17_2 as double,",
						"          IND_17_3 as double,",
						"          IND_19_1 as double,",
						"          IND_19_2 as double,",
						"          IND_19_3 as double,",
						"          IND_19_4 as double,",
						"          IND_19_5 as double,",
						"          IND_20_1 as double,",
						"          IND_20_2 as double,",
						"          IND_20_3 as double,",
						"          IND_20_4 as double,",
						"          IND_20_5 as double,",
						"          IND_21_1 as double,",
						"          IND_21_2 as double,",
						"          IND_21_3 as double,",
						"          IND_21_4 as double,",
						"          IND_5_10 as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactDataEntrySink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_ALTES_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_ALTES_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "STGFactAltesBibliografics"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "DimLocations"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMDimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesBibliografics"
						}
					],
					"transformations": [
						{
							"name": "CalcularIndicadores"
						},
						{
							"name": "CambiarNombre"
						},
						{
							"name": "EliminarColumnas"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "QuitarNulos"
						},
						{
							"name": "Join"
						},
						{
							"name": "SelectLocation"
						},
						{
							"name": "ConvierteNullEnCero"
						},
						{
							"name": "join1"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{a  Llibre} as string,\n\t\t{b  Revista} as string,\n\t\t{c  Partitura impr.} as string,\n\t\t{d  Partitura manus.} as string,\n\t\t{e  Mapa imprès} as string,\n\t\t{f  Mapa manuscrit} as string,\n\t\t{g  Vídeo DVD} as string,\n\t\t{i  Sonor no musical} as string,\n\t\t{j  Sonor musical} as string,\n\t\t{k  Gràfic} as string,\n\t\t{l  Article} as string,\n\t\t{m  Fitxer informàtic} as string,\n\t\t{n  Tesi} as string,\n\t\t{o  Equip} as string,\n\t\t{p  Material d'arxiu} as string,\n\t\t{r  Objecte} as string,\n\t\t{t  Manuscrit} as string,\n\t\t{u  Base de dades} as string,\n\t\t{v  Revista en línia} as string,\n\t\t{z  Llibre en línia} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactAltesBibliografics\nsource(output(\n\t\tID_LOCATION as string,\n\t\tID_TERMINAL as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimLocations\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimBiblioteques\nQuitarNulos derive(IND_3_91 = toInteger(toInteger(replace(trim({a  Llibre}),'.',''))+toInteger(replace(trim({z  Llibre en línia}),'.',''))),\n\t\tIND_3_92 = toInteger(toInteger(replace(trim({i  Sonor no musical}),'.',''))+toInteger(replace(trim({j  Sonor musical}),'.',''))),\n\t\tIND_3_93 = toInteger(replace(trim({g  Vídeo DVD}),'.','')),\n\t\tIND_3_94 = toInteger(replace(trim({m  Fitxer informàtic}),'.','')),\n\t\tIND_3_95 = toInteger(replace(trim({b  Revista}),'.',''))+toInteger(replace(trim({v  Revista en línia}),'.','')),\n\t\tIND_3_96 = toInteger(replace(trim({c  Partitura impr.}),'.',''))+toInteger(replace(trim({d  Partitura manus.}),'.','')),\n\t\tIND_3_97 = toInteger(replace(trim({e  Mapa imprès}),'.',''))+toInteger(replace(trim({f  Mapa manuscrit}),'.','')),\n\t\tIND_3_99 = toInteger(replace(trim({o  Equip}),'.','')),\n\t\tIND_3_910 = toInteger(replace(trim({p  Material darxiu}),'.','')),\n\t\tIND_3_9011 = toInteger(replace(trim({r  Objecte}),'.',''))+toInteger(replace(trim({k  Gràfic}),'.','')),\n\t\tIND_3_9012 = toInteger(replace(trim({t  Manuscrit}),'.','')),\n\t\tIND_3_9013 = toInteger(replace(trim({l  Article}),'.','')),\n\t\tIND_3_9014 = toInteger(replace(trim({n  Tesi}),'.','')),\n\t\tIND_3_9015 = toInteger(replace(trim({u  Base de dades}),'.',''))) ~> CalcularIndicadores\njoin1 select(mapColumn(\n\t\tSignificat,\n\t\t{a  Llibre},\n\t\t{b  Revista},\n\t\t{c  Partitura impr.},\n\t\t{d  Partitura manus.},\n\t\t{e  Mapa imprès},\n\t\t{f  Mapa manuscrit},\n\t\t{g  Vídeo DVD},\n\t\t{i  Sonor no musical},\n\t\t{j  Sonor musical},\n\t\t{k  Gràfic},\n\t\t{l  Article},\n\t\t{m  Fitxer informàtic},\n\t\t{n  Tesi},\n\t\t{o  Equip},\n\t\t{p  Material darxiu} = {p  Material d'arxiu},\n\t\t{r  Objecte},\n\t\t{t  Manuscrit},\n\t\t{u  Base de dades},\n\t\t{v  Revista en línia},\n\t\t{z  Llibre en línia},\n\t\tCODI_BIBLIOTECA = DMDimBiblioteques@CODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CambiarNombre\nCalcularIndicadores select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tIND_3_91,\n\t\tIND_3_92,\n\t\tIND_3_93,\n\t\tIND_3_94,\n\t\tIND_3_95,\n\t\tIND_3_96,\n\t\tIND_3_97,\n\t\tIND_3_99,\n\t\tIND_3_910,\n\t\tIND_3_9011,\n\t\tIND_3_9012,\n\t\tIND_3_9013,\n\t\tIND_3_9014,\n\t\tIND_3_9015\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EliminarColumnas\nEliminarColumnas unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nConvierteNullEnCero derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nCambiarNombre derive({a  Llibre} = iif(isNull({a  Llibre}), toString(0), {a  Llibre}),\n\t\t{b  Revista} = iif(isNull({b  Revista}), toString(0), {b  Revista}),\n\t\t{c  Partitura impr.} = iif(isNull({c  Partitura impr.}), toString(0), {c  Partitura impr.}),\n\t\t{d  Partitura manus.} = iif(isNull({d  Partitura manus.}), toString(0), {d  Partitura manus.}),\n\t\t{e  Mapa imprès} = iif(isNull({e  Mapa imprès}), toString(0), {e  Mapa imprès}),\n\t\t{f  Mapa manuscrit} = iif(isNull({f  Mapa manuscrit}), toString(0), {f  Mapa manuscrit}),\n\t\t{g  Vídeo, DVD} = iif(isNull({g  Vídeo DVD}), toString(0), {g  Vídeo DVD}),\n\t\t{i  Sonor no musical} = iif(isNull({i  Sonor no musical}), toString(0), {i  Sonor no musical}),\n\t\t{j  Sonor musical} = iif(isNull({j  Sonor musical}), toString(0), {j  Sonor musical}),\n\t\t{k  Gràfic} = iif(isNull({k  Gràfic}), toString(0), {k  Gràfic}),\n\t\t{l  Article} = iif(isNull({l  Article}), toString(0), {l  Article}),\n\t\t{m  Fitxer informàtic} = iif(isNull({m  Fitxer informàtic}), toString(0), {m  Fitxer informàtic}),\n\t\t{n  Tesi, TFC, etc.} = iif(isNull({n  Tesi}), toString(0), {n  Tesi}),\n\t\t{o  Equip} = iif(isNull({o  Equip}), toString(0), {o  Equip}),\n\t\t{p  Material darxiu} = iif(isNull({p  Material darxiu}), toString(0), {p  Material darxiu}),\n\t\t{r  Objecte} = iif(isNull({r  Objecte}), toString(0), {r  Objecte}),\n\t\t{t  Manuscrit} = iif(isNull({t  Manuscrit}), toString(0), {t  Manuscrit}),\n\t\t{u  Base de dades} = iif(isNull({u  Base de dades}), toString(0), {u  Base de dades}),\n\t\t{v  Revista en línia} = iif(isNull({v  Revista en línia}), toString(0), {v  Revista en línia}),\n\t\t{z  Llibre en línia} = iif(isNull({z  Llibre en línia}), toString(0), {z  Llibre en línia})) ~> QuitarNulos\nSTGFactAltesBibliografics, SelectLocation join(Codi == ID_LOCATION,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nDimLocations select(mapColumn(\n\t\tID_LOCATION,\n\t\tCODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLocation\nUnpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> ConvierteNullEnCero\nJoin, DMDimBiblioteques join(SelectLocation@CODI_BIBLIOTECA == DMDimBiblioteques@CODI_BIBLIOTECA,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS1FactAltesBibliografics"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_ALTES_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_ALTES_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "STGFactAltesExemplars"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesExemplars"
						}
					],
					"transformations": [
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "Datas"
						},
						{
							"name": "EliminarColumnas"
						},
						{
							"name": "Join"
						},
						{
							"name": "SelectAgency"
						},
						{
							"name": "ConvierteNullEnCero"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{4  Llibre prestable } as string,\n\t\t{14  Revista prestable} as string,\n\t\t{24  Sonor prestable} as string,\n\t\t{34  Vídeo prestable} as string,\n\t\t{44  Electrònic prestable} as string,\n\t\t{54  Gràfic prestable} as string,\n\t\t{64  Mapa prestable} as string,\n\t\t{74  Partitura prestable} as string,\n\t\t{84  Altre material prestable} as string,\n\t\t{99  Temari oposicions} as string,\n\t\t{100  Llibre no prestable} as string,\n\t\t{110  Revista no prestable} as string,\n\t\t{120  Sonor no prestable} as string,\n\t\t{130  Vídeo no prestable} as string,\n\t\t{140  Electrònic no prestable} as string,\n\t\t{150  Gràfic no prestable} as string,\n\t\t{160  Mapa no prestable} as string,\n\t\t{170  Partitura no prestable} as string,\n\t\t{173  Manuscrit no prestable} as string,\n\t\t{175  Microforma no prestable} as string,\n\t\t{180  Altre material no prestable} as string,\n\t\t{190  Analítica no prestable} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactAltesExemplars\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as string,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimBiblioteques\nJoin derive(IND_12_222 = toInteger(replace(trim({110  Revista no prestable}),'.','')),\n\t\tIND_12_223 = toInteger(replace(trim({100  Llibre no prestable}),'.','')),\n\t\tIND_12_224 = toInteger(replace(trim({173  Manuscrit no prestable}),'.','')),\n\t\tIND_12_225 = toInteger(replace(trim({120  Sonor no prestable}),'.','')),\n\t\tIND_12_226 = toInteger(replace(trim({130  Vídeo no prestable}),'.','')),\n\t\tIND_12_227 = toInteger(replace(trim({140  Electrònic no prestable}),'.','')),\n\t\tIND_12_228 = toInteger(replace(trim({160  Mapa no prestable}),'.','')),\n\t\tIND_12_229 = toInteger(replace(trim({150  Gràfic no prestable}),'.','')),\n\t\tIND_12_2210 = toInteger(replace(trim({170  Partitura no prestable}),'.','')),\n\t\tIND_12_22011 = toInteger(replace(trim({175  Microforma no prestable}),'.','')),\n\t\tIND_12_22012 = toInteger(replace(trim({180  Altre material no prestable}),'.','')),\n\t\tIND_12_212 = toInteger(replace(trim({14  Revista prestable}),'.','')),\n\t\tIND_12_213 = toInteger(replace(trim({4  Llibre prestable }),'.','')),\n\t\tIND_12_215 = toInteger(replace(trim({24  Sonor prestable}),'.','')),\n\t\tIND_12_216 = toInteger(replace(trim({34  Vídeo prestable}),'.','')),\n\t\tIND_12_217 = toInteger(replace(trim({44  Electrònic prestable}),'.','')),\n\t\tIND_12_218 = toInteger(replace(trim({64  Mapa prestable}),'.','')),\n\t\tIND_12_219 = toInteger(replace(trim({54  Gràfic prestable}),'.','')),\n\t\tIND_12_2110 = toInteger(replace(trim({74  Partitura prestable}),'.','')),\n\t\tIND_12_21012 = toInteger(replace(trim({84  Altre material prestable}),'.','')) + toInteger(replace(trim({99  Temari oposicions}),'.',''))) ~> CrearIndicadores\nEliminarColumnas unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nConvierteNullEnCero derive(DATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd'),\n\t\tDATA_INSERCIO = currentDate()) ~> Datas\nCrearIndicadores select(mapColumn(\n\t\tIND_12_222,\n\t\tIND_12_223,\n\t\tIND_12_224,\n\t\tIND_12_225,\n\t\tIND_12_226,\n\t\tIND_12_227,\n\t\tIND_12_228,\n\t\tIND_12_229,\n\t\tIND_12_2210,\n\t\tIND_12_22011,\n\t\tIND_12_22012,\n\t\tIND_12_212,\n\t\tIND_12_213,\n\t\tIND_12_215,\n\t\tIND_12_216,\n\t\tIND_12_217,\n\t\tIND_12_218,\n\t\tIND_12_219,\n\t\tIND_12_2110,\n\t\tIND_12_21012,\n\t\tCODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EliminarColumnas\nSTGFactAltesExemplars, SelectAgency join(Codi == ID_AGENCY,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nDimBiblioteques select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tID_AGENCY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAgency\nUnpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> ConvierteNullEnCero\nDatas sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_PERIODE as date,\n\t\tDATA_INSERCIO as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS1FactAltesExemplars"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_ALTES_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_ALTES_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "STGFactTotalHoldings"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "DMDimLocations"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMDimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "ODSFactTotalHoldings"
						}
					],
					"transformations": [
						{
							"name": "CalcularIndicadores"
						},
						{
							"name": "BorrarColumnas"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "join1"
						},
						{
							"name": "SumaIndicadoresMismaBiblio"
						},
						{
							"name": "ConvierteNullEnCero"
						},
						{
							"name": "join2"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{-  Sense informar} as string,\n\t\t{0  Desconegut} as string,\n\t\t{1  Altres} as string,\n\t\t{2  Cessada} as string,\n\t\t{4  Es rep} as string,\n\t\t{5  No es rep} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTotalHoldings\nsource(output(\n\t\tID_LOCATION as string,\n\t\tID_TERMINAL as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimLocations\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimBiblioteques\njoin2 derive(IND_14_21 = toInteger(replace(trim({-  Sense informar}),'.','')),\n\t\tIND_14_22 = toInteger(replace(trim({0  Desconegut}),'.','')),\n\t\tIND_14_23 = toInteger(replace(trim({1  Altres}),'.','')),\n\t\tIND_14_24 = toInteger(replace(trim({2  Cessada}),'.','')),\n\t\tIND_14_25 = toInteger(replace(trim({4  Es rep}),'.','')),\n\t\tIND_14_26 = toInteger(replace(trim({5  No es rep}),'.',''))) ~> CalcularIndicadores\nCalcularIndicadores select(mapColumn(\n\t\tCODI_BIBLIOTECA = DMDimBiblioteques@CODI_BIBLIOTECA,\n\t\tIND_14_21,\n\t\tIND_14_22,\n\t\tIND_14_23,\n\t\tIND_14_24,\n\t\tIND_14_25,\n\t\tIND_14_26\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BorrarColumnas\nSumaIndicadoresMismaBiblio unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nConvierteNullEnCero derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nSTGFactTotalHoldings, DMDimLocations join(Codi == ID_LOCATION,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\nBorrarColumnas aggregate(groupBy(CODI_BIBLIOTECA),\n\tIND_14_21 = toInteger(sum(IND_14_21)),\n\t\tIND_14_22 = toInteger(sum(IND_14_22)),\n\t\tIND_14_23 = toInteger(sum(IND_14_23)),\n\t\tIND_14_24 = toInteger(sum(IND_14_24)),\n\t\tIND_14_25 = toInteger(sum(IND_14_25)),\n\t\tIND_14_26 = toInteger(sum(IND_14_26))) ~> SumaIndicadoresMismaBiblio\nUnpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> ConvierteNullEnCero\njoin1, DMDimBiblioteques join(DMDimLocations@CODI_BIBLIOTECA == DMDimBiblioteques@CODI_BIBLIOTECA,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join2\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSFactTotalHoldings"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_ALTES_USUARIS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_ALTES_USUARIS",
								"type": "DatasetReference"
							},
							"name": "STGFactAltesUsuaris"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "DimLocations"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DMDimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_ALTES_USUARIS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactAltesUsuaris"
						}
					],
					"transformations": [
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "EliminarColumnas"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "Join"
						},
						{
							"name": "ConvierteNullEnCero"
						},
						{
							"name": "join1"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{10  General intern} as string,\n\t\t{11  Bad Code} as string,\n\t\t{20  General extern} as string,\n\t\t{25  BEG} as string,\n\t\t{30  Personal de la biblioteca} as string,\n\t\t{110  Institució interna} as string,\n\t\t{120  Institució externa} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactAltesUsuaris\nsource(output(\n\t\tID_LOCATION as string,\n\t\tID_TERMINAL as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimLocations\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimBiblioteques\njoin1 derive(IND_6_21 = toInteger(replace(trim({10  General intern}),'.','')),\n\t\tIND_6_22 = toInteger(replace(trim({20  General extern}),'.','')),\n\t\tIND_6_23 = toInteger(replace(trim({25  BEG}),'.','')),\n\t\tIND_6_24 = toInteger(replace(trim({30  Personal de la biblioteca}),'.','')),\n\t\tIND_6_25 = toInteger(replace(trim({110  Institució interna}),'.','')),\n\t\tIND_6_26 = toInteger(replace(trim({120  Institució externa}),'.',''))) ~> CrearIndicadores\nCrearIndicadores select(mapColumn(\n\t\tIND_6_21,\n\t\tIND_6_22,\n\t\tIND_6_23,\n\t\tIND_6_24,\n\t\tIND_6_25,\n\t\tIND_6_26,\n\t\tCODI_BIBLIOTECA = DMDimBiblioteques@CODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EliminarColumnas\nEliminarColumnas unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nConvierteNullEnCero derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nSTGFactAltesUsuaris, DimLocations join(Codi == ID_LOCATION,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nUnpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> ConvierteNullEnCero\nJoin, DMDimBiblioteques join(DimLocations@CODI_BIBLIOTECA == DMDimBiblioteques@CODI_BIBLIOTECA,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS1FactAltesUsuaris"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_PROCEDENCIA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
								"type": "DatasetReference"
							},
							"name": "STGProcedencia"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "AInteger"
						},
						{
							"name": "CrearIndicadorAltres"
						},
						{
							"name": "Select"
						},
						{
							"name": "join1"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "NullCero"
						},
						{
							"name": "Datas"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Data_Carrega as string",
						"}",
						"source(output(",
						"          Codi as string,",
						"          Significat as string,",
						"          {0} as string,",
						"          {-1} as string,",
						"          {-2} as string,",
						"          {-3} as string,",
						"          {-4} as string,",
						"          {-5} as string,",
						"          {-6} as string,",
						"          {-7} as string,",
						"          {-8} as string,",
						"          {-9} as string,",
						"          {-10} as string,",
						"          {-11} as string,",
						"          {-12} as string,",
						"          {-13} as string,",
						"          {-14} as string,",
						"          {-15} as string,",
						"          {-16} as string,",
						"          {-17} as string,",
						"          {-18} as string,",
						"          {-19} as string,",
						"          {-20} as string,",
						"          {-21} as string,",
						"          {-22} as string,",
						"          {-23} as string,",
						"          {  Totals  } as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT TOP (1000) [Codi]\\n      ,[-1]\\n      ,[-3]\\n      ,[-4]\\n      ,[-6]\\n      ,[-8]\\n      ,[-13]\\n      ,[  Totals  ]\\n  FROM [BEG_STG].[STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA]',",
						"     format: 'query') ~> STGProcedencia",
						"source(output(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_AGENCY as string,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimBiblioteques",
						"AInteger derive(each(match(name=='-1'), 'IND_18_2' = $$),",
						"          each(match(name=='-3'), 'IND_18_3' = $$),",
						"          each(match(name=='-4'), 'IND_18_4' = $$),",
						"          each(match(name=='-6'), 'IND_18_5' = $$),",
						"          each(match(name=='-8'), 'IND_18_6' = $$),",
						"          each(match(name=='-13'), 'IND_18_7' = $$)) ~> CrearIndicadores",
						"join1 derive({-1} = toInteger({-1}),",
						"          {-3} = toInteger({-3}),",
						"          {-4} = toInteger({-4}),",
						"          {-6} = toInteger({-6}),",
						"          {-8} = toInteger({-8}),",
						"          {-13} = toInteger({-13}),",
						"          {  Totals  } = toInteger({  Totals  })) ~> AInteger",
						"CrearIndicadores derive(IND_18_011 = {  Totals  }-IND_18_2-IND_18_3-IND_18_4-IND_18_5-IND_18_6-IND_18_7) ~> CrearIndicadorAltres",
						"CrearIndicadorAltres select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          IND_18_2,",
						"          IND_18_3,",
						"          IND_18_4,",
						"          IND_18_5,",
						"          IND_18_6,",
						"          IND_18_7,",
						"          IND_18_011",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"STGProcedencia, DimBiblioteques join(Codi == ID_AGENCY,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"Select unpivot(output(",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer",
						"     ),",
						"     ungroupBy(CODI_BIBLIOTECA),",
						"     lateral: true,",
						"     ignoreNullPivots: false) ~> Unpivot",
						"Unpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> NullCero",
						"NullCero derive(DATA_INSERCIO = currentDate(),",
						"          DATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> Datas",
						"Datas sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_PROCEDENCIA1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
								"type": "DatasetReference"
							},
							"name": "STGFactProcedencia"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_TOTAL_EXEMPLARS_PROCEDENCIA",
								"type": "DatasetReference"
							},
							"name": "ODS1Procedencia"
						}
					],
					"transformations": [
						{
							"name": "Join"
						},
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "EliminarColumnas"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "Datas"
						},
						{
							"name": "NullCero"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Data_Carrega as string",
						"}",
						"source(output(",
						"          Codi as string,",
						"          Significat as string,",
						"          {0} as string,",
						"          {-1} as string,",
						"          {-2} as string,",
						"          {-3} as string,",
						"          {-4} as string,",
						"          {-5} as string,",
						"          {-6} as string,",
						"          {-7} as string,",
						"          {-8} as string,",
						"          {-9} as string,",
						"          {-10} as string,",
						"          {-11} as string,",
						"          {-12} as string,",
						"          {-13} as string,",
						"          {-14} as string,",
						"          {-15} as string,",
						"          {-16} as string,",
						"          {-17} as string,",
						"          {-18} as string,",
						"          {-19} as string,",
						"          {-20} as string,",
						"          {-21} as string,",
						"          {-22} as string,",
						"          {-23} as string,",
						"          {  Totals  } as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGFactProcedencia",
						"source(output(",
						"          ID_BIBLIOTECA as integer,",
						"          ID_AGENCY as string,",
						"          ID_USUARI as integer,",
						"          CODI_BIBLIOTECA as string,",
						"          ID_TIPUS as integer,",
						"          ID_MODUL as integer,",
						"          CODI_NIDEN as string,",
						"          ID_ESTAT as integer,",
						"          DESC_BIBLIOTECA as string,",
						"          DATA_ALTA_BIBLIO as timestamp,",
						"          DATA_BAIXA_BIBLIO as timestamp,",
						"          ID_TIPUS_VIA as integer,",
						"          DESC_VIA as string,",
						"          NUM_VIA as string,",
						"          INE_MUNICIPI as string,",
						"          ID_DISTRICTE as integer,",
						"          CP as string,",
						"          UTMX as double,",
						"          UTMY as double,",
						"          NUM_LONGITUD as double,",
						"          NUM_LATITUD as double,",
						"          NUM_TELEFON as string,",
						"          NUM_EXTENSIO as string,",
						"          NUM_FAX as string,",
						"          DESC_EMAIL as string,",
						"          DESC_WEB as string,",
						"          FLAG_BEG as boolean,",
						"          FLAG_SLPC as boolean,",
						"          ID_MAPA as integer,",
						"          ID_CATEGORIA as integer,",
						"          ID_TITULARITAT as integer,",
						"          ID_FORMA_ACCES as integer,",
						"          ES_CATALEG_COLECTIU_CCLP as boolean,",
						"          WEB_CATALEG_COLECTIU_CCLP as string,",
						"          ES_CATALEG_COLECTIU_DIP_BCN as boolean,",
						"          WEB_CATALEG_COLECTIU_DIP_BCN as string,",
						"          ES_CATALEG_COLECTIU_CCUC as boolean,",
						"          WEB_CATALEG_COLECTIU_CCUC as string,",
						"          ES_CATALEG_COLECTIU_BEG as boolean,",
						"          WEB_CATALEG_COLECTIU_BEG as string,",
						"          ES_CATALEG_COLECTIU_ALTRES as boolean,",
						"          WEB_CATALEG_COLECTIU_ALTRES as string,",
						"          ID_DIRECTOR_TRACTAMENT as integer,",
						"          DESC_DIRECTOR_NOMB as string,",
						"          DESC_DIRECTOR_PRIMER_COGNOM as string,",
						"          DESC_DIRECTOR_SEGON_COGNOM as string,",
						"          FLAG_ADAPTADA as boolean,",
						"          DESC_OBSERVACIONS as string,",
						"          OBS_ITINERARIS as string,",
						"          DATA_ALTA as timestamp,",
						"          ID_USUARI_ALTA as integer,",
						"          DATA_MODIF as timestamp,",
						"          ID_USUARI_MODIF as integer,",
						"          DATA_BAIXA as timestamp,",
						"          ID_USUARI_BAIXA as integer,",
						"          ID_ADSCRIPCIO as integer,",
						"          ID_CATEGORIA_ESP as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimBiblioteques",
						"STGFactProcedencia, DimBiblioteques join(Codi == ID_AGENCY,",
						"     joinType:'right',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Join",
						"Join derive(IND_18_2 = toInteger(replace(trim({-1}),'.','')),",
						"          IND_18_3 = toInteger(replace(trim({-3}),'.','')),",
						"          IND_18_4 = toInteger(replace(trim({-4}),'.','')),",
						"          IND_18_5 = toInteger(replace(trim({-6}),'.','')),",
						"          IND_18_6 = toInteger(replace(trim({-8}),'.','')),",
						"          IND_18_7 = toInteger(replace(trim({-13}),'.','')),",
						"          IND_18_011 = toInteger(replace(trim({-2}),'.',''))+toInteger(replace(trim({-5}),'.',''))+toInteger(replace(trim({-7}),'.',''))+toInteger(replace(trim({-9}),'.',''))+toInteger(replace(trim({-10}),'.',''))+toInteger(replace(trim({-11}),'.',''))+toInteger(replace(trim({-12}),'.',''))+toInteger(replace(trim({-14}),'.',''))+toInteger(replace(trim({-15}),'.',''))+toInteger(replace(trim({-16}),'.',''))+toInteger(replace(trim({-17}),'.',''))+toInteger(replace(trim({-18}),'.',''))+toInteger(replace(trim({-22}),'.',''))+toInteger(replace(trim({-23}),'.',''))) ~> CrearIndicadores",
						"CrearIndicadores select(mapColumn(",
						"          CODI_BIBLIOTECA,",
						"          IND_18_2,",
						"          IND_18_3,",
						"          IND_18_4,",
						"          IND_18_5,",
						"          IND_18_6,",
						"          IND_18_7,",
						"          IND_18_011",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> EliminarColumnas",
						"EliminarColumnas unpivot(output(",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer",
						"     ),",
						"     ungroupBy(CODI_BIBLIOTECA),",
						"     lateral: true,",
						"     ignoreNullPivots: false) ~> Unpivot",
						"NullCero derive(DATA_INSERCIO = currentDate(),",
						"          DATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> Datas",
						"Unpivot derive(IND_VALOR = iifNull(IND_VALOR, 0)) ~> NullCero",
						"Datas sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_BIBLIOTECA as string,",
						"          CODI_INDICADOR as string,",
						"          IND_VALOR as integer,",
						"          DATA_INSERCIO as date,",
						"          DATA_PERIODE as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODS1Procedencia"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_TOTAL_BIBLIOGRAFICS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "STGFactAltesBibliografics"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "DimLocations"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_BIBLIOGRAFICS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTotalBibliografics"
						}
					],
					"transformations": [
						{
							"name": "CalcularIndicadores"
						},
						{
							"name": "CambiarNombre"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "Select"
						},
						{
							"name": "QuitarNulos"
						},
						{
							"name": "Join"
						},
						{
							"name": "join1"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{-  Bad Code} as string,\n\t\t{a  Llibre} as string,\n\t\t{b  Revista} as string,\n\t\t{c  Partitura impr.} as string,\n\t\t{d  Partitura manus.} as string,\n\t\t{e  Mapa imprès} as string,\n\t\t{f  Mapa manuscrit} as string,\n\t\t{g  Vídeo DVD} as string,\n\t\t{i  Sonor no musical} as string,\n\t\t{j  Sonor musical} as string,\n\t\t{k  Gràfic} as string,\n\t\t{l  Article} as string,\n\t\t{m  Fitxer informàtic} as string,\n\t\t{n  Tesi} as string,\n\t\t{o  Equip} as string,\n\t\t{p  Material d'arxiu} as string,\n\t\t{r  Objecte} as string,\n\t\t{t  Manuscrit} as string,\n\t\t{u  Base de dades} as string,\n\t\t{v  Revista en línia} as string,\n\t\t{z  Llibre en línia} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactAltesBibliografics\nsource(output(\n\t\tID_LOCATION as string,\n\t\tID_TERMINAL as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimLocations\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as integer,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimBiblioteques\nQuitarNulos derive(IND_3_81 = toInteger(toInteger(replace(trim({a  Llibre}),'.',''))+toInteger(replace(trim({z  Llibre en línia}),'.',''))),\n\t\tIND_3_82 = toInteger(toInteger(replace(trim({i  Sonor no musical}),'.',''))+toInteger(replace(trim({j  Sonor musical}),'.',''))),\n\t\tIND_3_83 = toInteger(replace(trim({g  Vídeo DVD}),'.','')),\n\t\tIND_3_84 = toInteger(replace(trim({m  Fitxer informàtic}),'.','')),\n\t\tIND_3_85 = toInteger(replace(trim({b  Revista}),'.',''))+toInteger(replace(trim({v  Revista en línia}),'.','')),\n\t\tIND_3_86 = toInteger(replace(trim({c  Partitura impr.}),'.',''))+toInteger(replace(trim({d  Partitura manus.}),'.','')),\n\t\tIND_3_87 = toInteger(replace(trim({e  Mapa imprès}),'.',''))+toInteger(replace(trim({f  Mapa manuscrit}),'.','')),\n\t\tIND_3_89 = toInteger(replace(trim({o  Equip}),'.','')),\n\t\tIND_3_810 = toInteger(replace(trim({p  Material darxiu}),'.','')),\n\t\tIND_3_8011 = toInteger(replace(trim({r  Objecte}),'.',''))+toInteger(replace(trim({k  Gràfic}),'.','')),\n\t\tIND_3_8012 = toInteger(replace(trim({t  Manuscrit}),'.','')),\n\t\tIND_3_8013 = toInteger(replace(trim({l  Article}),'.','')),\n\t\tIND_3_8014 = toInteger(replace(trim({n  Tesi}),'.','')),\n\t\tIND_3_8015 = toInteger(replace(trim({u  Base de dades}),'.',''))) ~> CalcularIndicadores\njoin1 select(mapColumn(\n\t\tSignificat,\n\t\t{a  Llibre},\n\t\t{b  Revista},\n\t\t{c  Partitura impr.},\n\t\t{d  Partitura manus.},\n\t\t{e  Mapa imprès},\n\t\t{f  Mapa manuscrit},\n\t\t{g  Vídeo DVD},\n\t\t{i  Sonor no musical},\n\t\t{j  Sonor musical},\n\t\t{k  Gràfic},\n\t\t{l  Article},\n\t\t{m  Fitxer informàtic},\n\t\t{n  Tesi},\n\t\t{o  Equip},\n\t\t{p  Material darxiu} = {p  Material d'arxiu},\n\t\t{r  Objecte},\n\t\t{t  Manuscrit},\n\t\t{u  Base de dades},\n\t\t{v  Revista en línia},\n\t\t{z  Llibre en línia},\n\t\tCODI_BIBLIOTECA = DimBiblioteques@CODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CambiarNombre\nSelect unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nUnpivot derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nCalcularIndicadores select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tIND_3_81,\n\t\tIND_3_82,\n\t\tIND_3_83,\n\t\tIND_3_84,\n\t\tIND_3_85,\n\t\tIND_3_86,\n\t\tIND_3_87,\n\t\tIND_3_89,\n\t\tIND_3_810,\n\t\tIND_3_8011,\n\t\tIND_3_8012,\n\t\tIND_3_8013,\n\t\tIND_3_8014,\n\t\tIND_3_8015\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nCambiarNombre derive({a  Llibre} = iif(isNull({a  Llibre}), toString(0), {a  Llibre}),\n\t\t{b  Revista} = iif(isNull({b  Revista}), toString(0), {b  Revista}),\n\t\t{c  Partitura impr.} = iif(isNull({c  Partitura impr.}), toString(0), {c  Partitura impr.}),\n\t\t{d  Partitura manus.} = iif(isNull({d  Partitura manus.}), toString(0), {d  Partitura manus.}),\n\t\t{e  Mapa imprès} = iif(isNull({e  Mapa imprès}), toString(0), {e  Mapa imprès}),\n\t\t{f  Mapa manuscrit} = iif(isNull({f  Mapa manuscrit}), toString(0), {f  Mapa manuscrit}),\n\t\t{g  Vídeo, DVD} = iif(isNull({g  Vídeo DVD}), toString(0), {g  Vídeo DVD}),\n\t\t{i  Sonor no musical} = iif(isNull({i  Sonor no musical}), toString(0), {i  Sonor no musical}),\n\t\t{j  Sonor musical} = iif(isNull({j  Sonor musical}), toString(0), {j  Sonor musical}),\n\t\t{k  Gràfic} = iif(isNull({k  Gràfic}), toString(0), {k  Gràfic}),\n\t\t{l  Article} = iif(isNull({l  Article}), toString(0), {l  Article}),\n\t\t{m  Fitxer informàtic} = iif(isNull({m  Fitxer informàtic}), toString(0), {m  Fitxer informàtic}),\n\t\t{n  Tesi, TFC, etc.} = iif(isNull({n  Tesi}), toString(0), {n  Tesi}),\n\t\t{o  Equip} = iif(isNull({o  Equip}), toString(0), {o  Equip}),\n\t\t{p  Material darxiu} = iif(isNull({p  Material darxiu}), toString(0), {p  Material darxiu}),\n\t\t{r  Objecte} = iif(isNull({r  Objecte}), toString(0), {r  Objecte}),\n\t\t{t  Manuscrit} = iif(isNull({t  Manuscrit}), toString(0), {t  Manuscrit}),\n\t\t{u  Base de dades} = iif(isNull({u  Base de dades}), toString(0), {u  Base de dades}),\n\t\t{v  Revista en línia} = iif(isNull({v  Revista en línia}), toString(0), {v  Revista en línia}),\n\t\t{z  Llibre en línia} = iif(isNull({z  Llibre en línia}), toString(0), {z  Llibre en línia})) ~> QuitarNulos\nSTGFactAltesBibliografics, DimLocations join(Codi == ID_LOCATION,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nJoin, DimBiblioteques join(DimLocations@CODI_BIBLIOTECA == DimBiblioteques@CODI_BIBLIOTECA,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS1FactTotalBibliografics"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_TOTAL_EXEMPLARS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "STGFactTotalExemplars"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_BIBLIOTEQUES",
								"type": "DatasetReference"
							},
							"name": "DimBiblioteques"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_EXEMPLARS",
								"type": "DatasetReference"
							},
							"name": "ODS1FactTotalExemplars"
						}
					],
					"transformations": [
						{
							"name": "CrearIndicadores"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "EliminarColumnas"
						},
						{
							"name": "SelectAgency"
						},
						{
							"name": "Join"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{4  Llibre prestable } as string,\n\t\t{14  Revista prestable} as string,\n\t\t{24  Sonor prestable} as string,\n\t\t{34  Vídeo prestable} as string,\n\t\t{44  Electrònic prestable} as string,\n\t\t{54  Gràfic prestable} as string,\n\t\t{64  Mapa prestable} as string,\n\t\t{74  Partitura prestable} as string,\n\t\t{84  Altre material prestable} as string,\n\t\t{99  Temari oposicions} as string,\n\t\t{100  Llibre no prestable} as string,\n\t\t{110  Revista no prestable} as string,\n\t\t{120  Sonor no prestable} as string,\n\t\t{130  Vídeo no prestable} as string,\n\t\t{140  Electrònic no prestable} as string,\n\t\t{150  Gràfic no prestable} as string,\n\t\t{160  Mapa no prestable} as string,\n\t\t{170  Partitura no prestable} as string,\n\t\t{173  Manuscrit no prestable} as string,\n\t\t{175  Microforma no prestable} as string,\n\t\t{180  Altre material no prestable} as string,\n\t\t{190  Analítica no prestable} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTotalExemplars\nsource(output(\n\t\tID_BIBLIOTECA as integer,\n\t\tID_AGENCY as string,\n\t\tID_USUARI as integer,\n\t\tCODI_BIBLIOTECA as string,\n\t\tID_TIPUS as integer,\n\t\tID_MODUL as integer,\n\t\tCODI_NIDEN as string,\n\t\tID_ESTAT as integer,\n\t\tDESC_BIBLIOTECA as string,\n\t\tDATA_ALTA_BIBLIO as timestamp,\n\t\tDATA_BAIXA_BIBLIO as timestamp,\n\t\tID_TIPUS_VIA as integer,\n\t\tDESC_VIA as string,\n\t\tNUM_VIA as string,\n\t\tINE_MUNICIPI as string,\n\t\tID_DISTRICTE as integer,\n\t\tCP as string,\n\t\tUTMX as double,\n\t\tUTMY as double,\n\t\tNUM_LONGITUD as double,\n\t\tNUM_LATITUD as double,\n\t\tNUM_TELEFON as string,\n\t\tNUM_EXTENSIO as string,\n\t\tNUM_FAX as string,\n\t\tDESC_EMAIL as string,\n\t\tDESC_WEB as string,\n\t\tFLAG_BEG as boolean,\n\t\tFLAG_SLPC as boolean,\n\t\tID_MAPA as integer,\n\t\tID_CATEGORIA as integer,\n\t\tID_TITULARITAT as integer,\n\t\tID_FORMA_ACCES as integer,\n\t\tES_CATALEG_COLECTIU_CCLP as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCLP as string,\n\t\tES_CATALEG_COLECTIU_DIP_BCN as boolean,\n\t\tWEB_CATALEG_COLECTIU_DIP_BCN as string,\n\t\tES_CATALEG_COLECTIU_CCUC as boolean,\n\t\tWEB_CATALEG_COLECTIU_CCUC as string,\n\t\tES_CATALEG_COLECTIU_BEG as boolean,\n\t\tWEB_CATALEG_COLECTIU_BEG as string,\n\t\tES_CATALEG_COLECTIU_ALTRES as boolean,\n\t\tWEB_CATALEG_COLECTIU_ALTRES as string,\n\t\tID_DIRECTOR_TRACTAMENT as integer,\n\t\tDESC_DIRECTOR_NOMB as string,\n\t\tDESC_DIRECTOR_PRIMER_COGNOM as string,\n\t\tDESC_DIRECTOR_SEGON_COGNOM as string,\n\t\tFLAG_ADAPTADA as boolean,\n\t\tDESC_OBSERVACIONS as string,\n\t\tOBS_ITINERARIS as string,\n\t\tDATA_ALTA as timestamp,\n\t\tID_USUARI_ALTA as integer,\n\t\tDATA_MODIF as timestamp,\n\t\tID_USUARI_MODIF as integer,\n\t\tDATA_BAIXA as timestamp,\n\t\tID_USUARI_BAIXA as integer,\n\t\tID_ADSCRIPCIO as integer,\n\t\tID_CATEGORIA_ESP as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimBiblioteques\nJoin derive(IND_12_122 = toInteger(replace(trim({110  Revista no prestable}),'.','')),\n\t\tIND_12_123 = toInteger(replace(trim({100  Llibre no prestable}),'.','')),\n\t\tIND_12_124 = toInteger(replace(trim({173  Manuscrit no prestable}),'.','')),\n\t\tIND_12_125 = toInteger(replace(trim({120  Sonor no prestable}),'.','')),\n\t\tIND_12_126 = toInteger(replace(trim({130  Vídeo no prestable}),'.','')),\n\t\tIND_12_127 = toInteger(replace(trim({140  Electrònic no prestable}),'.','')),\n\t\tIND_12_128 = toInteger(replace(trim({160  Mapa no prestable}),'.','')),\n\t\tIND_12_129 = toInteger(replace(trim({150  Gràfic no prestable}),'.','')),\n\t\tIND_12_1210 = toInteger(replace(trim({170  Partitura no prestable}),'.','')),\n\t\tIND_12_12011 = toInteger(replace(trim({175  Microforma no prestable}),'.','')),\n\t\tIND_12_12012 = toInteger(replace(trim({180  Altre material no prestable}),'.','')),\n\t\tIND_12_112 = toInteger(replace(trim({14  Revista prestable}),'.','')),\n\t\tIND_12_113 = toInteger(replace(trim({4  Llibre prestable }),'.','')),\n\t\tIND_12_115 = toInteger(replace(trim({24  Sonor prestable}),'.','')),\n\t\tIND_12_116 = toInteger(replace(trim({34  Vídeo prestable}),'.','')),\n\t\tIND_12_117 = toInteger(replace(trim({44  Electrònic prestable}),'.','')),\n\t\tIND_12_118 = toInteger(replace(trim({64  Mapa prestable}),'.','')),\n\t\tIND_12_119 = toInteger(replace(trim({54  Gràfic prestable}),'.','')),\n\t\tIND_12_1110 = toInteger(replace(trim({74  Partitura prestable}),'.','')),\n\t\tIND_12_11012 = toInteger(replace(trim({84  Altre material prestable}),'.','')) + toInteger(replace(trim({99  Temari oposicions}),'.',''))) ~> CrearIndicadores\nEliminarColumnas unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nUnpivot derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nCrearIndicadores select(mapColumn(\n\t\tIND_12_122,\n\t\tIND_12_123,\n\t\tIND_12_124,\n\t\tIND_12_125,\n\t\tIND_12_126,\n\t\tIND_12_127,\n\t\tIND_12_128,\n\t\tIND_12_129,\n\t\tIND_12_1210,\n\t\tIND_12_12011,\n\t\tIND_12_12012,\n\t\tIND_12_112,\n\t\tIND_12_113,\n\t\tIND_12_115,\n\t\tIND_12_116,\n\t\tIND_12_117,\n\t\tIND_12_118,\n\t\tIND_12_119,\n\t\tIND_12_1110,\n\t\tIND_12_11012,\n\t\tCODI_BIBLIOTECA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EliminarColumnas\nDimBiblioteques select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tID_AGENCY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAgency\nSTGFactTotalExemplars, SelectAgency join(Codi == ID_AGENCY,\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nDataInsercio sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODS1FactTotalExemplars"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS1_BEG_FACT_TOTAL_HOLDINGS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_BEG_FACT_TOTAL_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "STGFactTotalHoldings"
						},
						{
							"dataset": {
								"referenceName": "DM_BEG_DIM_LOCATIONS",
								"type": "DatasetReference"
							},
							"name": "DMDimLocations"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS1_BEG_FACT_INDICADORS_TOTAL_HOLDINGS",
								"type": "DatasetReference"
							},
							"name": "ODSFactTotalHoldings"
						}
					],
					"transformations": [
						{
							"name": "CalcularIndicadores"
						},
						{
							"name": "Unpivot"
						},
						{
							"name": "DataInsercio"
						},
						{
							"name": "Join"
						},
						{
							"name": "Select"
						},
						{
							"name": "BorrarColumnas"
						},
						{
							"name": "SumaIndicadoresMismaBiblio"
						}
					],
					"script": "parameters{\n\tData_Carrega as string\n}\nsource(output(\n\t\tCodi as string,\n\t\tSignificat as string,\n\t\t{-  Sense informar} as string,\n\t\t{0  Desconegut} as string,\n\t\t{1  Altres} as string,\n\t\t{2  Cessada} as string,\n\t\t{4  Es rep} as string,\n\t\t{5  No es rep} as string,\n\t\t{  Totals  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTotalHoldings\nsource(output(\n\t\tID_LOCATION as string,\n\t\tID_TERMINAL as string,\n\t\tCODI_BIBLIOTECA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimLocations\nJoin derive(IND_14_11 = toInteger(replace(trim({-  Sense informar}),'.','')),\n\t\tIND_14_12 = toInteger(replace(trim({0  Desconegut}),'.','')),\n\t\tIND_14_13 = toInteger(replace(trim({1  Altres}),'.','')),\n\t\tIND_14_14 = toInteger(replace(trim({2  Cessada}),'.','')),\n\t\tIND_14_15 = toInteger(replace(trim({4  Es rep}),'.','')),\n\t\tIND_14_16 = toInteger(replace(trim({5  No es rep}),'.',''))) ~> CalcularIndicadores\nSumaIndicadoresMismaBiblio unpivot(output(\n\t\tCODI_INDICADOR as string,\n\t\tVALOR as integer\n\t),\n\tungroupBy(CODI_BIBLIOTECA),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nUnpivot derive(DATA_INSERCIO = currentDate(),\n\t\tDATA_PERIODE = toDate(concat($Data_Carrega,'01'),'yyyyMMdd')) ~> DataInsercio\nSTGFactTotalHoldings, DMDimLocations join(Codi == ID_LOCATION,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nDataInsercio select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tCODI_INDICADOR,\n\t\tIND_VALOR = VALOR,\n\t\tDATA_INSERCIO,\n\t\tDATA_PERIODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nCalcularIndicadores select(mapColumn(\n\t\tCODI_BIBLIOTECA,\n\t\tIND_14_11,\n\t\tIND_14_12,\n\t\tIND_14_13,\n\t\tIND_14_14,\n\t\tIND_14_15,\n\t\tIND_14_16\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BorrarColumnas\nBorrarColumnas aggregate(groupBy(CODI_BIBLIOTECA),\n\tIND_14_11 = toInteger(sum(IND_14_11)),\n\t\tIND_14_12 = toInteger(sum(IND_14_12)),\n\t\tIND_14_13 = toInteger(sum(IND_14_13)),\n\t\tIND_14_14 = toInteger(sum(IND_14_14)),\n\t\tIND_14_15 = toInteger(sum(IND_14_15)),\n\t\tIND_14_16 = toInteger(sum(IND_14_16))) ~> SumaIndicadoresMismaBiblio\nSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCODI_BIBLIOTECA as string,\n\t\tCODI_INDICADOR as string,\n\t\tIND_VALOR as integer,\n\t\tDATA_INSERCIO as date,\n\t\tDATA_PERIODE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSFactTotalHoldings"
				}
			},
			"dependsOn": []
		}
	]
}
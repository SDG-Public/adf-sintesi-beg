{
	"name": "DF_STG_BEG_HIST_FACT_PRESTECS",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_BEG_FACT_PRESTECS",
						"type": "DatasetReference"
					},
					"name": "STGPrestecs"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "STG_BEG_HIST_FACT_PRESTECS",
						"type": "DatasetReference"
					},
					"name": "STGHistFactPrestecs"
				}
			],
			"transformations": [
				{
					"name": "Datas"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Data_Carrega as string",
				"}",
				"source(output(",
				"          AGENCY as string,",
				"          LOCATION as string,",
				"          {I TYPE} as string,",
				"          {OUT DATE} as string,",
				"          {OUT LOC} as string,",
				"          {PAT AGENCY} as string,",
				"          {HOME LIBR} as string,",
				"          {P TYPE} as string,",
				"          {RECORD #(Patron)} as string,",
				"          {RECORD #(Item)} as string,",
				"          { DE BARRES} as string,",
				"          {CALL #} as string,",
				"          {RECORD #(BIBLIO)} as string,",
				"          LANG as string,",
				"          {MAT TYPE} as string,",
				"          {BIB LVL} as string,",
				"          COUNTRY as string,",
				"          {008 Data 1} as string,",
				"          {020} as string,",
				"          {022} as string,",
				"          {CLASIF CDU} as string,",
				"          AUTHOR as string,",
				"          TITLE as string,",
				"          {PUB INFO} as string,",
				"          IUSE3 as string,",
				"          {INTL USE} as string,",
				"          {IN LOC} as string,",
				"          PCODE1 as string,",
				"          PCODE3 as string,",
				"          PCODE2 as string,",
				"          {ADREÇA} as string,",
				"          PCODE4 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> STGPrestecs",
				"STGPrestecs derive(DATA_INSERCIO = currentDate(),",
				"          DATA_PERIODE = toDate(concat($Data_Carrega, '01'),'yyyyMMdd')) ~> Datas",
				"Datas sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID_AGENCY as string,",
				"          ID_LOCATION as string,",
				"          CODI_I_TYPE as string,",
				"          DATA_OUT_DATE as string,",
				"          ID_OUT_LOC as string,",
				"          NUM_PAT_AGENCY as string,",
				"          NUM_HOME_LIBR as string,",
				"          NUM_P_TYPE as string,",
				"          CODI_RECORD_PATRON as string,",
				"          CODI_RECORD_ITEM as string,",
				"          NUM_DE_BARRES as string,",
				"          NUM_CALL as string,",
				"          DESC_RECORD_BIBLIO as string,",
				"          CODI_LANG as string,",
				"          CODI_MAT_TYPE as string,",
				"          CODI_BIB_LVL as string,",
				"          CODI_COUNTRY as string,",
				"          CODI_008 as string,",
				"          CODI_020 as string,",
				"          CODI_022 as string,",
				"          CODI_CLASIF_CDU as string,",
				"          DESC_AUTHOR as string,",
				"          DESC_TITLE as string,",
				"          DESC_PUB_INFO as string,",
				"          CODI_IUSE3 as string,",
				"          CODI_INTL_USE as string,",
				"          CODI_IN_LOC as string,",
				"          CODI_PCODE1 as string,",
				"          CODI_PCODE3 as string,",
				"          CODI_PCODE2 as string,",
				"          {DESC_ADREÇA} as string,",
				"          CODI_PCODE4 as string,",
				"          DATA_INSERCIO as date,",
				"          DATA_PERIODE as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ID_AGENCY = AGENCY,",
				"          ID_LOCATION = LOCATION,",
				"          CODI_I_TYPE = {I TYPE},",
				"          DATA_OUT_DATE = {OUT DATE},",
				"          ID_OUT_LOC = {OUT LOC},",
				"          NUM_PAT_AGENCY = {PAT AGENCY},",
				"          NUM_HOME_LIBR = {HOME LIBR},",
				"          NUM_P_TYPE = {P TYPE},",
				"          CODI_RECORD_PATRON = {RECORD #(Patron)},",
				"          CODI_RECORD_ITEM = {RECORD #(Item)},",
				"          NUM_DE_BARRES = { DE BARRES},",
				"          NUM_CALL = {CALL #},",
				"          DESC_RECORD_BIBLIO = {RECORD #(BIBLIO)},",
				"          CODI_LANG = LANG,",
				"          CODI_MAT_TYPE = {MAT TYPE},",
				"          CODI_BIB_LVL = {BIB LVL},",
				"          CODI_COUNTRY = COUNTRY,",
				"          CODI_008 = {008 Data 1},",
				"          CODI_020 = {020},",
				"          CODI_022 = {022},",
				"          CODI_CLASIF_CDU = {CLASIF CDU},",
				"          DESC_AUTHOR = AUTHOR,",
				"          DESC_TITLE = TITLE,",
				"          DESC_PUB_INFO = {PUB INFO},",
				"          CODI_IUSE3 = IUSE3,",
				"          CODI_INTL_USE = {INTL USE},",
				"          CODI_IN_LOC = {IN LOC},",
				"          CODI_PCODE1 = PCODE1,",
				"          CODI_PCODE3 = PCODE3,",
				"          CODI_PCODE2 = PCODE2,",
				"          {DESC_ADREÇA} = {ADREÇA},",
				"          CODI_PCODE4 = PCODE4,",
				"          DATA_INSERCIO,",
				"          DATA_PERIODE",
				"     )) ~> STGHistFactPrestecs"
			]
		}
	}
}